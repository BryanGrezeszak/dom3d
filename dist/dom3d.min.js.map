{"version":3,"sources":["webpack:///dom3d.min.js","webpack:///webpack/bootstrap 5aa6dc8d4fe291fae125","webpack:///./C:/Users/R2D2/projects/dom3d/src/dom3d.js","webpack:///./C:/Users/R2D2/projects/dom3d/src/DisplayObject3D.js","webpack:///./C:/Users/R2D2/projects/dom3d/src/geom/Matrix3x3.js","webpack:///./C:/Users/R2D2/projects/dom3d/src/utils/MathUtils.js","webpack:///./C:/Users/R2D2/projects/dom3d/src/geom/Transform3D.js","webpack:///./C:/Users/R2D2/projects/dom3d/src/geom/Point3D.js","webpack:///./C:/Users/R2D2/projects/dom3d/src/geom/Quaternion.js","webpack:///./C:/Users/R2D2/projects/dom3d/src/geom/EulerAngle.js","webpack:///./C:/Users/R2D2/projects/dom3d/src/geom/CalculatedInfo.js","webpack:///./C:/Users/R2D2/projects/dom3d/src/utils/PropNames.js","webpack:///./C:/Users/R2D2/projects/dom3d/src/Stage3D.js","webpack:///./C:/Users/R2D2/projects/dom3d/src/events/StageEvent.js","webpack:///./C:/Users/R2D2/projects/dom3d/src/utils/determineElement.js","webpack:///./C:/Users/R2D2/projects/dom3d/src/Group3D.js","webpack:///./C:/Users/R2D2/projects/dom3d/src/Element3D.js","webpack:///./C:/Users/R2D2/projects/dom3d/src/PaperElement3D.js","webpack:///./C:/Users/R2D2/projects/dom3d/src/effects/DepthOfField.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","spread","includeGeom","arguments","length","undefined","includeSpread","window","DisplayObject3D","_DisplayObject3D2","Stage3D","_Stage3D2","Group3D","_Group3D2","Element3D","_Element3D2","PaperElement3D","_PaperElement3D2","StageEvent","_StageEvent2","DepthOfField","_DepthOfField2","Point3D","_Point3D2","Matrix3x3","_Matrix3x2","EulerAngle","_EulerAngle2","Quaternion","_Quaternion2","Transform3D","_Transform3D2","_DisplayObject3D","_Stage3D","_Group3D","_Element3D","_PaperElement3D","_Point3D","_Matrix3x","_EulerAngle","_Quaternion","_Transform3D","_StageEvent","_DepthOfField","dom3d","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","i","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_CalculatedInfo","_CalculatedInfo2","_MathUtils","_PropNames","_PropNames2","this","_x","_y","_z","_rotX","_rotY","_rotZ","_regX","_regY","_dirty","matrix","transform3D","element","stage","parent","calc","Error","EVENT_ERROR","type","listener","useCapture","wantsUntrusted","addEventListener","removeEventListener","evt","dispatchEvent","s","pDirty","copyConcatenated","eulerAngle","updateData","TO_RAD","quaternion","updateFromEuler","coordinates","concatenatedQuaternion","concatenate","concatenatedEulerAngle","updateFromQuaternion","concatenatedCoordinates","rotateAndUpdate","transformMatrix","zoom","metaPoint","relevantZ","orthographic","z","style","display","factor","scaling","Math","pow","distortion","tx","x","ty","y","scale","rx","regX","ry","regY","transformString","a","toFixed","b","d","transformOriginString","transform","transformOrigin","ii","effects","effect","render","get","set","v","idCount","_a","_b","_c","_d","_tx","_ty","_scaleBy","e","srz","sin","phi","crz","cos","sry","theta","cry","srx","psi","crx","crz_crx","srz_crx","sry_srx","add_cry","sub_cry","x1","y1","x2","y2","PI","asin","sqrt","atan2","TO_DEG","t","copy","copyInverse","zero","toString","point","angle","xy","xz","yx","yz","zx","zy","_X","_Y","_Z","p1","p2","z2","w","_w","q","w1","z1","tw","tz","tester","euler","hPhi","hTheta","hPsi","sin_hPhi","cos_hPhi","sin_hTheta","cos_hTheta","sin_hPsi","cos_hPsi","magnitude","qw","qx","qy","qz","q1","q2","w2","aphi","atheta","apsi","_phi","_theta","_psi","ea","CalculatedInfo","rotX","rotY","rotZ","reference","index","possible_transform","possible_transform_origin","possible_perspective","possible_perspective_origin","n","document","createElement","PropNames","perspective","perspectiveOrigin","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","_DisplayObject3D3","_determineElement","_determineElement2","_el","autoRend","fps","_this","getPrototypeOf","hasAttribute","attributes","dom3dObject","registeredChildren","lowestZIndex","updateInterval","children","isGroup","_FPS","_autoRender","autoRender","_orthographic","contains","remove","push","registerChild","parentElement","appendChild","position","sort","ind","indexOf","splice","unregisterChild","ch","setStage","cont","UPDATE","AFTER_UPDATE","forceUpdate","sZ","zIndex","boundUpdate","update","bind","setInterval","setTimeout","clearInterval","initObj","bubbles","cancelable","Event","createEvent","initEvent","determineElement","content","HTMLElement","_typeof","buildElementFromObject","charAt","wrap","innerHTML","firstChild","querySelector","elem","src","setAttribute","className","Array","isArray","join","alt","Symbol","iterator","updateWorld","rotateCoords","lockFacingFront","rotateObject","renderObject","_fel","_bel","buildPoint","top","left","front","back","frontFacing","_f","determined_fel","determined_bel","p3","determineFace","p1rect","getBoundingClientRect","p2rect","p3rect","p1x","p1y","p2x","p2y","p3x","p3y","visibility","pointerEvents","strength","trueDistance","focus","coords","dist","distance","abs","blurAmt","newVal","filter","webkitFilter"],"mappings":"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","file":"dom3d.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _DisplayObject3D = __webpack_require__(1);\n\t\n\tvar _DisplayObject3D2 = _interopRequireDefault(_DisplayObject3D);\n\t\n\tvar _Stage3D = __webpack_require__(10);\n\t\n\tvar _Stage3D2 = _interopRequireDefault(_Stage3D);\n\t\n\tvar _Group3D = __webpack_require__(13);\n\t\n\tvar _Group3D2 = _interopRequireDefault(_Group3D);\n\t\n\tvar _Element3D = __webpack_require__(14);\n\t\n\tvar _Element3D2 = _interopRequireDefault(_Element3D);\n\t\n\tvar _PaperElement3D = __webpack_require__(15);\n\t\n\tvar _PaperElement3D2 = _interopRequireDefault(_PaperElement3D);\n\t\n\tvar _Point3D = __webpack_require__(5);\n\t\n\tvar _Point3D2 = _interopRequireDefault(_Point3D);\n\t\n\tvar _Matrix3x = __webpack_require__(2);\n\t\n\tvar _Matrix3x2 = _interopRequireDefault(_Matrix3x);\n\t\n\tvar _EulerAngle = __webpack_require__(7);\n\t\n\tvar _EulerAngle2 = _interopRequireDefault(_EulerAngle);\n\t\n\tvar _Quaternion = __webpack_require__(6);\n\t\n\tvar _Quaternion2 = _interopRequireDefault(_Quaternion);\n\t\n\tvar _Transform3D = __webpack_require__(4);\n\t\n\tvar _Transform3D2 = _interopRequireDefault(_Transform3D);\n\t\n\tvar _StageEvent = __webpack_require__(11);\n\t\n\tvar _StageEvent2 = _interopRequireDefault(_StageEvent);\n\t\n\tvar _DepthOfField = __webpack_require__(16);\n\t\n\tvar _DepthOfField2 = _interopRequireDefault(_DepthOfField);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar dom3d = {\n\t\tspread: spread,\n\t\tDisplayObject3D: _DisplayObject3D2.default,\n\t\tStage3D: _Stage3D2.default,\n\t\tGroup3D: _Group3D2.default,\n\t\tElement3D: _Element3D2.default,\n\t\tPaperElement3D: _PaperElement3D2.default,\n\t\tStageEvent: _StageEvent2.default,\n\t\tDepthOfField: _DepthOfField2.default,\n\t\tPoint3D: _Point3D2.default,\n\t\tMatrix3x3: _Matrix3x2.default,\n\t\tEulerAngle: _EulerAngle2.default,\n\t\tQuaternion: _Quaternion2.default,\n\t\tTransform3D: _Transform3D2.default\n\t};\n\tmodule.exports = dom3d;\n\t\n\t// if is in browser environment then add dom3d to window\n\tif (typeof window !== 'undefined') {\n\t\twindow.dom3d = {};\n\t\tspread(window.dom3d, true, true);\n\t}\n\t\n\t// spread util\n\tfunction spread(obj) {\n\t\tvar includeGeom = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\t\tvar includeSpread = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\t\n\t\tif (!obj) obj = window;\n\t\n\t\tobj.DisplayObject3D = _DisplayObject3D2.default;\n\t\tobj.Stage3D = _Stage3D2.default;\n\t\tobj.Group3D = _Group3D2.default;\n\t\tobj.Element3D = _Element3D2.default;\n\t\tobj.PaperElement3D = _PaperElement3D2.default;\n\t\n\t\tobj.StageEvent = _StageEvent2.default;\n\t\n\t\tobj.DepthOfField = _DepthOfField2.default;\n\t\n\t\tif (includeGeom) {\n\t\t\tobj.Point3D = _Point3D2.default;\n\t\t\tobj.Matrix3x3 = _Matrix3x2.default;\n\t\t\tobj.EulerAngle = _EulerAngle2.default;\n\t\t\tobj.Quaternion = _Quaternion2.default;\n\t\t\tobj.Transform3D = _Transform3D2.default;\n\t\t}\n\t\n\t\tif (includeSpread) {\n\t\t\tobj.spread = spread;\n\t\t}\n\t}\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Matrix3x = __webpack_require__(2);\n\t\n\tvar _Matrix3x2 = _interopRequireDefault(_Matrix3x);\n\t\n\tvar _Transform3D = __webpack_require__(4);\n\t\n\tvar _Transform3D2 = _interopRequireDefault(_Transform3D);\n\t\n\tvar _CalculatedInfo = __webpack_require__(8);\n\t\n\tvar _CalculatedInfo2 = _interopRequireDefault(_CalculatedInfo);\n\t\n\tvar _MathUtils = __webpack_require__(3);\n\t\n\tvar _PropNames = __webpack_require__(9);\n\t\n\tvar _PropNames2 = _interopRequireDefault(_PropNames);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar DisplayObject3D = function () {\n\t\t/**\r\n\t * The DisplayObject3D class is an abstract class that serves as the base for all 3D capable elements to be used within a dom3d {@link Stage3D} scene. It is not meant to be directly instantiated.\r\n\t * <br/><br/>\r\n\t * All DOM elements associated with any dom3d class that inherits from DisplayObject3D (with the exception of Stage3D class objects) should be assumed to operate with a CSS display of 'block' and a CSS position of 'absolute'.\r\n\t * @class DisplayObject3D\r\n\t * @abstract\r\n\t */\n\t\tfunction DisplayObject3D() {\n\t\t\t_classCallCheck(this, DisplayObject3D);\n\t\n\t\t\t// private\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\n\t\t\t// private\n\t\t\tthis._rotX = 0;\n\t\t\tthis._rotY = 0;\n\t\t\tthis._rotZ = 0;\n\t\n\t\t\t// private\n\t\t\tthis._regX = 0;\n\t\t\tthis._regY = 0;\n\t\n\t\t\t// private\n\t\t\tthis._dirty = true;\n\t\n\t\t\t// used internally\n\t\t\tthis.matrix = new _Matrix3x2.default();\n\t\t\tthis.transform3D = new _Transform3D2.default();\n\t\n\t\t\t/**\r\n\t  * Each DisplayObject3D has a unique id property. When the element it represents has an id attribute at the time of instantiation it will match its element's id. Otherwise a unique one will be generated. You can also assign your own.\r\n\t  * @var DisplayObject3D#id {String}\r\n\t  * @default generated if the element has no id\r\n\t  **/\n\t\t\tthis.id = '';\n\t\n\t\t\t/**\r\n\t  * Every DisplayObject3D represents an HTML Element. You can access that element by accessing the object's element property. Conversely any element that has an associated DisplayObject3D will have a property .dom3dObject which references its DisplayObject3D.\r\n\t  * @var DisplayObject3D#element {HTMLElement}\r\n\t  * @readonly\r\n\t  * @default null\r\n\t  **/\n\t\t\tthis.element = null;\n\t\n\t\t\t/**\r\n\t  * Each DisplayObject3D has a stage property that allows it to tell which stage it is currently in the display list of. Is null when not in a display list.\r\n\t  * @var DisplayObject3D#stage {Stage3D}\r\n\t  * @readonly\r\n\t  * @default null\r\n\t  **/\n\t\t\tthis.stage = null;\n\t\n\t\t\t/**\r\n\t  * Each DisplayObject3D has a parent property that allows it to tell which object is currently this object's parent in the display list. null if it is not in the display list. This is a reflection of the dom3d display list, not necessarily of the actual HTML parent/child structure.\r\n\t  * @var DisplayObject3D#parent {DisplayObject3D}\r\n\t  * @readonly\r\n\t  * @default null\r\n\t  **/\n\t\t\tthis.parent = null;\n\t\n\t\t\t/**\r\n\t  Each DisplayObject3D has a calc property that allows for easy reading of the final calculated x, y, z, rotX, rotY, and rotZ values.\r\n\t  * @var DisplayObject3D#calc {Object}\r\n\t  * @readonly\r\n\t  * @note The values on this property are only fully accurate immediately after a render/update. If you've changed values between render and reading then readings here may no longer be accurate.\r\n\t  **/\n\t\t\tthis.calc = new _CalculatedInfo2.default(this);\n\t\t}\n\t\n\t\t/**\r\n\t * The x property sets the x coordinate value for the DisplayObject3D instance.\r\n\t * @var DisplayObject3D#x {Number}\r\n\t * @default 0\r\n\t **/\n\t\n\t\n\t\t_createClass(DisplayObject3D, [{\n\t\t\tkey: 'addEventListener',\n\t\n\t\n\t\t\t// for clarity, make sure if they try work with events directly on dom3d object it shouldn't work\n\t\t\t// only the shortcut usages should work, that way it keeps clear that it is a library driven event adding\n\t\t\tvalue: function addEventListener() {\n\t\t\t\tthrow new Error(EVENT_ERROR);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'removeEventListener',\n\t\t\tvalue: function removeEventListener() {\n\t\t\t\tthrow new Error(EVENT_ERROR);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'dispatchEvent',\n\t\t\tvalue: function dispatchEvent() {\n\t\t\t\tthrow new Error(EVENT_ERROR);\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  * Shortcut for adding event listeners to the object's dom element. Works same as `myObj.element.addEventListener(...);`\r\n\t  * @method DisplayObject3D#addListener\r\n\t  * @note All events are handled on the `element` property. This is only a shortcut.\r\n\t  * @arg type - Identical to normal event listening.\r\n\t  * @arg listener - Identical to normal event listening.\r\n\t  * @arg [useCapture] - (optional) Identical to normal event listening.\r\n\t  * @arg [wantsUntrusted] - (optional) Identical to normal event listening.\r\n\t  */\n\t\n\t\t}, {\n\t\t\tkey: 'addListener',\n\t\t\tvalue: function addListener(type, listener, useCapture, wantsUntrusted) {\n\t\t\t\treturn this.element.addEventListener(type, listener, useCapture, wantsUntrusted);\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  * Shortcut for removing event listeners from the object's dom element. Works same as `myObj.element.removeEventListener(...);`\r\n\t  * @method DisplayObject3D#removeListener\r\n\t  * @note All events are handled on the `element` property. This is only a shortcut.\r\n\t  * @arg type - Identical to normal event listening.\r\n\t  * @arg listener - Identical to normal event listening.\r\n\t  * @arg [useCapture] - (optional) Identical to normal event listening.\r\n\t  */\n\t\n\t\t}, {\n\t\t\tkey: 'removeListener',\n\t\t\tvalue: function removeListener(type, listener, useCapture) {\n\t\t\t\treturn this.element.removeEventListener(type, listener, useCapture);\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  * Shortcut for dispatching events from the object's dom element. Works same as `myObj.element.dispatchEvent(...);`\r\n\t  * @method DisplayObject3D#dispatch\r\n\t  * @note All events are handled on the `element` property. This is only a shortcut.\r\n\t  * @arg event - Identical to normal event dispatching via `dispatchEvent`.\r\n\t  */\n\t\n\t\t}, {\n\t\t\tkey: 'dispatch',\n\t\t\tvalue: function dispatch(evt) {\n\t\t\t\treturn this.element.dispatchEvent(evt);\n\t\t\t}\n\t\n\t\t\t// internal\n\t\n\t\t}, {\n\t\t\tkey: 'setStage',\n\t\t\tvalue: function setStage(s) {\n\t\t\t\tthis.stage = s;\n\t\t\t}\n\t\n\t\t\t// internal\n\t\n\t\t}, {\n\t\t\tkey: 'render',\n\t\t\tvalue: function render(pDirty) {\n\t\t\t\tthrow new Error(\"::DOM3D:: DisplayObject3D can not be part of the 3D scene, it is only a base class.\");\n\t\t\t}\n\t\n\t\t\t// internal\n\t\n\t\t}, {\n\t\t\tkey: 'updateWorld',\n\t\t\tvalue: function updateWorld() {\n\t\t\t\tthis.transform3D.copyConcatenated(this.parent.transform3D);\n\t\t\t\tthis.transform3D.eulerAngle.updateData(this._rotZ * _MathUtils.TO_RAD, this._rotY * _MathUtils.TO_RAD, this._rotX * _MathUtils.TO_RAD);\n\t\t\t\tthis.transform3D.quaternion.updateFromEuler(this.transform3D.eulerAngle);\n\t\t\t\tthis.transform3D.coordinates.updateData(this._x, this._y, this._z);\n\t\t\t\tthis.transform3D.concatenatedQuaternion.concatenate(this.transform3D.quaternion);\n\t\t\t\tthis.transform3D.concatenatedEulerAngle.updateFromQuaternion(this.transform3D.concatenatedQuaternion);\n\t\t\t}\n\t\n\t\t\t// internal\n\t\n\t\t}, {\n\t\t\tkey: 'rotateCoords',\n\t\t\tvalue: function rotateCoords() {\n\t\t\t\tthis.transform3D.concatenatedCoordinates.rotateAndUpdate(this.transform3D.coordinates, this.parent.transform3D.concatenatedEulerAngle);\n\t\t\t}\n\t\n\t\t\t// internal\n\t\n\t\t}, {\n\t\t\tkey: 'rotateObject',\n\t\t\tvalue: function rotateObject() {\n\t\t\t\tthis.transformMatrix.updateFromEuler(this.transform3D.concatenatedEulerAngle);\n\t\t\t}\n\t\n\t\t\t// internal\n\t\n\t\t}, {\n\t\t\tkey: 'renderObject',\n\t\t\tvalue: function renderObject() {\n\t\t\t\tvar m = this.transformMatrix;\n\t\t\t\tvar zoom = this.stage.zoom;\n\t\n\t\t\t\tvar metaPoint = this.transform3D.concatenatedCoordinates;\n\t\t\t\tvar relevantZ = this.parent.orthographic || this.stage.orthographic ? this.parent.transform3D.concatenatedCoordinates.z : metaPoint.z;\n\t\n\t\t\t\tif (relevantZ > zoom) {\n\t\t\t\t\tthis.element.style.display = 'none';return;\n\t\t\t\t} else if (this.element.style.display === 'none') {\n\t\t\t\t\tthis.element.style.display = 'block';\n\t\t\t\t}\n\t\n\t\t\t\tvar factor = zoom / (zoom - relevantZ);\n\t\t\t\tvar scaling = Math.pow(factor, this.stage.distortion);\n\t\n\t\t\t\t// update the matrix with the coords\n\t\t\t\tm.tx = metaPoint.x * factor;\n\t\t\t\tm.ty = metaPoint.y * factor;\n\t\n\t\t\t\t// scale the matrix using the calculated scaling factor\n\t\t\t\tm.scale(scaling);\n\t\n\t\t\t\t// we need to offset the tx/ty to account for the registration point because of the odd way CSS handles registrations (they affect rotation but not placement)\n\t\t\t\tvar rx = this.regX * factor * scaling;\n\t\t\t\tvar ry = this.regY * factor * scaling;\n\t\n\t\t\t\t// get the transform string\n\t\t\t\tvar transformString = 'matrix(' + m.a.toFixed(8) + ',' + m.b.toFixed(8) + ',' + m.c.toFixed(8) + ',' + m.d.toFixed(8) + ',' + (m.tx - rx).toFixed(8) + ',' + (m.ty - ry).toFixed(8) + ')';\n\t\n\t\t\t\t// get the transform origin string\n\t\t\t\tvar transformOriginString = this.regX + 'px ' + this.regY + 'px';\n\t\n\t\t\t\t// do the actual update of CSS strings\n\t\t\t\tthis.element.style[_PropNames2.default.transform] = transformString;\n\t\t\t\tthis.element.style[_PropNames2.default.transformOrigin] = transformOriginString;\n\t\n\t\t\t\tfor (var i = 0, ii = this.stage.effects.length; i < ii; i++) {\n\t\t\t\t\tvar effect = this.stage.effects[i];\n\t\t\t\t\teffect.render(this);\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'x',\n\t\t\tget: function get() {\n\t\t\t\treturn this._x;\n\t\t\t},\n\t\t\tset: function set(v) {\n\t\t\t\tif (v != this._x) {\n\t\t\t\t\tthis._dirty = true;\n\t\t\t\t\tthis._x = v;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  * The y property sets the y coordinate value for the DisplayObject3D instance.\r\n\t  * @var DisplayObject3D#y {Number}\r\n\t  * @default 0\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'y',\n\t\t\tget: function get() {\n\t\t\t\treturn this._y;\n\t\t\t},\n\t\t\tset: function set(v) {\n\t\t\t\tif (v != this._y) {\n\t\t\t\t\tthis._dirty = true;\n\t\t\t\t\tthis._y = v;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  * The z property sets the z coordinate value for the DisplayObject3D instance.\r\n\t  * @var DisplayObject3D#z {Number}\r\n\t  * @default 0\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'z',\n\t\t\tget: function get() {\n\t\t\t\treturn this._z;\n\t\t\t},\n\t\t\tset: function set(v) {\n\t\t\t\tif (v != this._z) {\n\t\t\t\t\tthis._dirty = true;\n\t\t\t\t\tthis._z = v;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  * The rotX property sets the x-axis rotation value for the DisplayObject3D instance in degrees.\r\n\t  * @var DisplayObject3D#rotX {Number}\r\n\t  * @default 0\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'rotX',\n\t\t\tget: function get() {\n\t\t\t\treturn this._rotX;\n\t\t\t},\n\t\t\tset: function set(v) {\n\t\t\t\tif (v != this._rotX) {\n\t\t\t\t\tthis._dirty = true;\n\t\t\t\t\tthis._rotX = v;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  * The rotY property sets the y-axis rotation value for the DisplayObject3D instance in degrees.\r\n\t  * @var DisplayObject3D#rotY {Number}\r\n\t  * @default 0\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'rotY',\n\t\t\tget: function get() {\n\t\t\t\treturn this._rotY;\n\t\t\t},\n\t\t\tset: function set(v) {\n\t\t\t\tif (v != this._rotY) {\n\t\t\t\t\tthis._dirty = true;\n\t\t\t\t\tthis._rotY = v;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  * The rotZ property sets the z-axis rotation value for the DisplayObject3D instance in degrees.\r\n\t  * @var DisplayObject3D#rotZ {Number}\r\n\t  * @default 0\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'rotZ',\n\t\t\tget: function get() {\n\t\t\t\treturn this._rotZ;\n\t\t\t},\n\t\t\tset: function set(v) {\n\t\t\t\tif (v != this._rotZ) {\n\t\t\t\t\tthis._dirty = true;\n\t\t\t\t\tthis._rotZ = v;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  * The regX property sets the x registration point used for rotation/placement of the DisplayObject3D instance.\r\n\t  * @var DisplayObject3D#regX {Number}\r\n\t  * @default 0\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'regX',\n\t\t\tget: function get() {\n\t\t\t\treturn this._regX;\n\t\t\t},\n\t\t\tset: function set(v) {\n\t\t\t\tif (v != this._regX) {\n\t\t\t\t\tthis._dirty = true;\n\t\t\t\t\tthis._regX = v;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  * The regY property sets the y registration point used for rotation/placement of the DisplayObject3D instance.\r\n\t  * @var DisplayObject3D#regY {Number}\r\n\t  * @default 0\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'regY',\n\t\t\tget: function get() {\n\t\t\t\treturn this._regY;\n\t\t\t},\n\t\t\tset: function set(v) {\n\t\t\t\tif (v != this._regY) {\n\t\t\t\t\tthis._dirty = true;\n\t\t\t\t\tthis._regY = v;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  * Shortcut for easily setting styles on the element.\r\n\t  * @var DisplayObject3D#style {Object}\r\n\t  */\n\t\n\t\t}, {\n\t\t\tkey: 'style',\n\t\t\tget: function get() {\n\t\t\t\treturn this.element.style;\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn DisplayObject3D;\n\t}();\n\t\n\t// internal\n\t\n\t\n\texports.default = DisplayObject3D;\n\tDisplayObject3D.idCount = 0;\n\tvar EVENT_ERROR = '::DOM3D:: Events are handled on the `.element` property. You may access it directly, or use the `addListener`, `.removeListener`, and `.dispatch` shortcuts.';\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _MathUtils = __webpack_require__(3);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Matrix3x3 = function () {\n\t\t/**\r\n\t The Matrix3x3 instance's a property. Used for calculations.\r\n\t @var Matrix3x3#a {Number}\r\n\t @public\r\n\t @default 1\r\n\t **/\n\t\t/**\r\n\t The Matrix3x3 instance's b property. Used for calculations.\r\n\t @var Matrix3x3#b {Number}\r\n\t @public\r\n\t @default 0\r\n\t **/\n\t\t/**\r\n\t The Matrix3x3 instance's c property. Used for calculations.\r\n\t @var Matrix3x3#c {Number}\r\n\t @public\r\n\t @default 0\r\n\t **/\n\t\t/**\r\n\t The Matrix3x3 instance's d property. Used for calculations.\r\n\t @var Matrix3x3#d {Number}\r\n\t @public\r\n\t @default 1\r\n\t **/\n\t\t/**\r\n\t The Matrix3x3 instance's tx property. Used for calculations.\r\n\t @var Matrix3x3#tx {Number}\r\n\t @public\r\n\t @default 0\r\n\t **/\n\t\t/**\r\n\t The Matrix3x3 instance's ty property. Used for calculations.\r\n\t @var Matrix3x3#ty {Number}\r\n\t @public\r\n\t @default 0\r\n\t **/\n\t\n\t\t/**\r\n\t Matrix3x3 is an internally used class. It is primarily used to turn the 3D object's transformation information into CSS transforms.\r\n\t @class Matrix3x3\r\n\t @arg {Number} [a=1] - New instance's a value.\r\n\t @arg {Number} [b=0] - New instance's b value.\r\n\t @arg {Number} [c=0] - New instance's c value.\r\n\t @arg {Number} [d=1] - New instance's d value.\r\n\t @arg {Number} [tx=0] - New instance's tx value.\r\n\t @arg {Number} [ty=0] - New instance's ty value.\r\n\t **/\n\t\tfunction Matrix3x3() {\n\t\t\tvar _a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\t\n\t\t\tvar _b = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\t\n\t\t\tvar _c = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\t\n\t\t\tvar _d = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n\t\n\t\t\tvar _tx = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n\t\n\t\t\tvar _ty = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\t\n\t\t\t_classCallCheck(this, Matrix3x3);\n\t\n\t\t\tthis.a = _a;\n\t\t\tthis.b = _b;\n\t\t\tthis.c = _c;\n\t\t\tthis.d = _d;\n\t\t\tthis.tx = _tx;\n\t\t\tthis.ty = _ty;\n\t\t}\n\t\n\t\t/**\r\n\t Scales the Matrix3x3 by a given amount. Scales relative to what it currently is; so scaling by the same value two times will scale it twice as much as doing it once.\r\n\t @method Matrix3x3#scale\r\n\t @public\r\n\t @arg {Number} scaleBy - Amount to scale by.\r\n\t **/\n\t\n\t\n\t\t_createClass(Matrix3x3, [{\n\t\t\tkey: 'scale',\n\t\t\tvalue: function scale(_scaleBy) {\n\t\t\t\tthis.a *= _scaleBy;\n\t\t\t\tthis.b *= _scaleBy;\n\t\t\t\tthis.c *= _scaleBy;\n\t\t\t\tthis.d *= _scaleBy;\n\t\t\t\tthis.tx *= _scaleBy;\n\t\t\t\tthis.ty *= _scaleBy;\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  A shortcut to zero out the Matrix3x3.\r\n\t  @method Matrix3x3#zero\r\n\t  @public\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'zero',\n\t\t\tvalue: function zero() {\n\t\t\t\tthis.a = 1;\n\t\t\t\tthis.b = 0;\n\t\t\t\tthis.c = 0;\n\t\t\t\tthis.d = 1;\n\t\t\t\tthis.tx = 0;\n\t\t\t\tthis.ty = 0;\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  A shortcut to copy the a, b, c, d, tx, and ty values of another Matrix3x3 to this one.\r\n\t  @method Matrix3x3#copy\r\n\t  @public\r\n\t  @arg {Matrix3x3} m - The Matrix3x3 instance to copy values from.\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'copy',\n\t\t\tvalue: function copy(m) {\n\t\t\t\tthis.a = m.a;\n\t\t\t\tthis.b = m.b;\n\t\t\t\tthis.c = m.c;\n\t\t\t\tthis.d = m.d;\n\t\t\t\tthis.tx = m.tx;\n\t\t\t\tthis.ty = m.ty;\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  Applies the rotational values of a EulerAngle instance to this Matrix3x3.\r\n\t  @method Matrix3x3#updateFromEuler\r\n\t  @public\r\n\t  @arg {EulerAngle} e - The EulerAngle instance to copy values from.\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'updateFromEuler',\n\t\t\tvalue: function updateFromEuler(e) {\n\t\t\t\tvar srz = (0, _MathUtils.sin)(e.phi),\n\t\t\t\t    crz = (0, _MathUtils.cos)(e.phi);\n\t\t\t\tvar sry = (0, _MathUtils.sin)(e.theta),\n\t\t\t\t    cry = (0, _MathUtils.cos)(e.theta);\n\t\t\t\tvar srx = (0, _MathUtils.sin)(e.psi),\n\t\t\t\t    crx = (0, _MathUtils.cos)(e.psi);\n\t\n\t\t\t\tvar crz_crx = crz * crx;\n\t\t\t\tvar srz_crx = srz * crx;\n\t\n\t\t\t\tvar sry_srx = sry * srx;\n\t\n\t\t\t\tvar add_cry = sry_srx + cry;\n\t\t\t\tvar sub_cry = sry_srx - cry;\n\t\n\t\t\t\tvar x1 = -crz * sub_cry + srz_crx;\n\t\t\t\tvar y1 = -srz * sub_cry - crz_crx;\n\t\n\t\t\t\tvar x2 = -crz * add_cry + srz_crx;\n\t\t\t\tvar y2 = -srz * add_cry - crz_crx;\n\t\n\t\t\t\tthis.a = (x1 - x2) / 2;\n\t\t\t\tthis.b = (y1 - y2) / 2;\n\t\t\t\tthis.c = -(x1 + x2) / 2;\n\t\t\t\tthis.d = -(y1 + y2) / 2;\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  Returns a String representation of the Matrix3x3 instance's values.\r\n\t  @method Matrix3x3#toString\r\n\t  @public\r\n\t  @returns {String} Returns a string with an object notation form of the Matrix3x3 properties.\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'toString',\n\t\t\tvalue: function toString() {\n\t\t\t\treturn '{a:' + this.a + ', b:' + this.b + ', c:' + this.c + ', d:' + this.d + ', tx:' + this.tx + ', ty:' + this.ty + '}';\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn Matrix3x3;\n\t}();\n\t\n\texports.default = Matrix3x3;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\t// hiking over math stuff for ease of writing...\n\tvar asin = exports.asin = Math.asin;\n\tvar sqrt = exports.sqrt = Math.sqrt;\n\tvar atan2 = exports.atan2 = Math.atan2;\n\tvar cos = exports.cos = Math.cos;\n\tvar sin = exports.sin = Math.sin;\n\tvar PI = exports.PI = Math.PI;\n\tvar TO_RAD = exports.TO_RAD = PI / 180;\n\tvar TO_DEG = exports.TO_DEG = 180 / PI;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Point3D = __webpack_require__(5);\n\t\n\tvar _Point3D2 = _interopRequireDefault(_Point3D);\n\t\n\tvar _Quaternion = __webpack_require__(6);\n\t\n\tvar _Quaternion2 = _interopRequireDefault(_Quaternion);\n\t\n\tvar _EulerAngle = __webpack_require__(7);\n\t\n\tvar _EulerAngle2 = _interopRequireDefault(_EulerAngle);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Transform3D = function () {\n\t\t/**\r\n\t The Transform3D instance's coordinates property is used for storing local coordinate data for calculations.\r\n\t @var Transform3D#coordinates {Point3D}\r\n\t @public\r\n\t **/\n\t\t/**\r\n\t The Transform3D instance's concatenatedCoordinates property is used for storing global coordinate data for calculations.\r\n\t @var Transform3D#concatenatedCoordinates {Point3D}\r\n\t @public\r\n\t **/\n\t\t/**\r\n\t The Transform3D instance's quaternion property is used for storing local quaternion based rotational data for calculations.\r\n\t @var Transform3D#quaternion {Quaternion}\r\n\t @public\r\n\t **/\n\t\t/**\r\n\t The Transform3D instance's concatenatedQuaterion property is used for storing global quaternion based rotational data for calculations.\r\n\t @var Transform3D#concatenatedQuaternion {Quaternion}\r\n\t @public\r\n\t **/\n\t\t/**\r\n\t The Transform3D instance's eulerAngle property is used for storing local euler angle based rotational data for calculations.\r\n\t @var Transform3D#eulerAngle {EulerAngle}\r\n\t @public\r\n\t **/\n\t\t/**\r\n\t The Transform3D instance's concatenatedEulerAngle property is used for storing global euler angle based rotational data for calculations.\r\n\t @var Transform3D#concatenatedEulerAngle {EulerAngle}\r\n\t @public\r\n\t **/\n\t\n\t\t/**\r\n\t Each {@link DisplayObject} has a [transform3D]{@link DisplayObject3D#transform3D} property which is an instances of the Transform3D class. It holds properties for the coordinate and rotationsl data of the object in both local and world/global forms.\r\n\t @class Transform3D\r\n\t **/\n\t\tfunction Transform3D() {\n\t\t\t_classCallCheck(this, Transform3D);\n\t\n\t\t\tthis.coordinates = new _Point3D2.default();\n\t\t\tthis.concatenatedCoordinates = new _Point3D2.default();\n\t\t\tthis.quaternion = new _Quaternion2.default();\n\t\t\tthis.concatenatedQuaternion = new _Quaternion2.default();\n\t\t\tthis.eulerAngle = new _EulerAngle2.default();\n\t\t\tthis.concatenatedEulerAngle = new _EulerAngle2.default();\n\t\t}\n\t\n\t\t/**\r\n\t This method is a shortcut used to copy the concatenated coordinate and rotational data from one Transform3D instance to another.\r\n\t @method Transform3D#copyConcatenated\r\n\t @public\r\n\t @arg {Transform3D} t - The Transform3D to copy data from.\r\n\t **/\n\t\n\t\n\t\t_createClass(Transform3D, [{\n\t\t\tkey: 'copyConcatenated',\n\t\t\tvalue: function copyConcatenated(t) {\n\t\t\t\tthis.concatenatedCoordinates.copy(t.concatenatedCoordinates);\n\t\t\t\tthis.concatenatedQuaternion.copy(t.concatenatedQuaternion);\n\t\t\t\tthis.concatenatedEulerAngle.copy(t.concatenatedEulerAngle);\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  This method is a shortcut used to copy the inverted concatenated coordinate and rotational data from one Transform3D instance to another.\r\n\t  @method Transform3D#copyInverseConcatenated\r\n\t  @public\r\n\t  @arg {Transform3D} t - The Transform3D to copy inverse data from.\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'copyInverseConcatenated',\n\t\t\tvalue: function copyInverseConcatenated(t) {\n\t\t\t\tthis.concatenatedCoordinates.copyInverse(t.concatenatedCoordinates);\n\t\t\t\tthis.concatenatedQuaternion.copyInverse(t.concatenatedQuaternion);\n\t\t\t\tthis.concatenatedEulerAngle.updateFromQuaternion(concatenatedQuaternion);\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  This method is a shortcut used to copy the local coordinate and rotational data from one Transform3D instance to another.\r\n\t  @method Transform3D#copyLocal\r\n\t  @public\r\n\t  @arg {Transform3D} t - The Transform3D to copy data from.\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'copyLocal',\n\t\t\tvalue: function copyLocal(t) {\n\t\t\t\tthis.coordinates.copy(t.coordinates);\n\t\t\t\tthis.quaternion.copy(t.quaternion);\n\t\t\t\tthis.eulerAngle.copy(t.eulerAngle);\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  A shortcut to copy the local and global coordinate and rotational data from one Transform3D instance to another.\r\n\t  @method Transform3D#copy\r\n\t  @public\r\n\t  @arg {Transform3D} t - The Transform3D to copy data from.\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'copy',\n\t\t\tvalue: function copy(t) {\n\t\t\t\tthis.coordinates.copy(t.coordinates);\n\t\t\t\tthis.concatenatedCoordinates.copy(t.concatenatedCoordinates);\n\t\t\t\tthis.quaternion.copy(t.quaternion);\n\t\t\t\tthis.concatenatedQuaternion.copy(t.concatenatedQuaternion);\n\t\t\t\tthis.eulerAngle.copy(t.eulerAngle);\n\t\t\t\tthis.concatenatedEulerAngle.copy(t.concatenatedEulerAngle);\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  A shortcut to zero out all transforms.\r\n\t  @method Transform3D#zero\r\n\t  @public\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'zero',\n\t\t\tvalue: function zero() {\n\t\t\t\tthis.coordinates.zero();\n\t\t\t\tthis.concatenatedCoordinates.zero();\n\t\t\t\tthis.quaternion.zero();\n\t\t\t\tthis.concatenatedQuaternion.zero();\n\t\t\t\tthis.eulerAngle.zero();\n\t\t\t\tthis.concatenatedEulerAngle.zero();\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  Returns a String representation of all of the Transform3D instance's properties' values. Can be a bit verbose.\r\n\t  @method Transform3D#toString\r\n\t  @public\r\n\t  @returns {String} Returns a string with an object notation form of the entire Transform3D.\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'toString',\n\t\t\tvalue: function toString() {\n\t\t\t\treturn 'local coordinates: ' + this.coordinates.toString() + '\\nworld coordinates: ' + this.concatenatedCoordinates.toString() + '\\nlocal quaternion : ' + this.quaternion.toString() + '\\nworld quaternion : ' + this.concatenatedQuaternion.toString() + '\\nlocal euler angle: ' + this.eulerAngle.toString() + '\\nworld euler angle: ' + this.concatenatedEulerAngle.toString();\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn Transform3D;\n\t}();\n\t\n\texports.default = Transform3D;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _MathUtils = __webpack_require__(3);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Point3D = function () {\n\t\t/**\r\n\t The Point3D instance's x property. Used for calculations.\r\n\t @var Point3D#x {Number}\r\n\t @public\r\n\t @default 0\r\n\t **/\n\t\t/**\r\n\t The Point3D instance's y property. Used for calculations.\r\n\t @var Point3D#y {Number}\r\n\t @public\r\n\t @default 0\r\n\t **/\n\t\t/**\r\n\t The Point3D instance's z property. Used for calculations.\r\n\t @var Point3D#z {Number}\r\n\t @public\r\n\t @default 0\r\n\t **/\n\t\n\t\t/**\r\n\t Point3D is an internally used class. A Point3D instance is attached to a {@link DisplayObject3D} object's transform3D property (which is itself an instance of the {@link Transform3D} class). It is part of internal calculations, and should only be accessed by advanced users. You should not have to deal with this class in normal usage of the engine.\r\n\t @class Point3D\r\n\t @arg {Number} [x=0] - New instance's x coordinate value.\r\n\t @arg {Number} [y=0] - New instance's y coordinate value.\r\n\t @arg {Number} [z=0] - New instance's z coordinate value.\r\n\t **/\n\t\tfunction Point3D() {\n\t\t\tvar _x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\t\n\t\t\tvar _y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\t\n\t\t\tvar _z = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\t\n\t\t\t_classCallCheck(this, Point3D);\n\t\n\t\t\tthis.x = _x;\n\t\t\tthis.y = _y;\n\t\t\tthis.z = _z;\n\t\t}\n\t\n\t\t/**\r\n\t A shortcut method for setting the x, y, and z properties.\r\n\t @method Point3D#updateData\r\n\t @public\r\n\t @arg {Number} x - New x value.\r\n\t @arg {Number} y - New y value.\r\n\t @arg {Number} z - New z value.\r\n\t **/\n\t\n\t\n\t\t_createClass(Point3D, [{\n\t\t\tkey: 'updateData',\n\t\t\tvalue: function updateData(x, y, z) {\n\t\t\t\tthis.x = x;\n\t\t\t\tthis.y = y;\n\t\t\t\tthis.z = z;\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  This method will rotate a supplied Point3D's coordinate values around origin 0,0,0 based on the supplied {@link EulerAngle} object's rotation. It will then set this Point3D's coordinate values to the result.\r\n\t  @method Point3D#rotateAndUpdate\r\n\t  @public\r\n\t  @arg {Point3D} point - Point3D values to rotate.\r\n\t  @arg {EulerAngle} angle - EulerAngle rotational values to rotate by.\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'rotateAndUpdate',\n\t\t\tvalue: function rotateAndUpdate(point, angle) {\n\t\t\t\tvar phi = angle.phi;\n\t\t\t\tvar theta = angle.theta;\n\t\t\t\tvar psi = angle.psi;\n\t\n\t\t\t\tvar srz = (0, _MathUtils.sin)(phi),\n\t\t\t\t    crz = (0, _MathUtils.cos)(phi);\n\t\t\t\tvar sry = (0, _MathUtils.sin)(theta),\n\t\t\t\t    cry = (0, _MathUtils.cos)(theta);\n\t\t\t\tvar srx = (0, _MathUtils.sin)(psi),\n\t\t\t\t    crx = (0, _MathUtils.cos)(psi);\n\t\n\t\t\t\tvar _X = point.x;\n\t\t\t\tvar _Y = point.y;\n\t\t\t\tvar _Z = point.z;\n\t\n\t\t\t\tvar xy, xz, yx, yz, zx, zy;\n\t\n\t\t\t\txy = crx * _Y - srx * _Z;\n\t\t\t\txz = srx * _Y + crx * _Z;\n\t\t\t\tyz = cry * xz - sry * _X;\n\t\t\t\tyx = sry * xz + cry * _X;\n\t\t\t\tzx = crz * yx - srz * xy;\n\t\t\t\tzy = srz * yx + crz * xy;\n\t\n\t\t\t\tthis.x += zx;\n\t\t\t\tthis.y += zy;\n\t\t\t\tthis.z += yz;\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  Produces a new Point3D instance that is duplicate of the current one.\r\n\t  @method Point3D#clone\r\n\t  @public\r\n\t  @returns {Point3D} Returns a new Point3D instance.\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'clone',\n\t\t\tvalue: function clone() {\n\t\t\t\treturn new Point3D(this.x, this.y, this.z);\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  A shortcut to copy the x, y, and z values of another Point3D to this one.\r\n\t  @method Point3D#copy\r\n\t  @public\r\n\t  @arg {Point3D} p - The Point3D instance to copy values from.\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'copy',\n\t\t\tvalue: function copy(p) {\n\t\t\t\tthis.x = p.x;\n\t\t\t\tthis.y = p.y;\n\t\t\t\tthis.z = p.z;\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  A shortcut to copy the inverted (negative) x, y, and z values of another Point3D to this one.\r\n\t  @method Point3D#copyInverse\r\n\t  @public\r\n\t  @arg {Point3D} p - The Point3D instance to copy inverted values from.\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'copyInverse',\n\t\t\tvalue: function copyInverse(p) {\n\t\t\t\tthis.x = -p.x;\n\t\t\t\tthis.y = -p.y;\n\t\t\t\tthis.z = -p.z;\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  A shortcut to zero out the Point3D.\r\n\t  @method Point3D#zero\r\n\t  @public\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'zero',\n\t\t\tvalue: function zero() {\n\t\t\t\tthis.x = 0;\n\t\t\t\tthis.y = 0;\n\t\t\t\tthis.z = 0;\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  Returns a String representation of the Point3D instance's values.\r\n\t  @method Point3D#toString\r\n\t  @public\r\n\t  @returns {String} Returns a string with an object notation form of the x, y, and z properties.\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'toString',\n\t\t\tvalue: function toString() {\n\t\t\t\treturn '{x:' + this.x + ', y:' + this.y + ', z:' + this.z + '}';\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  A static verion of the non-static [rotateAndUpdate]{@link Point3D#rotateAndUpdate} method which returns a new Point3D with the modified valies.\r\n\t  @method Point3D.rotate\r\n\t  @public\r\n\t  @arg {Point3D} point - Point3D values to rotate.\r\n\t  @arg {EulerAngle} angle - EulerAngle rotational values to rotate by.\r\n\t  @returns {Point3D} Returns a new Point3D with the end result applied.\r\n\t  **/\n\t\n\t\t}], [{\n\t\t\tkey: 'rotate',\n\t\t\tvalue: function rotate(point, angle) {\n\t\t\t\tvar phi = angle.phi;\n\t\t\t\tvar theta = angle.theta;\n\t\t\t\tvar psi = angle.psi;\n\t\n\t\t\t\tvar srz = (0, _MathUtils.sin)(phi),\n\t\t\t\t    crz = (0, _MathUtils.cos)(phi);\n\t\t\t\tvar sry = (0, _MathUtils.sin)(theta),\n\t\t\t\t    cry = (0, _MathUtils.cos)(theta);\n\t\t\t\tvar srx = (0, _MathUtils.sin)(psi),\n\t\t\t\t    crx = (0, _MathUtils.cos)(psi);\n\t\n\t\t\t\tvar _X = point.x;\n\t\t\t\tvar _Y = point.y;\n\t\t\t\tvar _Z = point.z;\n\t\n\t\t\t\tvar xy, xz, yx, yz, zx, zy;\n\t\n\t\t\t\txy = crx * _Y - srx * _Z;\n\t\t\t\txz = srx * _Y + crx * _Z;\n\t\t\t\tyz = cry * xz - sry * _X;\n\t\t\t\tyx = sry * xz + cry * _X;\n\t\t\t\tzx = crz * yx - srz * xy;\n\t\t\t\tzy = srz * yx + crz * xy;\n\t\n\t\t\t\treturn new Point3D(zx, zy, yz);\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  Allows the distance between two 3D points to be calculated between two Point3D objects\r\n\t  @method Point3D.distance\r\n\t  @public\r\n\t  @arg {Point3D} point1 - First Point3D to calculate from.\r\n\t  @arg {Point3D} point2 - Second Point3D to calculate to.\r\n\t  @returns {Number} Returns the distance between the two points.\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'distance',\n\t\t\tvalue: function distance(p1, p2) {\n\t\t\t\tvar x2 = Math.pow(p2.x - p1.x, 2);\n\t\t\t\tvar y2 = Math.pow(p2.y - p1.y, 2);\n\t\t\t\tvar z2 = Math.pow(p2.z - p1.z, 2);\n\t\n\t\t\t\treturn Math.sqrt(x2 + y2 + z2);\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn Point3D;\n\t}();\n\t\n\texports.default = Point3D;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _EulerAngle = __webpack_require__(7);\n\t\n\tvar _EulerAngle2 = _interopRequireDefault(_EulerAngle);\n\t\n\tvar _MathUtils = __webpack_require__(3);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Quaternion = function () {\n\t\t/**\r\n\t The Quaternion instance's w property. Used for calculations.\r\n\t @var Quaternion#w {Number}\r\n\t @public\r\n\t @default 1\r\n\t **/\n\t\t/**\r\n\t The Quaternion instance's x property. Used for calculations.\r\n\t @var Quaternion#x {Number}\r\n\t @public\r\n\t @default 0\r\n\t **/\n\t\t/**\r\n\t The Quaternion instance's y property. Used for calculations.\r\n\t @var Quaternion#y {Number}\r\n\t @public\r\n\t @default 0\r\n\t **/\n\t\t/**\r\n\t The Quaternion instance's z property. Used for calculations.\r\n\t @var Quaternion#z {Number}\r\n\t @public\r\n\t @default 0\r\n\t **/\n\t\n\t\t/**\r\n\t Quaternion is an internally used class. A Quaternion instance is attached to a {@link DisplayObject3D} object's transform3D property (which is itself an instance of the {@link Transform3D} class). It is part of internal calculations, and should only be accessed by extremely advanced users. You should not have to deal with this class in normal usage of the engine.\r\n\t @class Quaternion\r\n\t @arg {Number} [w=1] - New instance's w value.\r\n\t @arg {Number} [x=0] - New instance's x value.\r\n\t @arg {Number} [y=0] - New instance's y value.\r\n\t @arg {Number} [z=0] - New instance's z value.\r\n\t **/\n\t\tfunction Quaternion() {\n\t\t\tvar w = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\t\t\tvar x = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\t\t\tvar y = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\t\t\tvar z = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\t\n\t\t\t_classCallCheck(this, Quaternion);\n\t\n\t\t\tthis.w = w;\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t}\n\t\n\t\t/**\r\n\t This method allows for quick update of all the Quaternion's properties.\r\n\t @method Quaternion#updateData\r\n\t @arg {Number} w - Updated w value.\r\n\t @arg {Number} x - Updated x value.\r\n\t @arg {Number} y - Updated y value.\r\n\t @arg {Number} z - Updated z value.\r\n\t **/\n\t\n\t\n\t\t_createClass(Quaternion, [{\n\t\t\tkey: 'updateData',\n\t\t\tvalue: function updateData(_w, _x, _y, _z) {\n\t\t\t\tthis.w = _w;\n\t\t\t\tthis.x = _x;\n\t\t\t\tthis.y = _y;\n\t\t\t\tthis.z = _z;\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  This method concatenates the values of another Quaternion with this Quaternion and then sets the resulting values to this Quaternion's w, z, y, and z properties. This is vital for forward kinematics of 3D rotations. There is no return; the Quaternion intance on which this method is called (as opposed to the one supplied as a parameter) is modified as a result.\r\n\t  @method Quaternion#concatenate\r\n\t  @public\r\n\t  @arg {Quaternion} q - Quaternion to concatenate with this one.\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'concatenate',\n\t\t\tvalue: function concatenate(q) {\n\t\t\t\tvar w1 = q.w;\n\t\t\t\tvar x1 = q.x;\n\t\t\t\tvar y1 = q.y;\n\t\t\t\tvar z1 = q.z;\n\t\n\t\t\t\tvar tw = this.w;\n\t\t\t\tvar tx = this.x;\n\t\t\t\tvar ty = this.y;\n\t\t\t\tvar tz = this.z;\n\t\n\t\t\t\tvar _w = w1 * tw - x1 * tx - y1 * ty - z1 * tz;\n\t\t\t\tvar _x = w1 * tx + x1 * tw + y1 * tz - z1 * ty;\n\t\t\t\tvar _y = w1 * ty - x1 * tz + y1 * tw + z1 * tx;\n\t\t\t\tvar _z = w1 * tz + x1 * ty - y1 * tx + z1 * tw;\n\t\n\t\t\t\tthis.w = _w;\n\t\t\t\tthis.x = _x;\n\t\t\t\tthis.y = _y;\n\t\t\t\tthis.z = _z;\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  A method for getting a {@link EulerAngle} based on the current Quaternion.\r\n\t  @method Quaternion#toEuler\r\n\t  @public\r\n\t  @returns {EulerAngle} Returns a new EulerAngle instance.\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'toEuler',\n\t\t\tvalue: function toEuler() {\n\t\t\t\tvar w2 = this.w * this.w;\n\t\t\t\tvar x2 = this.x * this.x;\n\t\t\t\tvar y2 = this.y * this.y;\n\t\t\t\tvar z2 = this.z * this.z;\n\t\n\t\t\t\tvar phi, theta, psi;\n\t\n\t\t\t\tvar tester = this.w * this.y - this.z * this.x;\n\t\n\t\t\t\tif (tester > 0.499999) {\n\t\t\t\t\tphi = -2 * (0, _MathUtils.atan2)(this.w, this.x);\n\t\t\t\t\ttheta = Math.PI / 2;\n\t\t\t\t\tpsi = Math.PI;\n\t\n\t\t\t\t\treturn new _EulerAngle2.default(phi, theta, psi);\n\t\t\t\t} else if (tester < -0.499999) {\n\t\t\t\t\tphi = -2 * (0, _MathUtils.atan2)(this.w, this.x);\n\t\t\t\t\ttheta = -Math.PI / 2;\n\t\t\t\t\tpsi = Math.PI;\n\t\n\t\t\t\t\treturn new _EulerAngle2.default(phi, theta, psi);\n\t\t\t\t}\n\t\n\t\t\t\tphi = (0, _MathUtils.atan2)(2 * (this.w * this.x + this.y * this.z), 1 - 2 * (x2 + y2));\n\t\t\t\ttheta = (0, _MathUtils.asin)(2 * tester);\n\t\t\t\tpsi = (0, _MathUtils.atan2)(2 * (this.w * this.z + this.x * this.y), 1 - 2 * (y2 + z2));\n\t\n\t\t\t\treturn new _EulerAngle2.default(phi, theta, psi);\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  A method for updating the w, x, y, and z properties based on a {@link EulerAngle} intance.\r\n\t  @method Quaternion#updateFromEuler\r\n\t  @public\r\n\t  @arg {EulerAngle} euler - EulerAngle instance to update from.\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'updateFromEuler',\n\t\t\tvalue: function updateFromEuler(euler) {\n\t\t\t\tvar hPhi = euler.phi / 2;\n\t\t\t\tvar hTheta = euler.theta / 2;\n\t\t\t\tvar hPsi = euler.psi / 2;\n\t\n\t\t\t\tvar sin_hPhi = (0, _MathUtils.sin)(hPhi),\n\t\t\t\t    cos_hPhi = (0, _MathUtils.cos)(hPhi);\n\t\t\t\tvar sin_hTheta = (0, _MathUtils.sin)(hTheta),\n\t\t\t\t    cos_hTheta = (0, _MathUtils.cos)(hTheta);\n\t\t\t\tvar sin_hPsi = (0, _MathUtils.sin)(hPsi),\n\t\t\t\t    cos_hPsi = (0, _MathUtils.cos)(hPsi);\n\t\n\t\t\t\tthis.w = cos_hPhi * cos_hTheta * cos_hPsi + sin_hPhi * sin_hTheta * sin_hPsi;\n\t\t\t\tthis.x = sin_hPhi * cos_hTheta * cos_hPsi - cos_hPhi * sin_hTheta * sin_hPsi;\n\t\t\t\tthis.y = cos_hPhi * sin_hTheta * cos_hPsi + sin_hPhi * cos_hTheta * sin_hPsi;\n\t\t\t\tthis.z = cos_hPhi * cos_hTheta * sin_hPsi - sin_hPhi * sin_hTheta * cos_hPsi;\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  Normalizes the Quaternion.\r\n\t  @method Quaternion#normalize\r\n\t  @public\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'normalize',\n\t\t\tvalue: function normalize() {\n\t\t\t\tvar magnitude = (0, _MathUtils.sqrt)(this.w * this.w + this.x * this.x + this.y * this.y + this.z * this.z);\n\t\t\t\tthis.w /= magnitude;this.x /= magnitude;this.y /= magnitude;this.z /= magnitude;\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  Produces a new Quaternion instance that is duplicate of the current one.\r\n\t  @method Quaternion#clone\r\n\t  @public\r\n\t  @returns {Quaternion} Returns a new Quaternion instance.\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'clone',\n\t\t\tvalue: function clone() {\n\t\t\t\treturn new Quaternion(this.w, this.x, this.y, this.z);\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  A shortcut to copy the w, x, y, and z values of another Quaternion to this one.\r\n\t  @method Quaternion#copy\r\n\t  @public\r\n\t  @arg {Quaternion} q - The Quaternion instance to copy values from.\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'copy',\n\t\t\tvalue: function copy(q) {\n\t\t\t\tthis.w = q.w;this.x = q.x;this.y = q.y;this.z = q.z;\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  A shortcut to copy the inverted result of another Quaternion to this one.\r\n\t  @method Quaternion#copyInverse\r\n\t  @public\r\n\t  @arg {Quaternion} p - The Quaternion instance to invert and then get values from.\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'copyInverse',\n\t\t\tvalue: function copyInverse(q) {\n\t\t\t\tvar qw = q.w,\n\t\t\t\t    qx = q.x,\n\t\t\t\t    qy = q.y,\n\t\t\t\t    qz = q.z;\n\t\t\t\tvar d = qw * qw + qx * qx + qy * qy + qz * qz;\n\t\t\t\tthis.w = qw / d;\n\t\t\t\tthis.x = -qx / d;\n\t\t\t\tthis.y = -qy / d;\n\t\t\t\tthis.z = -qz / d;\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  A shortcut to zero out the Quaternion.\r\n\t  @method Quaternion#zero\r\n\t  @public\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'zero',\n\t\t\tvalue: function zero() {\n\t\t\t\tthis.w = 1;\n\t\t\t\tthis.x = 0;\n\t\t\t\tthis.y = 0;\n\t\t\t\tthis.z = 0;\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  Returns a String representation of the Quaternion instance's values.\r\n\t  @method Quaternion#toString\r\n\t  @public\r\n\t  @returns {String} Returns a string with an object notation form of the w, x, y, and z properties.\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'toString',\n\t\t\tvalue: function toString() {\n\t\t\t\treturn '{w:' + this.w + ', x:' + this.x + ', y:' + this.y + ', z:' + this.z + '}';\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  Multiplies two Quaterions together. Note: multiplication of quaternions is non-commutative. Order matters.\r\n\t  @method Quaternion.multiply\r\n\t  @public\r\n\t  @arg {Quaternion} q1 - The first quaternion to multiply.\r\n\t  @arg {Quaternion} q2 - The second quaternion to multiply.\r\n\t  @returns {Quaternion} Returns a new Quaternion with the result of the multiplication.\r\n\t  **/\n\t\n\t\t}], [{\n\t\t\tkey: 'multiply',\n\t\t\tvalue: function multiply(q1, q2) {\n\t\t\t\t\"use strict\";\n\t\n\t\t\t\tvar w1 = q1.w,\n\t\t\t\t    w2 = q2.w;\n\t\t\t\tvar x1 = q1.x,\n\t\t\t\t    x2 = q2.x;\n\t\t\t\tvar y1 = q1.y,\n\t\t\t\t    y2 = q2.y;\n\t\t\t\tvar z1 = q1.z,\n\t\t\t\t    z2 = q2.z;\n\t\n\t\t\t\tvar _w = w1 * w2 - x1 * x2 - y1 * y2 - z1 * z2;\n\t\t\t\tvar _x = w1 * x2 + x1 * w2 + y1 * z2 - z1 * y2;\n\t\t\t\tvar _y = w1 * y2 - x1 * z2 + y1 * w2 + z1 * x2;\n\t\t\t\tvar _z = w1 * z2 + x1 * y2 - y1 * x2 + z1 * w2;\n\t\n\t\t\t\treturn new Quaternion(_w, _x, _y, _z);\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn Quaternion;\n\t}();\n\t\n\texports.default = Quaternion;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Quaternion = __webpack_require__(6);\n\t\n\tvar _Quaternion2 = _interopRequireDefault(_Quaternion);\n\t\n\tvar _MathUtils = __webpack_require__(3);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar EulerAngle = function () {\n\t\t/**\r\n\t The EulerAngle instance's phi property. Used for calculations.\r\n\t @var EulerAngle#phi {Number}\r\n\t @public\r\n\t @default 0\r\n\t **/\n\t\t/**\r\n\t The EulerAngle instance's theta property. Used for calculations.\r\n\t @var EulerAngle#theta {Number}\r\n\t @public\r\n\t @default 0\r\n\t **/\n\t\t/**\r\n\t The EulerAngle instance's psi property. Used for calculations.\r\n\t @var EulerAngle#psi {Number}\r\n\t @public\r\n\t @default 0\r\n\t **/\n\t\n\t\t/**\r\n\t EulerAngle is an internally used class. A EulerAngle instance is attached to a {@link DisplayObject3D} object's transform3D property (which is itself an instance of the {@link Transform3D} class). It is part of internal calculations, and should only be accessed by extremely advanced users. You should not have to deal with this class in normal usage of the engine.\r\n\t @class EulerAngle\r\n\t @arg {Number} [phi=0] - New instance's phi value.\r\n\t @arg {Number} [theta=0] - New instance's theta value.\r\n\t @arg {Number} [psi=0] - New instance's psi value.\r\n\t **/\n\t\tfunction EulerAngle() {\n\t\t\tvar aphi = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\t\t\tvar atheta = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\t\t\tvar apsi = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\t\n\t\t\t_classCallCheck(this, EulerAngle);\n\t\n\t\t\tthis.phi = aphi;\n\t\t\tthis.theta = atheta;\n\t\t\tthis.psi = apsi;\n\t\t}\n\t\n\t\t/**\r\n\t A shortcut method for setting the phi, theta, and psi properties.\r\n\t @method EulerAngle#updateData\r\n\t @public\r\n\t @arg {Number} phi - New phi value.\r\n\t @arg {Number} theta - New theta value.\r\n\t @arg {Number} psi - New psi value.\r\n\t **/\n\t\n\t\n\t\t_createClass(EulerAngle, [{\n\t\t\tkey: 'updateData',\n\t\t\tvalue: function updateData(_phi, _theta, _psi) {\n\t\t\t\tthis.phi = _phi;\n\t\t\t\tthis.theta = _theta;\n\t\t\t\tthis.psi = _psi;\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  A method for updating the phi, theta, and psi based on a {@link Quaternion} intance.\r\n\t  @method EulerAngle#updateFromQuaternion\r\n\t  @public\r\n\t  @arg {Quaternion} q - Quaternion instance to update from.\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'updateFromQuaternion',\n\t\t\tvalue: function updateFromQuaternion(q) {\n\t\t\t\tvar w = q.w,\n\t\t\t\t    x = q.x,\n\t\t\t\t    y = q.y,\n\t\t\t\t    z = q.z;\n\t\n\t\t\t\tvar w2 = w * w;\n\t\t\t\tvar x2 = x * x;\n\t\t\t\tvar y2 = y * y;\n\t\t\t\tvar z2 = z * z;\n\t\n\t\t\t\tvar tester = w * y - z * x;\n\t\n\t\t\t\tif (tester > 0.499999) {\n\t\t\t\t\tthis.phi = -2 * (0, _MathUtils.atan2)(w, x);\n\t\t\t\t\tthis.theta = Math.PI / 2;\n\t\t\t\t\tthis.psi = Math.PI;\n\t\n\t\t\t\t\treturn;\n\t\t\t\t} else if (tester < -0.499999) {\n\t\t\t\t\tthis.phi = -2 * (0, _MathUtils.atan2)(w, x);\n\t\t\t\t\tthis.theta = -Math.PI / 2;\n\t\t\t\t\tthis.psi = Math.PI;\n\t\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tthis.phi = (0, _MathUtils.atan2)(2 * (w * x + y * z), 1 - 2 * (x2 + y2));\n\t\t\t\tthis.theta = (0, _MathUtils.asin)(2 * tester);\n\t\t\t\tthis.psi = (0, _MathUtils.atan2)(2 * (w * z + x * y), 1 - 2 * (y2 + z2));\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  A method for getting a {@link Quaternion} based on the current EulerAngle.\r\n\t  @method EulerAngle#toQuaternion\r\n\t  @public\r\n\t  @returns {Quaternion} Returns a new {@link Quaternion} instance.\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'toQuaternion',\n\t\t\tvalue: function toQuaternion() {\n\t\t\t\tvar hPhi = this.phi / 2;\n\t\t\t\tvar hTheta = this.theta / 2;\n\t\t\t\tvar hPsi = this.psi / 2;\n\t\n\t\t\t\tvar sin_hPhi = (0, _MathUtils.sin)(hPhi),\n\t\t\t\t    cos_hPhi = (0, _MathUtils.cos)(hPhi);\n\t\t\t\tvar sin_hTheta = (0, _MathUtils.sin)(hTheta),\n\t\t\t\t    cos_hTheta = (0, _MathUtils.cos)(hTheta);\n\t\t\t\tvar sin_hPsi = (0, _MathUtils.sin)(hPsi),\n\t\t\t\t    cos_hPsi = (0, _MathUtils.cos)(hPsi);\n\t\n\t\t\t\tvar w = cos_hPhi * cos_hTheta * cos_hPsi + sin_hPhi * sin_hTheta * sin_hPsi;\n\t\t\t\tvar x = sin_hPhi * cos_hTheta * cos_hPsi - cos_hPhi * sin_hTheta * sin_hPsi;\n\t\t\t\tvar y = cos_hPhi * sin_hTheta * cos_hPsi + sin_hPhi * cos_hTheta * sin_hPsi;\n\t\t\t\tvar z = cos_hPhi * cos_hTheta * sin_hPsi - sin_hPhi * sin_hTheta * cos_hPsi;\n\t\n\t\t\t\treturn new _Quaternion2.default(w, x, y, z);\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  Produces a new EulerAngle instance that is duplicate of the current one.\r\n\t  @method EulerAngle#clone\r\n\t  @public\r\n\t  @returns {EulerAngle} Returns a new EulerAngle instance.\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'clone',\n\t\t\tvalue: function clone() {\n\t\t\t\treturn new EulerAngle(this.phi, this.theta, this.psi);\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  A shortcut to copy the phi, theta, and psi values of another EulerAngle to this one.\r\n\t  @method EulerAngle#copy\r\n\t  @public\r\n\t  @arg {EulerAngle} ea - The EulerAngle instance to copy values from.\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'copy',\n\t\t\tvalue: function copy(ea) {\n\t\t\t\tthis.phi = ea.phi;\n\t\t\t\tthis.theta = ea.theta;\n\t\t\t\tthis.psi = ea.psi;\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  A shortcut to zero out the EulerAngle.\r\n\t  @method EulerAngle#zero\r\n\t  @public\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'zero',\n\t\t\tvalue: function zero() {\n\t\t\t\tthis.phi = 0;\n\t\t\t\tthis.theta = 0;\n\t\t\t\tthis.psi = 0;\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  Returns a String representation of the EulerAngle instance's values.\r\n\t  @method EulerAngle#toString\r\n\t  @public\r\n\t  @returns {String} Returns a string with an object notation form of the phi, theta, and psi properties.\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'toString',\n\t\t\tvalue: function toString() {\n\t\t\t\treturn '{phi:' + this.phi + ', theta:' + this.theta + ', psi:' + this.psi + '}';\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn EulerAngle;\n\t}();\n\t\n\texports.default = EulerAngle;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _MathUtils = __webpack_require__(3);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar CalculatedInfo = function () {\n\t\tfunction CalculatedInfo(obj) {\n\t\t\t_classCallCheck(this, CalculatedInfo);\n\t\n\t\t\tObject.defineProperty(this, 'reference', { enumerable: false, value: obj });\n\t\t}\n\t\n\t\t_createClass(CalculatedInfo, [{\n\t\t\tkey: 'toString',\n\t\t\tvalue: function toString() {\n\t\t\t\treturn '{x:' + this.x + ', y:' + this.y + ', z:' + this.z + ', rotX:' + this.rotX + ', rotY:' + this.rotY + ', rotZ:' + this.rotZ + '}';\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'x',\n\t\t\tget: function get() {\n\t\t\t\treturn this.reference.transform3D.concatenatedCoordinates.x;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'y',\n\t\t\tget: function get() {\n\t\t\t\treturn this.reference.transform3D.concatenatedCoordinates.y;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'z',\n\t\t\tget: function get() {\n\t\t\t\treturn this.reference.transform3D.concatenatedCoordinates.z;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'rotX',\n\t\t\tget: function get() {\n\t\t\t\treturn this.reference.transform3D.concatenatedEulerAngle.psi * _MathUtils.TO_DEG;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'rotY',\n\t\t\tget: function get() {\n\t\t\t\treturn this.reference.transform3D.concatenatedEulerAngle.theta * _MathUtils.TO_DEG;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'rotZ',\n\t\t\tget: function get() {\n\t\t\t\treturn this.reference.transform3D.concatenatedEulerAngle.phi * _MathUtils.TO_DEG;\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn CalculatedInfo;\n\t}();\n\t\n\texports.default = CalculatedInfo;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\t// tests for compatibility and figuring out which CSS props to set\n\t\n\tvar index = 0;\n\t\n\tvar possible_transform = ['transform', 'WebkitTransform', 'msTransform', 'MozTransform', 'OTransform'];\n\t\n\tvar possible_transform_origin = ['transformOrigin', 'WebkitTransformOrigin', 'msTransformOrigin', 'MozTransformOrigin', 'OTransformOrigin'];\n\t\n\tvar possible_perspective = ['perspective', 'WebkitPerspective', 'msPerspective', 'MozPerspective', 'OPerspective'];\n\t\n\tvar possible_perspective_origin = ['perspectiveOrigin', 'WebkitPerspectiveOrigin', 'msPerspectiveOrigin', 'MozPerspectiveOrigin', 'OPerspectiveOrigin'];\n\t\n\ttry {\n\t\tvar p;\n\t\tvar n = document.createElement('div');\n\t\tfor (var i = 0, ii = possible_transform.length; i < ii; i++) {\n\t\t\tp = possible_transform[i];\n\t\t\tif (typeof n.style[p] !== 'undefined') {\n\t\t\t\tindex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t} catch (e) {}\n\t\n\tvar PropNames = {\n\t\t'transform': possible_transform[index],\n\t\t'transformOrigin': possible_transform_origin[index],\n\t\t'perspective': possible_perspective[index],\n\t\t'perspectiveOrigin': possible_perspective_origin[index]\n\t};\n\t\n\texports.default = PropNames;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _DisplayObject3D2 = __webpack_require__(1);\n\t\n\tvar _DisplayObject3D3 = _interopRequireDefault(_DisplayObject3D2);\n\t\n\tvar _Matrix3x = __webpack_require__(2);\n\t\n\tvar _Matrix3x2 = _interopRequireDefault(_Matrix3x);\n\t\n\tvar _Transform3D = __webpack_require__(4);\n\t\n\tvar _Transform3D2 = _interopRequireDefault(_Transform3D);\n\t\n\tvar _StageEvent = __webpack_require__(11);\n\t\n\tvar _StageEvent2 = _interopRequireDefault(_StageEvent);\n\t\n\tvar _determineElement = __webpack_require__(12);\n\t\n\tvar _determineElement2 = _interopRequireDefault(_determineElement);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Stage3D = function (_DisplayObject3D) {\n\t\t_inherits(Stage3D, _DisplayObject3D);\n\t\n\t\t/**\r\n\t * @var Stage3D#x\r\n\t * @ignore\r\n\t **/\n\t\t/**\r\n\t * @var Stage3D#y\r\n\t * @ignore\r\n\t **/\n\t\t/**\r\n\t * @var Stage3D#z\r\n\t * @ignore\r\n\t **/\n\t\t/**\r\n\t * @var Stage3D#rotX\r\n\t * @ignore\r\n\t **/\n\t\t/**\r\n\t * @var Stage3D#rotY\r\n\t * @ignore\r\n\t **/\n\t\t/**\r\n\t * @var Stage3D#rotZ\r\n\t * @ignore\r\n\t **/\n\t\t/**\r\n\t * @var Stage3D#regX\r\n\t * @ignore\r\n\t **/\n\t\t/**\r\n\t * @var Stage3D#regY\r\n\t * @ignore\r\n\t **/\n\t\t/**\r\n\t * @var Stage3D#calc\r\n\t * @ignore\r\n\t **/\n\t\n\t\t/**\r\n\t * All 3D elements to be rendered are to be added to a Stage3D instance. Even though it inherits from DisplayObject3D it should be treated like a 2D object in the DOM as far as its own positioning/rotating goes. Any x, y, z, rotX, rotY, and rotZ properties are not intended to function; just use CSS positioning. If you want a container for 3D elements that you can move and rotate in 3D space then see {@link Group3D}.\r\n\t * <br><br>\r\n\t * Also note that a Stage3D needs to be updated each frame. If autoRender is used (as is default) it will just constantly update. This is not as taxing as it would seem since it uses a diry/clean rendering system. For slightly better performance you can update manually as needed using the [update]{@link Stage3D#update} method.\r\n\t * <br><br>\r\n\t * In almost all ways the API to the Stage3D is a mimic of the Group3D. You can treat manipulation of display list children within them almost identically (e.g. add, remove, getChildById, etc).\r\n\t * @class Stage3D\r\n\t * @extends DisplayObject3D\r\n\t * @arg element - An argument identifying the HTML Element the display object is to associate with. Can be the actual element object itself, or a query selector string which will identify the intended HTML element already in the DOM.\r\n\t * @arg {Boolean} [autoRender=true] - Shortcut to the set [autoRender]{@link Stage3D#autoRender} property.\r\n\t * @arg {Number} [FPS=30] - Allows you to determine the update rate of the autoRender in frames per second.\r\n\t **/\n\t\tfunction Stage3D(_el) {\n\t\t\tvar autoRend = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\t\t\tvar fps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 30;\n\t\n\t\t\t_classCallCheck(this, Stage3D);\n\t\n\t\t\tvar _this = _possibleConstructorReturn(this, (Stage3D.__proto__ || Object.getPrototypeOf(Stage3D)).call(this));\n\t\n\t\t\tif (_el) {\n\t\t\t\t_this.element = (0, _determineElement2.default)(_el);\n\t\t\t\t_this.id = _this.element.hasAttribute('id') ? _this.element.attributes.id.value : 'stage_' + _DisplayObject3D3.default.idCount++;\n\t\t\t\t_this.element.dom3dObject = _this;\n\t\t\t} else {\n\t\t\t\tthrow new Error('::DOM3D:: No element/selector/markup was given to Stage3D constructor.');\n\t\t\t}\n\t\n\t\t\t_this.registeredChildren = [];\n\t\t\t_this.lowestZIndex = 0;\n\t\t\t_this.updateInterval = 0;\n\t\n\t\t\t/**\r\n\t  * Stage3D inherits the stage property from DisplayObject3D, which identifies the root stage. However, it will simply always point to itself in the case of a Stage3D object.\r\n\t  * @var {Stage3D} Stage3D#stage\r\n\t  * @readonly\r\n\t  * @default this\r\n\t  **/\n\t\t\t_this.stage = _this;\n\t\n\t\t\t/**\r\n\t  * distortion affects how the location of objects are distorted (lesser for further away, more for closer) as they move on the z-axis.\r\n\t  * @var {Number} Stage3D#distortion\r\n\t  * @default 6\r\n\t  **/\n\t\t\t_this.distortion = 6;\n\t\n\t\t\t/**\r\n\t  * zoom affects how objects are scaled as they move on the z-axis. Experiment to get the effect that works for your use. Any object with a calculated z coordinate higher than the zoom will be considered behind the viewer, and not render.\r\n\t  * @var {Number} Stage3D#zoom\r\n\t  * @default 5000\r\n\t  **/\n\t\t\t_this.zoom = 5000;\n\t\n\t\t\t/**\r\n\t  * Allows access to the Array of child objects for this container. Special care should be taken when accessing to not modify the original Array.\r\n\t  * @var Stage3D#children {Array}\r\n\t  * @readonly\r\n\t  * @default [empty Array]\r\n\t  **/\n\t\t\t_this.children = [];\n\t\n\t\t\t/**\r\n\t  * A Stage3D will have an isGroup property of true for identification purposes. Both Stage3D and Group3D will have this property as true, as they are both container/group type concepts. This property is made to identify this object as a general concept of grouping/containing 3D elements, as opposed to identifying a certain class.\r\n\t  * @var Stage3D#isGroup {Boolean}\r\n\t  * @readonly\r\n\t  * @default true\r\n\t  **/\n\t\t\t_this.isGroup = true;\n\t\t\t_this.matrix = new _Matrix3x2.default();\n\t\t\t_this.transform3D = new _Transform3D2.default();\n\t\n\t\t\t// set the FPS private var\n\t\t\t_this._FPS = fps;\n\t\n\t\t\t// set the autoRender private var and setter\n\t\t\t_this._autoRender = false;\n\t\t\t_this.autoRender = autoRend;\n\t\n\t\t\t// private\n\t\t\t_this._orthographic = false;\n\t\n\t\t\t/**\r\n\t  * An array that can be filled with effects objects. An effect object must have a `render` method that can take an argumen for the object.\r\n\t  * @method Stage3D#effects\r\n\t  **/\n\t\t\t_this.effects = [];\n\t\t\treturn _this;\n\t\t}\n\t\n\t\t/**\r\n\t * Sets whether this stage will render all of its children orthographically or not.\r\n\t * @note Renders the entire scene orthographically regardless of the settings of groups within the scene.\r\n\t * @var Stage3D#orthographic {Boolean}\r\n\t * @default false\r\n\t **/\n\t\n\t\n\t\t_createClass(Stage3D, [{\n\t\t\tkey: 'add',\n\t\n\t\n\t\t\t/**\r\n\t  * add allows objects to be added to this Stage3D. Note: Stage3D instances are meant to be roots of a 3D scene. Do not add a Stage3D to another type of group.\r\n\t  * @method Stage3D#add\r\n\t  * @arg {DisplayObject3D} - Any object that inherits from DisplayObject3D may be added.\r\n\t  * @returns {DisplayObject3D} Returns this Stage3D object for chaining.\r\n\t  **/\n\t\t\tvalue: function add() {\n\t\t\t\tfor (var i = 0, ii = arguments.length; i < ii; i++) {\n\t\t\t\t\tvar c = arguments[i];\n\t\n\t\t\t\t\tif (c instanceof Stage3D) throw new Error(\"::DOM3D:: You cannot add a Stage3D to a group!\");\n\t\n\t\t\t\t\tif (!this.contains(c)) {\n\t\t\t\t\t\tif (c.parent !== null) c.parent.remove(c);\n\t\n\t\t\t\t\t\tthis.children.push(c);\n\t\t\t\t\t\tif (this.stage) this.stage.registerChild(c);\n\t\t\t\t\t\tc.parent = this;\n\t\n\t\t\t\t\t\t// add element to the right spot in actual DOM\n\t\t\t\t\t\tif (this.element !== c.element.parentElement) this.element.appendChild(c.element);\n\t\n\t\t\t\t\t\t// this engine requires block display and absolute positioning, enforce it here\n\t\t\t\t\t\tc.element.style.display = 'block';\n\t\t\t\t\t\tc.element.style.position = 'absolute';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tthis.render(false);\n\t\t\t\tif (this.stage) this.stage.sort();\n\t\n\t\t\t\treturn this;\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  * remove allows objects that were added via [add]{@link Stage3D#add} to be removed.\r\n\t  * @method Stage3D#remove\r\n\t  * @arg {DisplayObject3D} - Any object that inherits from DisplayObject3D and has been added may be removed.\r\n\t  * @returns {Stage3D} Returns this Stage3D object for chaining purposes.\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'remove',\n\t\t\tvalue: function remove() {\n\t\t\t\tfor (var i = 0, ii = arguments.length; i < ii; i++) {\n\t\t\t\t\tvar c = arguments[i];\n\t\n\t\t\t\t\tvar ind = this.children.indexOf(c);\n\t\t\t\t\tif (ind > -1) {\n\t\t\t\t\t\tthis.children.splice(ind, 1);\n\t\t\t\t\t\tif (this.stage) this.stage.unregisterChild(c);\n\t\t\t\t\t\tc.parent = null;\n\t\n\t\t\t\t\t\t// remove from actual DOM element\n\t\t\t\t\t\tc.element.remove();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  * contains allows you to check if a DisplayObject3D is contained (has been added via add) by the Stage3D\r\n\t  * @method Stage3D#contains\r\n\t  * @arg {DisplayObject3D} - The object to test for.\r\n\t  * @returns {Boolean} Returns a Boolean value for whether the Stage3D contains the object or not.\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'contains',\n\t\t\tvalue: function contains(c) {\n\t\t\t\treturn this.children.indexOf(c) > -1;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'getChildById',\n\t\n\t\n\t\t\t/**\r\n\t  * getChildById allows you to get a child of the Stage3D by its id property (which, remember, will match the actual element's id attribute if it had one).\r\n\t  * @method Stage3D#getChildById\r\n\t  * @arg {String} - The String id to look for.\r\n\t  * @returns {DisplayObject3D} Returns a the DisplayObject3D found if it is found. Returns null of none found.\r\n\t  **/\n\t\t\tvalue: function getChildById(s) {\n\t\t\t\tvar i, ii;\n\t\t\t\tfor (i = 0, ii = this.children.length; i < ii; i++) {\n\t\t\t\t\tif (this.children[i].id == s) return this.children[i];\n\t\t\t\t}return null;\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  * getChildByElement allows you to get a child of the Stage3D by its associated HTML Element.\r\n\t  * @method Stage3D#getChildByElement\r\n\t  * @arg {HTMLElement} - The associated HTMLElement of the display object you're looking for.\r\n\t  * @returns {DisplayObject3D} Returns a the DisplayObject3D found if it is found. Returns null of none found.\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'getChildByElement',\n\t\t\tvalue: function getChildByElement(e) {\n\t\t\t\tvar i, ii;\n\t\t\t\tfor (i = 0, ii = this.children.length; i < ii; i++) {\n\t\t\t\t\tif (this.children[i].element == e) return this.children[i];\n\t\t\t\t}return null;\n\t\t\t}\n\t\n\t\t\t// internal\n\t\n\t\t}, {\n\t\t\tkey: 'registerChild',\n\t\t\tvalue: function registerChild(c) {\n\t\t\t\tif (c.isGroup) {\n\t\t\t\t\tvar i,\n\t\t\t\t\t    ii,\n\t\t\t\t\t    ch = c.children;\n\t\t\t\t\tc.setStage(this);\n\t\t\t\t\tfor (i = 0, ii = ch.length; i < ii; i++) {\n\t\t\t\t\t\tthis.registerChild(ch[i]);\n\t\t\t\t\t}\n\t\t\t\t} else if (this.registeredChildren.indexOf(c) == -1) {\n\t\t\t\t\tthis.registeredChildren.push(c);\n\t\t\t\t\tc.setStage(this);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// internal\n\t\n\t\t}, {\n\t\t\tkey: 'unregisterChild',\n\t\t\tvalue: function unregisterChild(c) {\n\t\t\t\tvar ind = this.registeredChildren.indexOf(c);\n\t\t\t\tif (c.isGroup) {\n\t\t\t\t\tvar i,\n\t\t\t\t\t    ii,\n\t\t\t\t\t    ch = c.children;\n\t\t\t\t\tfor (i = 0, ii = ch.length; i < ii; i++) {\n\t\t\t\t\t\tthis.unregisterChild(ch[i]);\n\t\t\t\t\t}\n\t\t\t\t} else if (ind > -1) {\n\t\t\t\t\tthis.registeredChildren.splice(ind, 1);\n\t\t\t\t\tc.setStage(null);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  * This method must be called in order for the Stage3D instance to update every time something changes. Normally you let the stage autoRender, which will update 30 fps by default. However, you can turn autoRender off and update manually.\r\n\t  * @method Stage3D#update\r\n\t  * @returns {Boolean} Returns true if the update happened, false if it was cancelled on the update event.\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'update',\n\t\t\tvalue: function update() {\n\t\t\t\tvar cont = this.element.dispatchEvent(new _StageEvent2.default(_StageEvent2.default.UPDATE));\n\t\t\t\tif (!cont) return false;\n\t\n\t\t\t\tthis.render();\n\t\t\t\tthis.sort();\n\t\n\t\t\t\tthis.element.dispatchEvent(new _StageEvent2.default(_StageEvent2.default.AFTER_UPDATE));\n\t\t\t\treturn true;\n\t\t\t}\n\t\n\t\t\t// internal\n\t\n\t\t}, {\n\t\t\tkey: 'render',\n\t\t\tvalue: function render() {\n\t\t\t\tvar forceUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\t\n\t\t\t\tvar i, ii;\n\t\t\t\tfor (i = 0, ii = this.children.length; i < ii; i++) {\n\t\t\t\t\tthis.children[i].render(forceUpdate);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// internal\n\t\n\t\t}, {\n\t\t\tkey: 'sort',\n\t\t\tvalue: function sort() {\n\t\t\t\tvar i,\n\t\t\t\t    obj,\n\t\t\t\t    sZ = this.lowestZIndex;\n\t\n\t\t\t\tthis.registeredChildren.sort(function (a, b) {\n\t\t\t\t\treturn b.transform3D.concatenatedCoordinates.z - a.transform3D.concatenatedCoordinates.z;\n\t\t\t\t});\n\t\n\t\t\t\tfor (i = this.registeredChildren.length - 1; i > -1; i--) {\n\t\t\t\t\tthis.registeredChildren[i].element.style.zIndex = sZ++;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  * Allows you to turn off/on autoRender. If false then you must tell the scene to update manually via the update method.\r\n\t  * @var Stage3D#autoRender {Boolean}\r\n\t  * @default true\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'orthographic',\n\t\t\tget: function get() {\n\t\t\t\treturn this._orthographic;\n\t\t\t},\n\t\t\tset: function set(v) {\n\t\t\t\tif (v != this._orthographic) {\n\t\t\t\t\tthis._dirty = true;\n\t\t\t\t\tthis._orthographic = v;\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'numChildren',\n\t\t\tget: function get() {\n\t\t\t\treturn this.children.length;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'autoRender',\n\t\t\tget: function get() {\n\t\t\t\treturn this._autoRender;\n\t\t\t},\n\t\t\tset: function set(v) {\n\t\t\t\t// if already that way do nothing\n\t\t\t\tif (v === this._autoRender) return;\n\t\n\t\t\t\t// if turning it on\n\t\t\t\tif (v) {\n\t\t\t\t\tvar boundUpdate = this.update.bind(this);\n\t\t\t\t\tthis.updateInterval = setInterval(boundUpdate, 1000 / this._FPS);\n\t\t\t\t\tsetTimeout(boundUpdate, 1);\n\t\t\t\t}\n\t\t\t\t// if turning it off\n\t\t\t\telse {\n\t\t\t\t\t\tif (this.updateInterval) clearInterval(this.updateInterval);\n\t\t\t\t\t}\n\t\n\t\t\t\t// update private var\n\t\t\t\tthis._autoRender = v;\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  * Allows you to determine the rate at which the scene updates during autoRender.\r\n\t  * @var Stage3D#FPS {Number}\r\n\t  * @default 30\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'FPS',\n\t\t\tget: function get() {\n\t\t\t\treturn this._FPS;\n\t\t\t},\n\t\t\tset: function set(v) {\n\t\t\t\t// if already that way do nothing\n\t\t\t\tif (v === this._FPS) return;\n\t\n\t\t\t\t// it's different, so set new val\n\t\t\t\tthis._FPS = v;\n\t\n\t\t\t\t// if not auto-rendering then no need to do anything else\n\t\t\t\tif (!this._autoRender) return;\n\t\n\t\t\t\t// otherwise we need to reset the auto-rendering\n\t\t\t\tthis.autoRender = false;\n\t\t\t\tthis.autoRender = true;\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn Stage3D;\n\t}(_DisplayObject3D3.default);\n\t\n\texports.default = Stage3D;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar StageEvent = function () {\n\t\t_createClass(StageEvent, null, [{\n\t\t\tkey: 'UPDATE',\n\t\n\t\t\t/**\r\n\t  * Constant for the event that dispatches from the Stage3D element before every update.\r\n\t  * @const StageEvent.UPDATE {String}\r\n\t  * @note Using `.preventDefault()` within a listener for this event will cancel the upcoming render.\r\n\t  */\n\t\t\tget: function get() {\n\t\t\t\treturn 'stageupdate';\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'AFTER_UPDATE',\n\t\n\t\n\t\t\t/**\r\n\t  * Constant for the event that dispatches from the Stage3D element after every update.\r\n\t  * @const StageEvent.AFTER_UPDATE {String}\r\n\t  */\n\t\t\tget: function get() {\n\t\t\t\treturn 'afterstageupdate';\n\t\t\t}\n\t\t}]);\n\t\n\t\t/**\r\n\t * Constructs a StageEvent. Because on Internet Explorer `Event` is an object, not a function, this is\r\n\t * not a true extension of Event. The constructor creates and returns an Event itself instead of a StageEvent\r\n\t * which extends Event. So things such as `new StageEvent(StageEvent.UPDATE) instanceof StageEvent` will be false.\r\n\t * @note This is mostly instantiated internally. Externally the important parts are the StageEvent constants, which are used to add listeners, e.g. `myStage.addListener(StageEvent.UPDATE, handleUpdate)`\r\n\t * @class StageEvent\r\n\t * @extends Event\r\n\t * @arg type - The type of StageEvent being created. Must be a valid value from one of the StageEvent class constants.\r\n\t **/\n\t\tfunction StageEvent(type) {\n\t\t\t_classCallCheck(this, StageEvent);\n\t\n\t\t\tvar initObj;\n\t\t\tif (type === StageEvent.UPDATE) initObj = { bubbles: false, cancelable: true };else if (type === StageEvent.AFTER_UPDATE) initObj = { bubbles: false, cancelable: false };else throw new Error('::DOM3D:: Invalid StageEvent type.');\n\t\n\t\t\tif (typeof Event === 'function') {\n\t\t\t\treturn new Event(type, initObj);\n\t\t\t} else {\n\t\t\t\tif (initObj === undefined) initObj = {};\n\t\t\t\tvar evt = document.createEvent('Event');\n\t\t\t\tevt.initEvent(type, !!initObj.bubbles, !!initObj.cancelable);\n\t\t\t\treturn evt;\n\t\t\t}\n\t\t}\n\t\n\t\treturn StageEvent;\n\t}();\n\t\n\texports.default = StageEvent;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\texports.default = determineElement;\n\t\n\t// determines how to use/create what's supplied as a constructor\n\t// for a given display object as actual HTML\n\t\n\t// 1: if nothing given returns empty div\n\t// 2: if an actual HTMLElement is given then just return that\n\t// 3: if an object is given treats as object params for buildElementFromObject (see below)\n\t// 4: if string is given then either treats as literal markup (if starts with '<') or as a query selector for preexisting element\n\tfunction determineElement(content) {\n\t\t// if none given, make a div\n\t\tif (!content) return document.createElement('div');\n\t\n\t\t// if HTMLElement return as is\n\t\tif (content instanceof HTMLElement) return content;\n\t\n\t\t// if an object is given, make an element based on the criteria\n\t\tif ((typeof content === 'undefined' ? 'undefined' : _typeof(content)) === 'object') return buildElementFromObject(content);\n\t\n\t\t// if it's a string...\n\t\tif (typeof content === 'string') {\n\t\t\t// if it's a piece of HTML parse it and return 1 element\n\t\t\tif (content.charAt(0) === '<') {\n\t\t\t\tvar wrap = document.createElement('div');\n\t\t\t\twrap.innerHTML = content;\n\t\t\t\treturn wrap.firstChild;\n\t\t\t}\n\t\t\t// otherwise assume it's a query selector and return the first match\n\t\t\telse {\n\t\t\t\t\treturn document.querySelector(content);\n\t\t\t\t}\n\t\t}\n\t\n\t\t// otherwise throw\n\t\tthrow new Error('::DOM3D:: Invalid content given for creation of element.');\n\t}\n\t\n\t// type: ['div' or 'img' if has a `src`] the element type to make\n\t// id: specify an id for the element\n\t// className: string class name, or space delimeted list, or Array of class names\n\t// innerHTML or content: specify innerHTML\n\t// src: makes it an img with a source\n\t// alt: should only use on images, but gives an alt tag\n\tfunction buildElementFromObject(obj) {\n\t\tvar elem = document.createElement(obj.type || (obj.src ? 'img' : 'div'));\n\t\n\t\tif (obj.id) elem.setAttribute('id', obj.id);\n\t\n\t\tif (obj.className && typeof obj.className === 'string') elem.className = obj.className;\n\t\tif (obj.className && Array.isArray(obj.className)) elem.className = obj.className.join(' ');\n\t\n\t\tif (obj.content) elem.innerHTML = obj.content;\n\t\tif (obj.innerHTML) elem.innerHTML = obj.innerHTML;\n\t\n\t\tif (obj.src) elem.src = obj.src;\n\t\tif (obj.alt) elem.alt = obj.alt;\n\t\n\t\treturn elem;\n\t}\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _DisplayObject3D2 = __webpack_require__(1);\n\t\n\tvar _DisplayObject3D3 = _interopRequireDefault(_DisplayObject3D2);\n\t\n\tvar _Stage3D = __webpack_require__(10);\n\t\n\tvar _Stage3D2 = _interopRequireDefault(_Stage3D);\n\t\n\tvar _Matrix3x = __webpack_require__(2);\n\t\n\tvar _Matrix3x2 = _interopRequireDefault(_Matrix3x);\n\t\n\tvar _Transform3D = __webpack_require__(4);\n\t\n\tvar _Transform3D2 = _interopRequireDefault(_Transform3D);\n\t\n\tvar _determineElement = __webpack_require__(12);\n\t\n\tvar _determineElement2 = _interopRequireDefault(_determineElement);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Group3D = function (_DisplayObject3D) {\n\t\t_inherits(Group3D, _DisplayObject3D);\n\t\n\t\t/**\r\n\t * The Group3D class acts as a container for 3D based elements. Any 3D elements inside a Group3D will move and rotate as the Group3D does in a forward kinematic fashion. Group3D instances can also contain other Group3D instances and create infinitely deep forward kinematics.\r\n\t * @class Group3D\r\n\t * @extends DisplayObject3D\r\n\t * @arg element - An argument identifying the HTML Element the display object is to associate with. Can be the actual element itself, an HTML string representing an element to create, or a query selector string which will identify the intended HTML element already in the DOM.\r\n\t **/\n\t\tfunction Group3D(_el) {\n\t\t\t_classCallCheck(this, Group3D);\n\t\n\t\t\tvar _this = _possibleConstructorReturn(this, (Group3D.__proto__ || Object.getPrototypeOf(Group3D)).call(this));\n\t\n\t\t\t_this.element = (0, _determineElement2.default)(_el);\n\t\t\t_this.id = _this.element.hasAttribute('id') ? _this.element.attributes.id.value : 'group_' + _DisplayObject3D3.default.idCount++;\n\t\t\t_this.element.dom3dObject = _this;\n\t\n\t\t\t_this.matrix = new _Matrix3x2.default();\n\t\t\t_this.transform3D = new _Transform3D2.default();\n\t\n\t\t\t// private\n\t\t\t_this._orthographic = false;\n\t\n\t\t\t/**\r\n\t  * Allows access to the Array of child objects for this container. Special care should be taken when accessing to not modify the original Array.\r\n\t  * @var Group3D#children {Array}\r\n\t  * @readonly\r\n\t  * @default [empty Array]\r\n\t  **/\n\t\t\t_this.children = [];\n\t\n\t\t\t/**\r\n\t  * A Group3D will have an isGroup property of true for identification purposes. Stage3D instances will also have it. This serves to identify the object as the general concept of a 3D group/container, as opposed to identifying it as a specific Group3D class instance.\r\n\t  * @var Group3D#isGroup {Boolean}\r\n\t  * @readonly\r\n\t  * @default true\r\n\t  **/\n\t\t\t_this.isGroup = true;\n\t\t\treturn _this;\n\t\t}\n\t\n\t\t/**\r\n\t * add allows objects to be added to this Group3D. Note: likewise, a Group3D instance is added to another Group3D or to the {@link Stage3D} via those instances' `add` methods as well.\r\n\t * @method Group3D#add\r\n\t * @arg {DisplayObject3D} - Any object that inherits from DisplayObject3D may be added.\r\n\t * @returns {DisplayObject3D} Returns this Group3D object for chaining.\r\n\t **/\n\t\n\t\n\t\t_createClass(Group3D, [{\n\t\t\tkey: 'add',\n\t\t\tvalue: function add() {\n\t\t\t\tfor (var i = 0, ii = arguments.length; i < ii; i++) {\n\t\t\t\t\tvar c = arguments[i];\n\t\n\t\t\t\t\tif (c === this) throw new Error(\"::DOM3D:: You cannot add a 3D group to itself!\");\n\t\t\t\t\tif (c instanceof _Stage3D2.default) throw new Error(\"::DOM3D:: You cannot add a Stage3D to a group!\");\n\t\n\t\t\t\t\tif (!this.contains(c)) {\n\t\t\t\t\t\tif (c.parent !== null) c.parent.remove(c);\n\t\n\t\t\t\t\t\tthis.children.push(c);\n\t\t\t\t\t\tif (this.stage) this.stage.registerChild(c);\n\t\t\t\t\t\tc.parent = this;\n\t\n\t\t\t\t\t\t// add element to the right spot in actual DOM\n\t\t\t\t\t\tif (this.element !== c.element.parentElement) this.element.appendChild(c.element);\n\t\n\t\t\t\t\t\t// this engine requires block display and absolute positioning, enforce it here\n\t\t\t\t\t\tc.element.style.display = 'block';\n\t\t\t\t\t\tc.element.style.position = 'absolute';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tif (this.stage) {\n\t\t\t\t\tthis.render(false);\n\t\t\t\t\tthis.stage.sort();\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  * remove allows objects that were added via [add]{@link Group3D#add} to be removed.\r\n\t  * @method Group3D#remove\r\n\t  * @arg {DisplayObject3D} - Any object that inherits from DisplayObject3D and has been added may be removed.\r\n\t  * @returns {Group3D} Returns this Group3D object for chaining purposes.\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'remove',\n\t\t\tvalue: function remove() {\n\t\t\t\tfor (var i = 0, ii = arguments.length; i < ii; i++) {\n\t\t\t\t\tvar c = arguments[i];\n\t\n\t\t\t\t\tvar ind = this.children.indexOf(c);\n\t\t\t\t\tif (ind > -1) {\n\t\t\t\t\t\tthis.children.splice(ind, 1);\n\t\t\t\t\t\tif (this.stage) this.stage.unregisterChild(c);\n\t\t\t\t\t\tc.parent = null;\n\t\n\t\t\t\t\t\t// take element out of DOM\n\t\t\t\t\t\tc.element.remove();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  * contains allows you to check if a DisplayObject3D is contained (has been added via add) by the Group3D\r\n\t  * @method Group3D#contains\r\n\t  * @arg {DisplayObject3D} - The object to test for.\r\n\t  * @returns {Boolean} Returns a Boolean value for whether the Group3D contains the object or not.\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'contains',\n\t\t\tvalue: function contains(c) {\n\t\t\t\treturn this.children.indexOf(c) > -1;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'getChildById',\n\t\n\t\n\t\t\t/**\r\n\t  * getChildById allows you to get a child of the Group3D by its id property (which, remember, will match the actual element's id attribute if it had one).\r\n\t  * @method Group3D#getChildById\r\n\t  * @arg {String} - The String id to look for.\r\n\t  * @returns {DisplayObject3D} Returns a the DisplayObject3D found if it is found. Returns null of none found.\r\n\t  **/\n\t\t\tvalue: function getChildById(s) {\n\t\t\t\tvar i, ii;\n\t\t\t\tfor (i = 0, ii = this.children.length; i < ii; i++) {\n\t\t\t\t\tif (this.children[i].id === s) return this.children[i];\n\t\t\t\t}return null;\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  * getChildByElement allows you to get a child of the Group3D by its associated HTML Element.\r\n\t  * @method Group3D#getChildByElement\r\n\t  * @arg {HTMLElement} - The associated HTMLElement of the display object you're looking for.\r\n\t  * @returns {DisplayObject3D} Returns a the DisplayObject3D found if it is found. Returns null of none found.\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'getChildByElement',\n\t\t\tvalue: function getChildByElement(e) {\n\t\t\t\tvar i, ii;\n\t\t\t\tfor (i = 0, ii = this.children.length; i < ii; i++) {\n\t\t\t\t\tif (this.children[i].element === e) return this.children[i];\n\t\t\t\t}return null;\n\t\t\t}\n\t\n\t\t\t/**\r\n\t  * Sets whether this group will render its direct children orthographically or not. Important for the rendering of primitive shapes, because otherwise edge geometry is not precise with neighboring elements.\r\n\t  * @note If a group's orthographic property is set to true, then any groups it contains should also be set to true.\r\n\t  * @var Group3D#orthographic {Boolean}\r\n\t  * @default false\r\n\t  **/\n\t\n\t\t}, {\n\t\t\tkey: 'render',\n\t\t\tvalue: function render(pDirty) {\n\t\t\t\tvar i, ii;\n\t\t\t\tif (!this._dirty && !pDirty) {\n\t\t\t\t\t// give any child groups a chance to update even if this isn't dirty\n\t\t\t\t\tfor (i = 0, ii = this.children.length; i < ii; i++) {\n\t\t\t\t\t\tthis.children[i].render(false);\n\t\t\t\t\t}return;\n\t\t\t\t}\n\t\n\t\t\t\tthis.updateWorld();\n\t\t\t\tthis.rotateCoords();\n\t\n\t\t\t\tfor (i = 0, ii = this.children.length; i < ii; i++) {\n\t\t\t\t\tthis.children[i].render(pDirty || this._dirty);\n\t\t\t\t}this._dirty = false;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'numChildren',\n\t\t\tget: function get() {\n\t\t\t\treturn this.children.length;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'orthographic',\n\t\t\tget: function get() {\n\t\t\t\treturn this._orthographic;\n\t\t\t},\n\t\t\tset: function set(v) {\n\t\t\t\tif (v != this._orthographic) {\n\t\t\t\t\tthis._dirty = true;\n\t\t\t\t\tthis._orthographic = v;\n\t\t\t\t}\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn Group3D;\n\t}(_DisplayObject3D3.default);\n\t\n\texports.default = Group3D;\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _DisplayObject3D2 = __webpack_require__(1);\n\t\n\tvar _DisplayObject3D3 = _interopRequireDefault(_DisplayObject3D2);\n\t\n\tvar _Matrix3x = __webpack_require__(2);\n\t\n\tvar _Matrix3x2 = _interopRequireDefault(_Matrix3x);\n\t\n\tvar _Transform3D = __webpack_require__(4);\n\t\n\tvar _Transform3D2 = _interopRequireDefault(_Transform3D);\n\t\n\tvar _determineElement = __webpack_require__(12);\n\t\n\tvar _determineElement2 = _interopRequireDefault(_determineElement);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Element3D = function (_DisplayObject3D) {\n\t\t_inherits(Element3D, _DisplayObject3D);\n\t\n\t\t/**\r\n\t * The Element3D class is simply a 3D plane in the scene. Any DOM elements it contains will be part of that 2D plane, not their own 3D objects.\r\n\t * @class Element3D\r\n\t * @extends DisplayObject3D\r\n\t * @arg element - An argument identifying the HTML Element the display object is to associate with. Can be the actual element itself, an HTML string representing an element to create, or a query selector string which will identify the intended HTML element already in the DOM.\r\n\t **/\n\t\tfunction Element3D(_el) {\n\t\t\t_classCallCheck(this, Element3D);\n\t\n\t\t\tvar _this = _possibleConstructorReturn(this, (Element3D.__proto__ || Object.getPrototypeOf(Element3D)).call(this));\n\t\n\t\t\t_this.element = (0, _determineElement2.default)(_el);\n\t\t\t_this.id = _this.element.hasAttribute('id') ? _this.element.attributes.id.value : 'element_' + _DisplayObject3D3.default.idCount++;\n\t\t\t_this.element.dom3dObject = _this;\n\t\n\t\t\t/**\r\n\t  * Allows locking of the Element3D facing forward at all times if set to true, regardless or local or global rotation. Can be set to true automatically by a scene made in the DOM by including a CSS class of \"dom3d-lockfacingfront\" on the Element3D element.\r\n\t  * @var Element3D#lockFacingFront {Boolean}\r\n\t  * @default false\r\n\t  **/\n\t\t\t_this.lockFacingFront = false;\n\t\n\t\t\t_this.transformMatrix = new _Matrix3x2.default();\n\t\t\t_this.transform3D = new _Transform3D2.default();\n\t\t\treturn _this;\n\t\t}\n\t\n\t\t_createClass(Element3D, [{\n\t\t\tkey: 'render',\n\t\t\tvalue: function render(pDirty) {\n\t\t\t\tif (!this._dirty && !pDirty) return;\n\t\t\t\tthis._dirty = false;\n\t\n\t\t\t\tthis.updateWorld();\n\t\t\t\tthis.rotateCoords();\n\t\t\t\tif (!this.lockFacingFront) this.rotateObject();else this.transformMatrix.zero();\n\t\t\t\tthis.renderObject();\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn Element3D;\n\t}(_DisplayObject3D3.default);\n\t\n\texports.default = Element3D;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _DisplayObject3D2 = __webpack_require__(1);\n\t\n\tvar _DisplayObject3D3 = _interopRequireDefault(_DisplayObject3D2);\n\t\n\tvar _Matrix3x = __webpack_require__(2);\n\t\n\tvar _Matrix3x2 = _interopRequireDefault(_Matrix3x);\n\t\n\tvar _Transform3D = __webpack_require__(4);\n\t\n\tvar _Transform3D2 = _interopRequireDefault(_Transform3D);\n\t\n\tvar _determineElement = __webpack_require__(12);\n\t\n\tvar _determineElement2 = _interopRequireDefault(_determineElement);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar PaperElement3D = function (_DisplayObject3D) {\n\t\t_inherits(PaperElement3D, _DisplayObject3D);\n\t\n\t\t/**\r\n\t * The PaperElement3D class is a type of Element3D which is meant to hold 2 child DOM elements which represent a front and a back which show depending on which way the object is facing in 3D space. Basically a 2 sided element.\r\n\t * <br><br>\r\n\t * When assigned an element via the constructor any direct child elements with the class names <code>dom3d-front</code> and <code>dom3d-back</code> will automatically be set up as the object's front and back. If no front/back are given in the constructor, or present as <code>dom3d-front</code> and <code>dom3d-back</code> classed children in the main element, then elements will be created automatically.\r\n\t * @class PaperElement3D\r\n\t * @extends DisplayObject3D\r\n\t * @arg element - An argument identifying the HTML Element the display object is to associate with. Can be the actual element itself, an HTML string representing an element to create, or a query selector string which will identify the intended HTML element already in the DOM.\r\n\t * @arg [front] - An optional argument identifying an HTML Element that is meant to be this object's front side. Can be the actual element itself, an HTML string representing an element to create, or a query selector string which will identify the intended HTML element already in the DOM.\r\n\t * @arg [back] - An optional argument identifying an HTML Element that is meant to be this object's back side. Can be the actual element itself, an HTML string representing an element to create, or a query selector string which will identify the intended HTML element already in the DOM.\r\n\t **/\n\t\tfunction PaperElement3D(_el, _fel, _bel) {\n\t\t\t_classCallCheck(this, PaperElement3D);\n\t\n\t\t\t/**\r\n\t  * Set to an HTML Element child of this one which will show when its front is facing forward.\r\n\t  * @var PaperElement3D#front {HTMLElement}\r\n\t  * @default null\r\n\t  **/\n\t\t\tvar _this = _possibleConstructorReturn(this, (PaperElement3D.__proto__ || Object.getPrototypeOf(PaperElement3D)).call(this));\n\t\n\t\t\t_this.front = null;\n\t\t\t/**\r\n\t  * Set to an HTML Element child of this one which will show when its back is facing forward.\r\n\t  * @var PaperElement3D#back {HTMLElement}\r\n\t  * @default null\r\n\t  **/\n\t\t\t_this.back = null;\n\t\t\t/**\r\n\t  * Used to read whether the object considers itself front-facing at the moment.\r\n\t  * @var PaperElement3D#frontFacing {Boolean}\r\n\t  * @readonly\r\n\t  * @default true\r\n\t  **/\n\t\t\t_this.frontFacing = true;\n\t\n\t\t\t_this.element = (0, _determineElement2.default)(_el);\n\t\t\t_this.id = _this.element.hasAttribute('id') ? _this.element.attributes.id.value : 'paperelement_' + _DisplayObject3D3.default.idCount++;\n\t\t\t_this.element.dom3dObject = _this;\n\t\n\t\t\tvar _f, _b;\n\t\t\tif (document.querySelector) {\n\t\t\t\t_f = _this.element.querySelector('.dom3d-front');\n\t\t\t\t_b = _this.element.querySelector('.dom3d-back');\n\t\t\t}\n\t\t\tvar determined_fel = (0, _determineElement2.default)(_fel || _f);\n\t\t\tvar determined_bel = (0, _determineElement2.default)(_bel || _b);\n\t\t\t_this.front = determined_fel;\n\t\t\t_this.back = determined_bel;\n\t\t\t_this.front.style.position = 'absolute';\n\t\t\t_this.back.style.position = 'absolute';\n\t\t\t_this.element.appendChild(_this.front);\n\t\t\t_this.element.appendChild(_this.back);\n\t\n\t\t\t_this.transformMatrix = new _Matrix3x2.default();\n\t\t\t_this.transform3D = new _Transform3D2.default();\n\t\n\t\t\t// points for calculating winding\n\t\t\tvar self = _this;\n\t\t\t_this.p1 = buildPoint(0, 0);\n\t\t\t_this.p2 = buildPoint(100, 0);\n\t\t\t_this.p3 = buildPoint(0, 100);\n\t\t\tfunction buildPoint(x, y) {\n\t\t\t\tvar p = document.createElement('div');\n\t\t\t\tp.style.position = 'absolute';\n\t\t\t\tp.style.top = y + 'px';\n\t\t\t\tp.style.left = x + 'px';\n\t\t\t\tself.element.appendChild(p);\n\t\t\t\treturn p;\n\t\t\t}\n\t\t\treturn _this;\n\t\t}\n\t\n\t\t_createClass(PaperElement3D, [{\n\t\t\tkey: 'render',\n\t\t\tvalue: function render(pDirty) {\n\t\t\t\tif (!this._dirty && !pDirty) return;\n\t\n\t\t\t\tthis.updateWorld();\n\t\t\t\tthis.rotateCoords();\n\t\t\t\tthis.rotateObject();\n\t\t\t\tthis.renderObject();\n\t\n\t\t\t\tthis._dirty = false;\n\t\n\t\t\t\tthis.determineFace();\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'determineFace',\n\t\t\tvalue: function determineFace() {\n\t\t\t\tvar p1rect = this.p1.getBoundingClientRect();\n\t\t\t\tvar p2rect = this.p2.getBoundingClientRect();\n\t\t\t\tvar p3rect = this.p3.getBoundingClientRect();\n\t\t\t\tvar p1x = p1rect.left;\n\t\t\t\tvar p1y = p1rect.top;\n\t\t\t\tvar p2x = p2rect.left;\n\t\t\t\tvar p2y = p2rect.top;\n\t\t\t\tvar p3x = p3rect.left;\n\t\t\t\tvar p3y = p3rect.top;\n\t\n\t\t\t\tthis.frontFacing = (p2x - p1x) * (p3y - p1y) - (p2y - p1y) * (p3x - p1x) > 0;\n\t\n\t\t\t\tif (this.back) {\n\t\t\t\t\tthis.back.style.visibility = this.frontFacing ? 'hidden' : 'visible';\n\t\t\t\t\tthis.back.style.pointerEvents = this.frontFacing ? 'none' : '';\n\t\t\t\t}\n\t\t\t\tif (this.front) {\n\t\t\t\t\tthis.front.style.visibility = this.frontFacing ? 'visible' : 'hidden';\n\t\t\t\t\tthis.front.style.pointerEvents = this.frontFacing ? '' : 'none';\n\t\t\t\t}\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn PaperElement3D;\n\t}(_DisplayObject3D3.default);\n\t\n\texports.default = PaperElement3D;\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Point3D = __webpack_require__(5);\n\t\n\tvar _Point3D2 = _interopRequireDefault(_Point3D);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar DepthOfField = function () {\n\t\t/**\r\n\t * Allows the creation of a DepthOfField instance which can be pushed into the stage's `effects` array to apply the effect to a scene.\r\n\t * @class DepthOfField\r\n\t * @arg [strength] {Number} - Optional shortcut to set strength.\r\n\t * @arg [trueDistance] {Boolean} - Optional shortcut to set trueDistance.\r\n\t * @arg [focus] {Object} - Optional shortcut to set focus.\r\n\t **/\n\t\tfunction DepthOfField() {\n\t\t\tvar strength = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\t\t\tvar trueDistance = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\t\t\tvar focus = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\t\n\t\t\t_classCallCheck(this, DepthOfField);\n\t\n\t\t\t/**\r\n\t  * Sets the strength of the effect.\r\n\t  * @var DepthOfField#strength {Number}\r\n\t  * @default 1\r\n\t  **/\n\t\t\tthis.strength = strength;\n\t\n\t\t\t/**\r\n\t  * Sets whether the effect utilizes true distance from the focus point (true) or simply the object's z location (false) for the effect.\r\n\t  * @var DepthOfField#trueDistance {Boolean}\r\n\t  * @default true\r\n\t  **/\n\t\t\tthis.trueDistance = trueDistance;\n\t\n\t\t\t/**\r\n\t  * Allows you to control the global point of focus for the depth of field. Can be set to a simple object with x, y, and z properties. If trueDistance is false then only the z is relevant.\r\n\t  * @var DepthOfField#focus {Object}\r\n\t  * @default {x:0,y:0,z:0}\r\n\t  */\n\t\t\tthis.focus = focus || { x: 0, y: 0, z: 0 };\n\t\t}\n\t\n\t\t_createClass(DepthOfField, [{\n\t\t\tkey: 'render',\n\t\t\tvalue: function render(obj) {\n\t\t\t\t// if it's a group then don't blur the group; get down to the components\n\t\t\t\tif (obj.isGroup) return;\n\t\n\t\t\t\tvar coords = obj.transform3D.concatenatedCoordinates;\n\t\t\t\tvar dist = this.trueDistance ? _Point3D2.default.distance(this.focus, coords) : Math.abs(this.focus.z - coords.z);\n\t\t\t\tvar blurAmt = this.strength * (dist / obj.stage.zoom) * 25;\n\t\n\t\t\t\tvar newVal = 'blur(' + blurAmt + 'px)';\n\t\t\t\tif (obj.style.filter !== newVal) obj.style.filter = obj.style.webkitFilter = newVal;\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn DepthOfField;\n\t}();\n\t\n\texports.default = DepthOfField;\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// dom3d.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5aa6dc8d4fe291fae125","\r\nimport DisplayObject3D from './DisplayObject3D';\r\nimport Stage3D from './Stage3D';\r\nimport Group3D from './Group3D';\r\nimport Element3D from './Element3D';\r\nimport PaperElement3D from './PaperElement3D';\r\nimport Point3D from './geom/Point3D';\r\nimport Matrix3x3 from './geom/Matrix3x3';\r\nimport EulerAngle from './geom/EulerAngle';\r\nimport Quaternion from './geom/Quaternion';\r\nimport Transform3D from './geom/Transform3D';\r\nimport StageEvent from './events/StageEvent';\r\nimport DepthOfField from './effects/DepthOfField';\r\n\r\nvar dom3d = {\r\n\tspread,\r\n\tDisplayObject3D,\r\n\tStage3D,\r\n\tGroup3D,\r\n\tElement3D,\r\n\tPaperElement3D,\r\n\tStageEvent,\r\n\tDepthOfField,\r\n\tPoint3D,\r\n\tMatrix3x3,\r\n\tEulerAngle,\r\n\tQuaternion,\r\n\tTransform3D,\r\n}\r\nmodule.exports = dom3d;\r\n\r\n// if is in browser environment then add dom3d to window\r\nif (typeof window !== 'undefined')\r\n{\r\n\twindow.dom3d = {};\r\n\tspread(window.dom3d, true, true);\r\n}\r\n\r\n// spread util\r\nfunction spread(obj, includeGeom = false, includeSpread = false)\r\n{\r\n\tif (!obj)\r\n\t\tobj = window;\r\n\t\r\n\tobj.DisplayObject3D = DisplayObject3D;\r\n\tobj.Stage3D = Stage3D;\r\n\tobj.Group3D = Group3D;\r\n\tobj.Element3D = Element3D;\r\n\tobj.PaperElement3D = PaperElement3D;\r\n\t\r\n\tobj.StageEvent = StageEvent;\r\n\t\r\n\tobj.DepthOfField = DepthOfField;\r\n\t\r\n\tif (includeGeom)\r\n\t{\r\n\t\tobj.Point3D = Point3D;\r\n\t\tobj.Matrix3x3 = Matrix3x3;\r\n\t\tobj.EulerAngle = EulerAngle;\r\n\t\tobj.Quaternion = Quaternion;\r\n\t\tobj.Transform3D = Transform3D;\r\n\t}\r\n\t\r\n\tif (includeSpread)\r\n\t{\r\n\t\tobj.spread = spread;\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./C:/Users/R2D2/projects/dom3d/src/dom3d.js","\r\nimport Matrix3x3 from './geom/Matrix3x3';\r\nimport Transform3D from './geom/Transform3D';\r\nimport CalculatedInfo from './geom/CalculatedInfo';\r\nimport {TO_RAD} from './utils/MathUtils';\r\nimport PropNames from './utils/PropNames';\r\n\r\nexport default class DisplayObject3D\r\n{\r\n\t/**\r\n\t* The DisplayObject3D class is an abstract class that serves as the base for all 3D capable elements to be used within a dom3d {@link Stage3D} scene. It is not meant to be directly instantiated.\r\n\t* <br/><br/>\r\n\t* All DOM elements associated with any dom3d class that inherits from DisplayObject3D (with the exception of Stage3D class objects) should be assumed to operate with a CSS display of 'block' and a CSS position of 'absolute'.\r\n\t* @class DisplayObject3D\r\n\t* @abstract\r\n\t*/\r\n\tconstructor()\r\n\t{\r\n\t\t// private\r\n\t\tthis._x = 0;\r\n\t\tthis._y = 0;\r\n\t\tthis._z = 0;\r\n\t\t\r\n\t\t// private\r\n\t\tthis._rotX = 0;\r\n\t\tthis._rotY = 0;\r\n\t\tthis._rotZ = 0;\r\n\t\t\r\n\t\t// private\r\n\t\tthis._regX = 0;\r\n\t\tthis._regY = 0;\r\n\t\t\r\n\t\t// private\r\n\t\tthis._dirty = true;\r\n\t\t\r\n\t\t// used internally\r\n\t\tthis.matrix = new Matrix3x3();\r\n\t\tthis.transform3D = new Transform3D();\r\n\t\t\r\n\t\t/**\r\n\t\t* Each DisplayObject3D has a unique id property. When the element it represents has an id attribute at the time of instantiation it will match its element's id. Otherwise a unique one will be generated. You can also assign your own.\r\n\t\t* @var DisplayObject3D#id {String}\r\n\t\t* @default generated if the element has no id\r\n\t\t**/\r\n\t\tthis.id = '';\r\n\t\t\r\n\t\t/**\r\n\t\t* Every DisplayObject3D represents an HTML Element. You can access that element by accessing the object's element property. Conversely any element that has an associated DisplayObject3D will have a property .dom3dObject which references its DisplayObject3D.\r\n\t\t* @var DisplayObject3D#element {HTMLElement}\r\n\t\t* @readonly\r\n\t\t* @default null\r\n\t\t**/\r\n\t\tthis.element = null;\r\n\t\t\r\n\t\t/**\r\n\t\t* Each DisplayObject3D has a stage property that allows it to tell which stage it is currently in the display list of. Is null when not in a display list.\r\n\t\t* @var DisplayObject3D#stage {Stage3D}\r\n\t\t* @readonly\r\n\t\t* @default null\r\n\t\t**/\r\n\t\tthis.stage = null;\r\n\t\t\r\n\t\t/**\r\n\t\t* Each DisplayObject3D has a parent property that allows it to tell which object is currently this object's parent in the display list. null if it is not in the display list. This is a reflection of the dom3d display list, not necessarily of the actual HTML parent/child structure.\r\n\t\t* @var DisplayObject3D#parent {DisplayObject3D}\r\n\t\t* @readonly\r\n\t\t* @default null\r\n\t\t**/\r\n\t\tthis.parent = null;\r\n\t\t\r\n\t\t/**\r\n\t\tEach DisplayObject3D has a calc property that allows for easy reading of the final calculated x, y, z, rotX, rotY, and rotZ values.\r\n\t\t* @var DisplayObject3D#calc {Object}\r\n\t\t* @readonly\r\n\t\t* @note The values on this property are only fully accurate immediately after a render/update. If you've changed values between render and reading then readings here may no longer be accurate.\r\n\t\t**/\r\n\t\tthis.calc = new CalculatedInfo(this);\r\n\t}\r\n\t\r\n\t/**\r\n\t* The x property sets the x coordinate value for the DisplayObject3D instance.\r\n\t* @var DisplayObject3D#x {Number}\r\n\t* @default 0\r\n\t**/\r\n\tget x(){ return this._x; }\r\n\tset x(v)\r\n\t{\r\n\t\tif (v != this._x)\r\n\t\t{\r\n\t\t\tthis._dirty = true;\r\n\t\t\tthis._x = v;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t* The y property sets the y coordinate value for the DisplayObject3D instance.\r\n\t* @var DisplayObject3D#y {Number}\r\n\t* @default 0\r\n\t**/\r\n\tget y(){ return this._y; }\r\n\tset y(v)\r\n\t{\r\n\t\tif (v != this._y)\r\n\t\t{\r\n\t\t\tthis._dirty = true;\r\n\t\t\tthis._y = v;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t* The z property sets the z coordinate value for the DisplayObject3D instance.\r\n\t* @var DisplayObject3D#z {Number}\r\n\t* @default 0\r\n\t**/\r\n\tget z(){ return this._z; }\r\n\tset z(v)\r\n\t{\r\n\t\tif (v != this._z)\r\n\t\t{\r\n\t\t\tthis._dirty = true;\r\n\t\t\tthis._z = v;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t* The rotX property sets the x-axis rotation value for the DisplayObject3D instance in degrees.\r\n\t* @var DisplayObject3D#rotX {Number}\r\n\t* @default 0\r\n\t**/\r\n\tget rotX(){ return this._rotX; }\r\n\tset rotX(v)\r\n\t{\r\n\t\tif (v != this._rotX)\r\n\t\t{\r\n\t\t\tthis._dirty = true;\r\n\t\t\tthis._rotX = v;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t* The rotY property sets the y-axis rotation value for the DisplayObject3D instance in degrees.\r\n\t* @var DisplayObject3D#rotY {Number}\r\n\t* @default 0\r\n\t**/\r\n\tget rotY(){ return this._rotY; }\r\n\tset rotY(v)\r\n\t{\r\n\t\tif (v != this._rotY)\r\n\t\t{\r\n\t\t\tthis._dirty = true;\r\n\t\t\tthis._rotY = v;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t* The rotZ property sets the z-axis rotation value for the DisplayObject3D instance in degrees.\r\n\t* @var DisplayObject3D#rotZ {Number}\r\n\t* @default 0\r\n\t**/\r\n\tget rotZ(){ return this._rotZ; }\r\n\tset rotZ(v)\r\n\t{\r\n\t\tif (v != this._rotZ)\r\n\t\t{\r\n\t\t\tthis._dirty = true;\r\n\t\t\tthis._rotZ = v;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t* The regX property sets the x registration point used for rotation/placement of the DisplayObject3D instance.\r\n\t* @var DisplayObject3D#regX {Number}\r\n\t* @default 0\r\n\t**/\r\n\tget regX(){ return this._regX; }\r\n\tset regX(v)\r\n\t{\r\n\t\tif (v != this._regX)\r\n\t\t{\r\n\t\t\tthis._dirty = true;\r\n\t\t\tthis._regX = v;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t* The regY property sets the y registration point used for rotation/placement of the DisplayObject3D instance.\r\n\t* @var DisplayObject3D#regY {Number}\r\n\t* @default 0\r\n\t**/\r\n\tget regY(){ return this._regY; }\r\n\tset regY(v)\r\n\t{\r\n\t\tif (v != this._regY)\r\n\t\t{\r\n\t\t\tthis._dirty = true;\r\n\t\t\tthis._regY = v;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t* Shortcut for easily setting styles on the element.\r\n\t* @var DisplayObject3D#style {Object}\r\n\t*/\r\n\tget style() {\r\n\t\treturn this.element.style;\r\n\t}\r\n\t\r\n\t// for clarity, make sure if they try work with events directly on dom3d object it shouldn't work\r\n\t// only the shortcut usages should work, that way it keeps clear that it is a library driven event adding\r\n\taddEventListener() { throw new Error(EVENT_ERROR); }\r\n\tremoveEventListener() { throw new Error(EVENT_ERROR); }\r\n\tdispatchEvent() { throw new Error(EVENT_ERROR); }\r\n\t\r\n\t/**\r\n\t* Shortcut for adding event listeners to the object's dom element. Works same as `myObj.element.addEventListener(...);`\r\n\t* @method DisplayObject3D#addListener\r\n\t* @note All events are handled on the `element` property. This is only a shortcut.\r\n\t* @arg type - Identical to normal event listening.\r\n\t* @arg listener - Identical to normal event listening.\r\n\t* @arg [useCapture] - (optional) Identical to normal event listening.\r\n\t* @arg [wantsUntrusted] - (optional) Identical to normal event listening.\r\n\t*/\r\n\taddListener(type, listener, useCapture, wantsUntrusted)\r\n\t{\r\n\t\treturn this.element.addEventListener(type, listener, useCapture, wantsUntrusted);\r\n\t}\r\n\t\r\n\t/**\r\n\t* Shortcut for removing event listeners from the object's dom element. Works same as `myObj.element.removeEventListener(...);`\r\n\t* @method DisplayObject3D#removeListener\r\n\t* @note All events are handled on the `element` property. This is only a shortcut.\r\n\t* @arg type - Identical to normal event listening.\r\n\t* @arg listener - Identical to normal event listening.\r\n\t* @arg [useCapture] - (optional) Identical to normal event listening.\r\n\t*/\r\n\tremoveListener(type, listener, useCapture)\r\n\t{\r\n\t\treturn this.element.removeEventListener(type, listener, useCapture);\r\n\t}\r\n\t\r\n\t/**\r\n\t* Shortcut for dispatching events from the object's dom element. Works same as `myObj.element.dispatchEvent(...);`\r\n\t* @method DisplayObject3D#dispatch\r\n\t* @note All events are handled on the `element` property. This is only a shortcut.\r\n\t* @arg event - Identical to normal event dispatching via `dispatchEvent`.\r\n\t*/\r\n\tdispatch(evt)\r\n\t{\r\n\t\treturn this.element.dispatchEvent(evt);\r\n\t}\r\n\t\r\n\t// internal\r\n\tsetStage(s)\r\n\t{\r\n\t\tthis.stage = s;\r\n\t}\r\n\t\r\n\t// internal\r\n\trender(pDirty)\r\n\t{\r\n\t\tthrow new Error(\"::DOM3D:: DisplayObject3D can not be part of the 3D scene, it is only a base class.\");\r\n\t}\r\n\t\r\n\t// internal\r\n\tupdateWorld()\r\n\t{\r\n\t\tthis.transform3D.copyConcatenated( this.parent.transform3D );\r\n\t\tthis.transform3D.eulerAngle.updateData( this._rotZ*TO_RAD, this._rotY*TO_RAD, this._rotX*TO_RAD );\r\n\t\tthis.transform3D.quaternion.updateFromEuler( this.transform3D.eulerAngle );\r\n\t\tthis.transform3D.coordinates.updateData( this._x, this._y, this._z );\r\n\t\tthis.transform3D.concatenatedQuaternion.concatenate( this.transform3D.quaternion );\r\n\t\tthis.transform3D.concatenatedEulerAngle.updateFromQuaternion( this.transform3D.concatenatedQuaternion );\r\n\t}\r\n\t\r\n\t// internal\r\n\trotateCoords()\r\n\t{\r\n\t\tthis.transform3D.concatenatedCoordinates.rotateAndUpdate( this.transform3D.coordinates, this.parent.transform3D.concatenatedEulerAngle );\r\n\t}\r\n\t\r\n\t// internal\r\n\trotateObject()\r\n\t{\r\n\t\tthis.transformMatrix.updateFromEuler( this.transform3D.concatenatedEulerAngle );\r\n\t}\r\n\t\r\n\t// internal\r\n\trenderObject()\r\n\t{\r\n\t\tvar m = this.transformMatrix;\r\n\t\tvar zoom = this.stage.zoom;\r\n\t\t\r\n\t\tvar metaPoint = this.transform3D.concatenatedCoordinates;\r\n\t\tvar relevantZ = this.parent.orthographic||this.stage.orthographic ? this.parent.transform3D.concatenatedCoordinates.z : metaPoint.z;\r\n\t\t\r\n\t\tif (relevantZ > zoom)\r\n\t\t\t{ this.element.style.display = 'none'; return; }\r\n\t\telse if (this.element.style.display === 'none')\r\n\t\t\t{ this.element.style.display = 'block'; }\r\n\t\t\r\n\t\tvar factor   = zoom / (zoom - relevantZ);\r\n\t\tvar scaling  = Math.pow(factor, this.stage.distortion);\r\n\t\t\r\n\t\t// update the matrix with the coords\r\n\t\tm.tx = metaPoint.x * factor;\r\n\t\tm.ty = metaPoint.y * factor;\r\n\t\t\r\n\t\t// scale the matrix using the calculated scaling factor\r\n\t\tm.scale(scaling);\r\n\t\t\r\n\t\t// we need to offset the tx/ty to account for the registration point because of the odd way CSS handles registrations (they affect rotation but not placement)\r\n\t\tvar rx = this.regX * factor * scaling;\r\n\t\tvar ry = this.regY * factor * scaling;\r\n\t\t\r\n\t\t// get the transform string\r\n\t\tvar transformString = 'matrix('+(m.a).toFixed(8)+','+(m.b).toFixed(8)+','+(m.c).toFixed(8)+','+(m.d).toFixed(8)+','+(m.tx-rx).toFixed(8)+','+(m.ty-ry).toFixed(8)+')';\r\n\t\t\r\n\t\t// get the transform origin string\r\n\t\tvar transformOriginString = this.regX+'px '+this.regY+'px'\r\n\t\t\r\n\t\t// do the actual update of CSS strings\r\n\t\tthis.element.style[PropNames.transform] = transformString;\r\n\t\tthis.element.style[PropNames.transformOrigin] = transformOriginString;\r\n\t\t\r\n\t\tfor (var i=0, ii=this.stage.effects.length; i<ii; i++)\r\n\t\t{\r\n\t\t\tvar effect = this.stage.effects[i];\r\n\t\t\teffect.render(this);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// internal\r\nDisplayObject3D.idCount = 0;\r\nconst EVENT_ERROR = '::DOM3D:: Events are handled on the `.element` property. You may access it directly, or use the `addListener`, `.removeListener`, and `.dispatch` shortcuts.';\r\n\n\n\n// WEBPACK FOOTER //\n// ./C:/Users/R2D2/projects/dom3d/src/DisplayObject3D.js","\r\nimport {cos, sin} from '../utils/MathUtils';\r\n\r\nexport default class Matrix3x3\r\n{\r\n\t/**\r\n\tThe Matrix3x3 instance's a property. Used for calculations.\r\n\t@var Matrix3x3#a {Number}\r\n\t@public\r\n\t@default 1\r\n\t**/\r\n\t/**\r\n\tThe Matrix3x3 instance's b property. Used for calculations.\r\n\t@var Matrix3x3#b {Number}\r\n\t@public\r\n\t@default 0\r\n\t**/\r\n\t/**\r\n\tThe Matrix3x3 instance's c property. Used for calculations.\r\n\t@var Matrix3x3#c {Number}\r\n\t@public\r\n\t@default 0\r\n\t**/\r\n\t/**\r\n\tThe Matrix3x3 instance's d property. Used for calculations.\r\n\t@var Matrix3x3#d {Number}\r\n\t@public\r\n\t@default 1\r\n\t**/\r\n\t/**\r\n\tThe Matrix3x3 instance's tx property. Used for calculations.\r\n\t@var Matrix3x3#tx {Number}\r\n\t@public\r\n\t@default 0\r\n\t**/\r\n\t/**\r\n\tThe Matrix3x3 instance's ty property. Used for calculations.\r\n\t@var Matrix3x3#ty {Number}\r\n\t@public\r\n\t@default 0\r\n\t**/\r\n\t\r\n\t/**\r\n\tMatrix3x3 is an internally used class. It is primarily used to turn the 3D object's transformation information into CSS transforms.\r\n\t@class Matrix3x3\r\n\t@arg {Number} [a=1] - New instance's a value.\r\n\t@arg {Number} [b=0] - New instance's b value.\r\n\t@arg {Number} [c=0] - New instance's c value.\r\n\t@arg {Number} [d=1] - New instance's d value.\r\n\t@arg {Number} [tx=0] - New instance's tx value.\r\n\t@arg {Number} [ty=0] - New instance's ty value.\r\n\t**/\r\n\tconstructor(_a = 1, _b = 0, _c = 0, _d = 1, _tx = 0, _ty = 0)\r\n\t{\r\n\t\tthis.a  = _a;\r\n\t\tthis.b  = _b;\r\n\t\tthis.c  = _c;\r\n\t\tthis.d  = _d;\r\n\t\tthis.tx = _tx;\r\n\t\tthis.ty = _ty;\r\n\t}\r\n\t\r\n\t/**\r\n\tScales the Matrix3x3 by a given amount. Scales relative to what it currently is; so scaling by the same value two times will scale it twice as much as doing it once.\r\n\t@method Matrix3x3#scale\r\n\t@public\r\n\t@arg {Number} scaleBy - Amount to scale by.\r\n\t**/\r\n\tscale(_scaleBy)\r\n\t{\r\n\t\tthis.a *= _scaleBy;\r\n\t\tthis.b *= _scaleBy;\r\n\t\tthis.c *= _scaleBy;\r\n\t\tthis.d *= _scaleBy;\r\n\t\tthis.tx *= _scaleBy;\r\n\t\tthis.ty *= _scaleBy;\r\n\t}\r\n\t\r\n\t/**\r\n\tA shortcut to zero out the Matrix3x3.\r\n\t@method Matrix3x3#zero\r\n\t@public\r\n\t**/\r\n\tzero()\r\n\t{\r\n\t\tthis.a  = 1;\r\n\t\tthis.b  = 0;\r\n\t\tthis.c  = 0;\r\n\t\tthis.d  = 1;\r\n\t\tthis.tx = 0;\r\n\t\tthis.ty = 0;\r\n\t}\r\n\t\r\n\t/**\r\n\tA shortcut to copy the a, b, c, d, tx, and ty values of another Matrix3x3 to this one.\r\n\t@method Matrix3x3#copy\r\n\t@public\r\n\t@arg {Matrix3x3} m - The Matrix3x3 instance to copy values from.\r\n\t**/\r\n\tcopy(m)\r\n\t{\r\n\t\tthis.a = m.a;\r\n\t\tthis.b = m.b;\r\n\t\tthis.c = m.c;\r\n\t\tthis.d = m.d;\r\n\t\tthis.tx = m.tx;\r\n\t\tthis.ty = m.ty;\r\n\t}\r\n\t\r\n\t/**\r\n\tApplies the rotational values of a EulerAngle instance to this Matrix3x3.\r\n\t@method Matrix3x3#updateFromEuler\r\n\t@public\r\n\t@arg {EulerAngle} e - The EulerAngle instance to copy values from.\r\n\t**/\r\n\tupdateFromEuler(e)\r\n\t{\r\n\t\tvar srz = sin(e.phi),   crz = cos(e.phi);\r\n\t\tvar sry = sin(e.theta), cry = cos(e.theta);\r\n\t\tvar srx = sin(e.psi),   crx = cos(e.psi);\r\n\t\t\r\n\t\tvar crz_crx = crz * crx;\r\n\t\tvar srz_crx = srz * crx;\r\n\t\t\r\n\t\tvar sry_srx = sry * srx;\r\n\t\t\r\n\t\tvar add_cry = sry_srx + cry;\r\n\t\tvar sub_cry = sry_srx - cry;\r\n\t\t\r\n\t\tvar x1 = -crz * sub_cry + srz_crx;\r\n\t\tvar y1 = -srz * sub_cry - crz_crx;\r\n\t\t\r\n\t\tvar x2 = -crz * add_cry + srz_crx;\r\n\t\tvar y2 = -srz * add_cry - crz_crx;\r\n\t\t\r\n\t\tthis.a =  (x1 - x2) / 2;\r\n\t\tthis.b =  (y1 - y2) / 2;\r\n\t\tthis.c = -(x1 + x2) / 2;\r\n\t\tthis.d = -(y1 + y2) / 2;\r\n\t}\r\n\t\r\n\t/**\r\n\tReturns a String representation of the Matrix3x3 instance's values.\r\n\t@method Matrix3x3#toString\r\n\t@public\r\n\t@returns {String} Returns a string with an object notation form of the Matrix3x3 properties.\r\n\t**/\r\n\ttoString()\r\n\t{\r\n\t\treturn `{a:${this.a}, b:${this.b}, c:${this.c}, d:${this.d}, tx:${this.tx}, ty:${this.ty}}`;\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./C:/Users/R2D2/projects/dom3d/src/geom/Matrix3x3.js","\r\n// hiking over math stuff for ease of writing...\r\nexport var asin   = Math.asin;\r\nexport var sqrt   = Math.sqrt;\r\nexport var atan2  = Math.atan2;\r\nexport var cos    = Math.cos;\r\nexport var sin    = Math.sin;\r\nexport var PI     = Math.PI;\r\nexport var TO_RAD = PI / 180;\r\nexport var TO_DEG = 180 / PI;\r\n\n\n\n// WEBPACK FOOTER //\n// ./C:/Users/R2D2/projects/dom3d/src/utils/MathUtils.js","\r\nimport Point3D    from './Point3D';\r\nimport Quaternion from './Quaternion';\r\nimport EulerAngle from './EulerAngle';\r\n\r\nexport default class Transform3D\r\n{\r\n\t/**\r\n\tThe Transform3D instance's coordinates property is used for storing local coordinate data for calculations.\r\n\t@var Transform3D#coordinates {Point3D}\r\n\t@public\r\n\t**/\r\n\t/**\r\n\tThe Transform3D instance's concatenatedCoordinates property is used for storing global coordinate data for calculations.\r\n\t@var Transform3D#concatenatedCoordinates {Point3D}\r\n\t@public\r\n\t**/\r\n\t/**\r\n\tThe Transform3D instance's quaternion property is used for storing local quaternion based rotational data for calculations.\r\n\t@var Transform3D#quaternion {Quaternion}\r\n\t@public\r\n\t**/\r\n\t/**\r\n\tThe Transform3D instance's concatenatedQuaterion property is used for storing global quaternion based rotational data for calculations.\r\n\t@var Transform3D#concatenatedQuaternion {Quaternion}\r\n\t@public\r\n\t**/\r\n\t/**\r\n\tThe Transform3D instance's eulerAngle property is used for storing local euler angle based rotational data for calculations.\r\n\t@var Transform3D#eulerAngle {EulerAngle}\r\n\t@public\r\n\t**/\r\n\t/**\r\n\tThe Transform3D instance's concatenatedEulerAngle property is used for storing global euler angle based rotational data for calculations.\r\n\t@var Transform3D#concatenatedEulerAngle {EulerAngle}\r\n\t@public\r\n\t**/\r\n\t\r\n\t/**\r\n\tEach {@link DisplayObject} has a [transform3D]{@link DisplayObject3D#transform3D} property which is an instances of the Transform3D class. It holds properties for the coordinate and rotationsl data of the object in both local and world/global forms.\r\n\t@class Transform3D\r\n\t**/\r\n\tconstructor()\r\n\t{\r\n\t\tthis.coordinates = new Point3D();\r\n\t\tthis.concatenatedCoordinates = new Point3D();\r\n\t\tthis.quaternion = new Quaternion();\r\n\t\tthis.concatenatedQuaternion = new Quaternion();\r\n\t\tthis.eulerAngle = new EulerAngle();\r\n\t\tthis.concatenatedEulerAngle = new EulerAngle();\r\n\t}\r\n\t\r\n\t/**\r\n\tThis method is a shortcut used to copy the concatenated coordinate and rotational data from one Transform3D instance to another.\r\n\t@method Transform3D#copyConcatenated\r\n\t@public\r\n\t@arg {Transform3D} t - The Transform3D to copy data from.\r\n\t**/\r\n\tcopyConcatenated(t)\r\n\t{\r\n\t\tthis.concatenatedCoordinates.copy( t.concatenatedCoordinates );\r\n\t\tthis.concatenatedQuaternion.copy( t.concatenatedQuaternion );\r\n\t\tthis.concatenatedEulerAngle.copy( t.concatenatedEulerAngle );\r\n\t}\r\n\t\r\n\t/**\r\n\tThis method is a shortcut used to copy the inverted concatenated coordinate and rotational data from one Transform3D instance to another.\r\n\t@method Transform3D#copyInverseConcatenated\r\n\t@public\r\n\t@arg {Transform3D} t - The Transform3D to copy inverse data from.\r\n\t**/\r\n\tcopyInverseConcatenated(t)\r\n\t{\r\n\t\tthis.concatenatedCoordinates.copyInverse( t.concatenatedCoordinates );\r\n\t\tthis.concatenatedQuaternion.copyInverse( t.concatenatedQuaternion );\r\n\t\tthis.concatenatedEulerAngle.updateFromQuaternion( concatenatedQuaternion );\r\n\t}\r\n\t\r\n\t/**\r\n\tThis method is a shortcut used to copy the local coordinate and rotational data from one Transform3D instance to another.\r\n\t@method Transform3D#copyLocal\r\n\t@public\r\n\t@arg {Transform3D} t - The Transform3D to copy data from.\r\n\t**/\r\n\tcopyLocal(t)\r\n\t{\r\n\t\tthis.coordinates.copy( t.coordinates );\r\n\t\tthis.quaternion.copy( t.quaternion );\r\n\t\tthis.eulerAngle.copy( t.eulerAngle );\r\n\t}\r\n\t\r\n\t/**\r\n\tA shortcut to copy the local and global coordinate and rotational data from one Transform3D instance to another.\r\n\t@method Transform3D#copy\r\n\t@public\r\n\t@arg {Transform3D} t - The Transform3D to copy data from.\r\n\t**/\r\n\tcopy(t)\r\n\t{\r\n\t\tthis.coordinates.copy( t.coordinates );\r\n\t\tthis.concatenatedCoordinates.copy( t.concatenatedCoordinates );\r\n\t\tthis.quaternion.copy( t.quaternion );\r\n\t\tthis.concatenatedQuaternion.copy( t.concatenatedQuaternion );\r\n\t\tthis.eulerAngle.copy( t.eulerAngle );\r\n\t\tthis.concatenatedEulerAngle.copy( t.concatenatedEulerAngle );\r\n\t}\r\n\t\r\n\t/**\r\n\tA shortcut to zero out all transforms.\r\n\t@method Transform3D#zero\r\n\t@public\r\n\t**/\r\n\tzero()\r\n\t{\r\n\t\tthis.coordinates.zero();\r\n\t\tthis.concatenatedCoordinates.zero();\r\n\t\tthis.quaternion.zero();\r\n\t\tthis.concatenatedQuaternion.zero();\r\n\t\tthis.eulerAngle.zero();\r\n\t\tthis.concatenatedEulerAngle.zero();\r\n\t}\r\n\t\r\n\t/**\r\n\tReturns a String representation of all of the Transform3D instance's properties' values. Can be a bit verbose.\r\n\t@method Transform3D#toString\r\n\t@public\r\n\t@returns {String} Returns a string with an object notation form of the entire Transform3D.\r\n\t**/\r\n\ttoString()\r\n\t{\r\n\t\treturn (\r\n`local coordinates: ${this.coordinates.toString()}\r\nworld coordinates: ${this.concatenatedCoordinates.toString()}\r\nlocal quaternion : ${this.quaternion.toString()}\r\nworld quaternion : ${this.concatenatedQuaternion.toString()}\r\nlocal euler angle: ${this.eulerAngle.toString()}\r\nworld euler angle: ${this.concatenatedEulerAngle.toString()}`\r\n\t\t)\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./C:/Users/R2D2/projects/dom3d/src/geom/Transform3D.js","\r\nimport {cos, sin} from '../utils/MathUtils';\r\n\r\nexport default class Point3D\r\n{\r\n\t/**\r\n\tThe Point3D instance's x property. Used for calculations.\r\n\t@var Point3D#x {Number}\r\n\t@public\r\n\t@default 0\r\n\t**/\r\n\t/**\r\n\tThe Point3D instance's y property. Used for calculations.\r\n\t@var Point3D#y {Number}\r\n\t@public\r\n\t@default 0\r\n\t**/\r\n\t/**\r\n\tThe Point3D instance's z property. Used for calculations.\r\n\t@var Point3D#z {Number}\r\n\t@public\r\n\t@default 0\r\n\t**/\r\n\t\r\n\t/**\r\n\tPoint3D is an internally used class. A Point3D instance is attached to a {@link DisplayObject3D} object's transform3D property (which is itself an instance of the {@link Transform3D} class). It is part of internal calculations, and should only be accessed by advanced users. You should not have to deal with this class in normal usage of the engine.\r\n\t@class Point3D\r\n\t@arg {Number} [x=0] - New instance's x coordinate value.\r\n\t@arg {Number} [y=0] - New instance's y coordinate value.\r\n\t@arg {Number} [z=0] - New instance's z coordinate value.\r\n\t**/\r\n\tconstructor(_x = 0, _y = 0, _z = 0)\r\n\t{\r\n\t\tthis.x = _x;\r\n\t\tthis.y = _y;\r\n\t\tthis.z = _z;\r\n\t}\r\n\t\r\n\t/**\r\n\tA shortcut method for setting the x, y, and z properties.\r\n\t@method Point3D#updateData\r\n\t@public\r\n\t@arg {Number} x - New x value.\r\n\t@arg {Number} y - New y value.\r\n\t@arg {Number} z - New z value.\r\n\t**/\r\n\tupdateData(x, y, z)\r\n\t{\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t}\r\n\t\r\n\t/**\r\n\tThis method will rotate a supplied Point3D's coordinate values around origin 0,0,0 based on the supplied {@link EulerAngle} object's rotation. It will then set this Point3D's coordinate values to the result.\r\n\t@method Point3D#rotateAndUpdate\r\n\t@public\r\n\t@arg {Point3D} point - Point3D values to rotate.\r\n\t@arg {EulerAngle} angle - EulerAngle rotational values to rotate by.\r\n\t**/\r\n\trotateAndUpdate(point, angle)\r\n\t{\r\n\t\tvar phi   = angle.phi;\r\n\t\tvar theta = angle.theta;\r\n\t\tvar psi   = angle.psi;\r\n\t\t\r\n\t\tvar srz = sin(phi),   crz = cos(phi);\r\n\t\tvar sry = sin(theta), cry = cos(theta);\r\n\t\tvar srx = sin(psi),   crx = cos(psi);\r\n\t\t\r\n\t\tvar _X = point.x;\r\n\t\tvar _Y = point.y;\r\n\t\tvar _Z = point.z;\r\n\t\t\t\r\n\t\tvar xy, xz, yx, yz, zx, zy;\r\n\t\t\t\r\n\t\txy = (crx * _Y) - (srx * _Z);\r\n\t\txz = (srx * _Y) + (crx * _Z);\r\n\t\tyz = (cry * xz) - (sry * _X);\r\n\t\tyx = (sry * xz) + (cry * _X);\r\n\t\tzx = (crz * yx) - (srz * xy);\r\n\t\tzy = (srz * yx) + (crz * xy);\r\n\t\t\r\n\t\tthis.x += zx;\r\n\t\tthis.y += zy;\r\n\t\tthis.z += yz;\r\n\t}\r\n\t\r\n\t/**\r\n\tProduces a new Point3D instance that is duplicate of the current one.\r\n\t@method Point3D#clone\r\n\t@public\r\n\t@returns {Point3D} Returns a new Point3D instance.\r\n\t**/\r\n\tclone()\r\n\t{\r\n\t\treturn new Point3D(this.x, this.y, this.z);\r\n\t}\r\n\t\r\n\t/**\r\n\tA shortcut to copy the x, y, and z values of another Point3D to this one.\r\n\t@method Point3D#copy\r\n\t@public\r\n\t@arg {Point3D} p - The Point3D instance to copy values from.\r\n\t**/\r\n\tcopy(p)\r\n\t{\r\n\t\tthis.x = p.x;\r\n\t\tthis.y = p.y;\r\n\t\tthis.z = p.z;\r\n\t}\r\n\t\r\n\t/**\r\n\tA shortcut to copy the inverted (negative) x, y, and z values of another Point3D to this one.\r\n\t@method Point3D#copyInverse\r\n\t@public\r\n\t@arg {Point3D} p - The Point3D instance to copy inverted values from.\r\n\t**/\r\n\tcopyInverse(p)\r\n\t{\r\n\t\tthis.x = -p.x;\r\n\t\tthis.y = -p.y;\r\n\t\tthis.z = -p.z;\r\n\t}\r\n\t\r\n\t/**\r\n\tA shortcut to zero out the Point3D.\r\n\t@method Point3D#zero\r\n\t@public\r\n\t**/\r\n\tzero()\r\n\t{\r\n\t\tthis.x = 0;\r\n\t\tthis.y = 0;\r\n\t\tthis.z = 0;\r\n\t}\r\n\t\r\n\t/**\r\n\tReturns a String representation of the Point3D instance's values.\r\n\t@method Point3D#toString\r\n\t@public\r\n\t@returns {String} Returns a string with an object notation form of the x, y, and z properties.\r\n\t**/\r\n\ttoString()\r\n\t{\r\n\t\treturn `{x:${this.x}, y:${this.y}, z:${this.z}}`;\r\n\t}\r\n\t\r\n\t/**\r\n\tA static verion of the non-static [rotateAndUpdate]{@link Point3D#rotateAndUpdate} method which returns a new Point3D with the modified valies.\r\n\t@method Point3D.rotate\r\n\t@public\r\n\t@arg {Point3D} point - Point3D values to rotate.\r\n\t@arg {EulerAngle} angle - EulerAngle rotational values to rotate by.\r\n\t@returns {Point3D} Returns a new Point3D with the end result applied.\r\n\t**/\r\n\tstatic rotate(point, angle)\r\n\t{\r\n\t\tvar phi   = angle.phi;\r\n\t\tvar theta = angle.theta;\r\n\t\tvar psi   = angle.psi;\r\n\t\t\r\n\t\tvar srz = sin(phi),   crz = cos(phi);\r\n\t\tvar sry = sin(theta), cry = cos(theta);\r\n\t\tvar srx = sin(psi),   crx = cos(psi);\r\n\t\t\r\n\t\tvar _X = point.x;\r\n\t\tvar _Y = point.y;\r\n\t\tvar _Z = point.z;\r\n\t\t\t\r\n\t\tvar xy, xz, yx, yz, zx, zy;\r\n\t\t\t\r\n\t\txy = (crx * _Y) - (srx * _Z);\r\n\t\txz = (srx * _Y) + (crx * _Z);\r\n\t\tyz = (cry * xz) - (sry * _X);\r\n\t\tyx = (sry * xz) + (cry * _X);\r\n\t\tzx = (crz * yx) - (srz * xy);\r\n\t\tzy = (srz * yx) + (crz * xy);\r\n\t\t\r\n\t\treturn new Point3D(zx, zy, yz);\r\n\t}\r\n\t\r\n\t/**\r\n\tAllows the distance between two 3D points to be calculated between two Point3D objects\r\n\t@method Point3D.distance\r\n\t@public\r\n\t@arg {Point3D} point1 - First Point3D to calculate from.\r\n\t@arg {Point3D} point2 - Second Point3D to calculate to.\r\n\t@returns {Number} Returns the distance between the two points.\r\n\t**/\r\n\tstatic distance(p1, p2)\r\n\t{\r\n\t\tvar x2 = Math.pow(p2.x - p1.x, 2);\r\n\t\tvar y2 = Math.pow(p2.y - p1.y, 2);\r\n\t\tvar z2 = Math.pow(p2.z - p1.z, 2);\r\n\t\t\r\n\t\treturn Math.sqrt( x2 + y2 + z2 );\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./C:/Users/R2D2/projects/dom3d/src/geom/Point3D.js","\r\nimport EulerAngle from './EulerAngle';\r\nimport {asin, sqrt, atan2, cos, sin} from '../utils/MathUtils';\r\n\r\nexport default class Quaternion\r\n{\r\n\t/**\r\n\tThe Quaternion instance's w property. Used for calculations.\r\n\t@var Quaternion#w {Number}\r\n\t@public\r\n\t@default 1\r\n\t**/\r\n\t/**\r\n\tThe Quaternion instance's x property. Used for calculations.\r\n\t@var Quaternion#x {Number}\r\n\t@public\r\n\t@default 0\r\n\t**/\r\n\t/**\r\n\tThe Quaternion instance's y property. Used for calculations.\r\n\t@var Quaternion#y {Number}\r\n\t@public\r\n\t@default 0\r\n\t**/\r\n\t/**\r\n\tThe Quaternion instance's z property. Used for calculations.\r\n\t@var Quaternion#z {Number}\r\n\t@public\r\n\t@default 0\r\n\t**/\r\n\t\r\n\t/**\r\n\tQuaternion is an internally used class. A Quaternion instance is attached to a {@link DisplayObject3D} object's transform3D property (which is itself an instance of the {@link Transform3D} class). It is part of internal calculations, and should only be accessed by extremely advanced users. You should not have to deal with this class in normal usage of the engine.\r\n\t@class Quaternion\r\n\t@arg {Number} [w=1] - New instance's w value.\r\n\t@arg {Number} [x=0] - New instance's x value.\r\n\t@arg {Number} [y=0] - New instance's y value.\r\n\t@arg {Number} [z=0] - New instance's z value.\r\n\t**/\r\n\tconstructor (w = 1, x = 0, y = 0, z = 0)\r\n\t{\r\n\t\tthis.w = w;\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t}\r\n\t\r\n\t/**\r\n\tThis method allows for quick update of all the Quaternion's properties.\r\n\t@method Quaternion#updateData\r\n\t@arg {Number} w - Updated w value.\r\n\t@arg {Number} x - Updated x value.\r\n\t@arg {Number} y - Updated y value.\r\n\t@arg {Number} z - Updated z value.\r\n\t**/\r\n\tupdateData(_w, _x, _y, _z)\r\n\t{\r\n\t\tthis.w = _w;\r\n\t\tthis.x = _x;\r\n\t\tthis.y = _y;\r\n\t\tthis.z = _z;\r\n\t}\r\n\t\r\n\t/**\r\n\tThis method concatenates the values of another Quaternion with this Quaternion and then sets the resulting values to this Quaternion's w, z, y, and z properties. This is vital for forward kinematics of 3D rotations. There is no return; the Quaternion intance on which this method is called (as opposed to the one supplied as a parameter) is modified as a result.\r\n\t@method Quaternion#concatenate\r\n\t@public\r\n\t@arg {Quaternion} q - Quaternion to concatenate with this one.\r\n\t**/\r\n\tconcatenate(q)\r\n\t{\r\n\t\tvar w1 = q.w;\r\n\t\tvar x1 = q.x;\r\n\t\tvar y1 = q.y;\r\n\t\tvar z1 = q.z;\r\n\t\t\r\n\t\tvar tw = this.w;\r\n\t\tvar tx = this.x;\r\n\t\tvar ty = this.y;\r\n\t\tvar tz = this.z;\r\n\t\t\r\n\t\tvar _w = w1 * tw - x1 * tx - y1 * ty - z1 * tz;\r\n\t\tvar _x = w1 * tx + x1 * tw + y1 * tz - z1 * ty;\r\n\t\tvar _y = w1 * ty - x1 * tz + y1 * tw + z1 * tx;\r\n\t\tvar _z = w1 * tz + x1 * ty - y1 * tx + z1 * tw;\r\n\t\t\r\n\t\tthis.w = _w;\r\n\t\tthis.x = _x;\r\n\t\tthis.y = _y;\r\n\t\tthis.z = _z;\r\n\t}\r\n\t\r\n\t/**\r\n\tA method for getting a {@link EulerAngle} based on the current Quaternion.\r\n\t@method Quaternion#toEuler\r\n\t@public\r\n\t@returns {EulerAngle} Returns a new EulerAngle instance.\r\n\t**/\r\n\ttoEuler()\r\n\t{\r\n\t\tvar w2 = this.w * this.w;\r\n\t\tvar x2 = this.x * this.x;\r\n\t\tvar y2 = this.y * this.y;\r\n\t\tvar z2 = this.z * this.z;\r\n\t\t\r\n\t\tvar phi, theta, psi;\r\n\t\t\r\n\t\tvar tester = this.w * this.y - this.z * this.x;\r\n\t\t\r\n\t\tif (tester > 0.499999)\r\n\t\t{\r\n\t\t\tphi   = -2 * atan2(this.w, this.x);\r\n\t\t\ttheta = Math.PI / 2;\r\n\t\t\tpsi   = Math.PI;\r\n\t\t\t\r\n\t\t\treturn new EulerAngle(phi, theta, psi);\r\n\t\t}\r\n\t\telse if (tester < -0.499999)\r\n\t\t{\r\n\t\t\tphi   = -2 * atan2(this.w, this.x);\r\n\t\t\ttheta = -Math.PI / 2;\r\n\t\t\tpsi   = Math.PI;\r\n\t\t\t\r\n\t\t\treturn new EulerAngle(phi, theta, psi);\r\n\t\t}\r\n\t\t\r\n\t\tphi   = atan2(  2 * (this.w * this.x + this.y * this.z) , 1 - 2 * (x2 + y2) );\r\n\t\ttheta = asin (  2 *  tester                                                 );\r\n\t\tpsi   = atan2(  2 * (this.w * this.z + this.x * this.y) , 1 - 2 * (y2 + z2) );\r\n\t\t\r\n\t\treturn new EulerAngle(phi, theta, psi);\r\n\t}\r\n\t\r\n\t/**\r\n\tA method for updating the w, x, y, and z properties based on a {@link EulerAngle} intance.\r\n\t@method Quaternion#updateFromEuler\r\n\t@public\r\n\t@arg {EulerAngle} euler - EulerAngle instance to update from.\r\n\t**/\r\n\tupdateFromEuler(euler)\r\n\t{\r\n\t\tvar hPhi   = euler.phi   / 2;\r\n\t\tvar hTheta = euler.theta / 2;\r\n\t\tvar hPsi   = euler.psi   / 2;\r\n\t\t\r\n\t\tvar sin_hPhi   = sin(  hPhi), cos_hPhi   = cos(  hPhi);\r\n\t\tvar sin_hTheta = sin(hTheta), cos_hTheta = cos(hTheta);\r\n\t\tvar sin_hPsi   = sin(  hPsi), cos_hPsi   = cos(  hPsi);\r\n\t\t\r\n\t\tthis.w = cos_hPhi * cos_hTheta * cos_hPsi + sin_hPhi * sin_hTheta * sin_hPsi;\r\n\t\tthis.x = sin_hPhi * cos_hTheta * cos_hPsi - cos_hPhi * sin_hTheta * sin_hPsi;\r\n\t\tthis.y = cos_hPhi * sin_hTheta * cos_hPsi + sin_hPhi * cos_hTheta * sin_hPsi;\r\n\t\tthis.z = cos_hPhi * cos_hTheta * sin_hPsi - sin_hPhi * sin_hTheta * cos_hPsi;\r\n\t}\r\n\t\r\n\t/**\r\n\tNormalizes the Quaternion.\r\n\t@method Quaternion#normalize\r\n\t@public\r\n\t**/\r\n\tnormalize()\r\n\t{\r\n\t\tvar magnitude = sqrt( this.w * this.w + this.x * this.x + this.y * this.y + this.z * this.z );\r\n\t\tthis.w /= magnitude; this.x /= magnitude; this.y /= magnitude; this.z /= magnitude;\r\n\t}\r\n\t\r\n\t/**\r\n\tProduces a new Quaternion instance that is duplicate of the current one.\r\n\t@method Quaternion#clone\r\n\t@public\r\n\t@returns {Quaternion} Returns a new Quaternion instance.\r\n\t**/\r\n\tclone()\r\n\t{\r\n\t\treturn new Quaternion(this.w, this.x, this.y, this.z);\r\n\t}\r\n\t\r\n\t/**\r\n\tA shortcut to copy the w, x, y, and z values of another Quaternion to this one.\r\n\t@method Quaternion#copy\r\n\t@public\r\n\t@arg {Quaternion} q - The Quaternion instance to copy values from.\r\n\t**/\r\n\tcopy(q)\r\n\t{\r\n\t\tthis.w = q.w; this.x = q.x; this.y = q.y; this.z = q.z;\r\n\t}\r\n\t\r\n\t/**\r\n\tA shortcut to copy the inverted result of another Quaternion to this one.\r\n\t@method Quaternion#copyInverse\r\n\t@public\r\n\t@arg {Quaternion} p - The Quaternion instance to invert and then get values from.\r\n\t**/\r\n\tcopyInverse(q)\r\n\t{\r\n\t\tvar qw = q.w, qx = q.x, qy = q.y, qz = q.z;\r\n\t\tvar d = qw*qw + qx*qx + qy*qy + qz*qz;\r\n\t\tthis.w =  qw/d;\r\n\t\tthis.x = -qx/d;\r\n\t\tthis.y = -qy/d;\r\n\t\tthis.z = -qz/d;\r\n\t}\r\n\t\r\n\t/**\r\n\tA shortcut to zero out the Quaternion.\r\n\t@method Quaternion#zero\r\n\t@public\r\n\t**/\r\n\tzero()\r\n\t{\r\n\t\tthis.w = 1;\r\n\t\tthis.x = 0;\r\n\t\tthis.y = 0;\r\n\t\tthis.z = 0;\r\n\t}\r\n\t\r\n\t/**\r\n\tReturns a String representation of the Quaternion instance's values.\r\n\t@method Quaternion#toString\r\n\t@public\r\n\t@returns {String} Returns a string with an object notation form of the w, x, y, and z properties.\r\n\t**/\r\n\ttoString()\r\n\t{\r\n\t\treturn `{w:${this.w}, x:${this.x}, y:${this.y}, z:${this.z}}`;\r\n\t}\r\n\t\r\n\t/**\r\n\tMultiplies two Quaterions together. Note: multiplication of quaternions is non-commutative. Order matters.\r\n\t@method Quaternion.multiply\r\n\t@public\r\n\t@arg {Quaternion} q1 - The first quaternion to multiply.\r\n\t@arg {Quaternion} q2 - The second quaternion to multiply.\r\n\t@returns {Quaternion} Returns a new Quaternion with the result of the multiplication.\r\n\t**/\r\n\tstatic multiply(q1, q2)\r\n\t{\r\n\t\t\"use strict\";\r\n\t\t\r\n\t\tvar w1 = q1.w, w2 = q2.w;\r\n\t\tvar x1 = q1.x, x2 = q2.x;\r\n\t\tvar y1 = q1.y, y2 = q2.y;\r\n\t\tvar z1 = q1.z, z2 = q2.z;\r\n\t\t\r\n\t\tvar _w = w1 * w2 - x1 * x2 - y1 * y2 - z1 * z2;\r\n\t\tvar _x = w1 * x2 + x1 * w2 + y1 * z2 - z1 * y2;\r\n\t\tvar _y = w1 * y2 - x1 * z2 + y1 * w2 + z1 * x2;\r\n\t\tvar _z = w1 * z2 + x1 * y2 - y1 * x2 + z1 * w2;\r\n\t\t\r\n\t\treturn new Quaternion(_w, _x, _y, _z);\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./C:/Users/R2D2/projects/dom3d/src/geom/Quaternion.js","\r\nimport Quaternion from './Quaternion';\r\nimport {asin, sqrt, atan2, cos, sin} from '../utils/MathUtils';\r\n\r\nexport default class EulerAngle\r\n{\r\n\t/**\r\n\tThe EulerAngle instance's phi property. Used for calculations.\r\n\t@var EulerAngle#phi {Number}\r\n\t@public\r\n\t@default 0\r\n\t**/\r\n\t/**\r\n\tThe EulerAngle instance's theta property. Used for calculations.\r\n\t@var EulerAngle#theta {Number}\r\n\t@public\r\n\t@default 0\r\n\t**/\r\n\t/**\r\n\tThe EulerAngle instance's psi property. Used for calculations.\r\n\t@var EulerAngle#psi {Number}\r\n\t@public\r\n\t@default 0\r\n\t**/\r\n\t\r\n\t/**\r\n\tEulerAngle is an internally used class. A EulerAngle instance is attached to a {@link DisplayObject3D} object's transform3D property (which is itself an instance of the {@link Transform3D} class). It is part of internal calculations, and should only be accessed by extremely advanced users. You should not have to deal with this class in normal usage of the engine.\r\n\t@class EulerAngle\r\n\t@arg {Number} [phi=0] - New instance's phi value.\r\n\t@arg {Number} [theta=0] - New instance's theta value.\r\n\t@arg {Number} [psi=0] - New instance's psi value.\r\n\t**/\r\n\tconstructor(aphi = 0, atheta = 0, apsi = 0)\r\n\t{\r\n\t\tthis.phi   = aphi;\r\n\t\tthis.theta = atheta;\r\n\t\tthis.psi   = apsi;\r\n\t}\r\n\t\r\n\t/**\r\n\tA shortcut method for setting the phi, theta, and psi properties.\r\n\t@method EulerAngle#updateData\r\n\t@public\r\n\t@arg {Number} phi - New phi value.\r\n\t@arg {Number} theta - New theta value.\r\n\t@arg {Number} psi - New psi value.\r\n\t**/\r\n\tupdateData(_phi, _theta, _psi)\r\n\t{\r\n\t\tthis.phi   = _phi;\r\n\t\tthis.theta = _theta;\r\n\t\tthis.psi   = _psi;\r\n\t}\r\n\t\r\n\t/**\r\n\tA method for updating the phi, theta, and psi based on a {@link Quaternion} intance.\r\n\t@method EulerAngle#updateFromQuaternion\r\n\t@public\r\n\t@arg {Quaternion} q - Quaternion instance to update from.\r\n\t**/\r\n\tupdateFromQuaternion(q)\r\n\t{\r\n\t\tvar w = q.w, x = q.x, y = q.y, z = q.z;\r\n\t\t\r\n\t\tvar w2 = w * w;\r\n\t\tvar x2 = x * x;\r\n\t\tvar y2 = y * y;\r\n\t\tvar z2 = z * z;\r\n\t\t\r\n\t\tvar tester = w * y - z * x;\r\n\t\t\r\n\t\tif (tester > 0.499999)\r\n\t\t{\r\n\t\t\tthis.phi   = -2 * atan2(w, x);\r\n\t\t\tthis.theta = Math.PI / 2;\r\n\t\t\tthis.psi   = Math.PI;\r\n\t\t\t\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse if (tester < -0.499999)\r\n\t\t{\r\n\t\t\tthis.phi   = -2 * atan2(w, x);\r\n\t\t\tthis.theta = -Math.PI / 2;\r\n\t\t\tthis.psi   = Math.PI;\r\n\t\t\t\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tthis.phi   = atan2(  2 * (w * x + y * z) , 1 - 2 * (x2 + y2) );\r\n\t\tthis.theta = asin (  2 *  tester                             );\r\n\t\tthis.psi   = atan2(  2 * (w * z + x * y) , 1 - 2 * (y2 + z2) );\r\n\t}\r\n\t\r\n\t/**\r\n\tA method for getting a {@link Quaternion} based on the current EulerAngle.\r\n\t@method EulerAngle#toQuaternion\r\n\t@public\r\n\t@returns {Quaternion} Returns a new {@link Quaternion} instance.\r\n\t**/\r\n\ttoQuaternion()\r\n\t{\r\n\t\tvar hPhi   = this.phi   / 2;\r\n\t\tvar hTheta = this.theta / 2;\r\n\t\tvar hPsi   = this.psi   / 2;\r\n\t\t\r\n\t\tvar sin_hPhi   = sin(  hPhi), cos_hPhi   = cos(  hPhi);\r\n\t\tvar sin_hTheta = sin(hTheta), cos_hTheta = cos(hTheta);\r\n\t\tvar sin_hPsi   = sin(  hPsi), cos_hPsi   = cos(  hPsi);\r\n\t\t\r\n\t\tvar w = cos_hPhi * cos_hTheta * cos_hPsi + sin_hPhi * sin_hTheta * sin_hPsi;\r\n\t\tvar x = sin_hPhi * cos_hTheta * cos_hPsi - cos_hPhi * sin_hTheta * sin_hPsi;\r\n\t\tvar y = cos_hPhi * sin_hTheta * cos_hPsi + sin_hPhi * cos_hTheta * sin_hPsi;\r\n\t\tvar z = cos_hPhi * cos_hTheta * sin_hPsi - sin_hPhi * sin_hTheta * cos_hPsi;\r\n\t\t\r\n\t\treturn new Quaternion(w, x, y, z);\r\n\t}\r\n\t\r\n\t/**\r\n\tProduces a new EulerAngle instance that is duplicate of the current one.\r\n\t@method EulerAngle#clone\r\n\t@public\r\n\t@returns {EulerAngle} Returns a new EulerAngle instance.\r\n\t**/\r\n\tclone()\r\n\t{\r\n\t\treturn new EulerAngle(this.phi, this.theta, this.psi);\r\n\t}\r\n\t\r\n\t/**\r\n\tA shortcut to copy the phi, theta, and psi values of another EulerAngle to this one.\r\n\t@method EulerAngle#copy\r\n\t@public\r\n\t@arg {EulerAngle} ea - The EulerAngle instance to copy values from.\r\n\t**/\r\n\tcopy(ea)\r\n\t{\r\n\t\tthis.phi   = ea.phi;\r\n\t\tthis.theta = ea.theta;\r\n\t\tthis.psi   = ea.psi;\r\n\t}\r\n\t\r\n\t/**\r\n\tA shortcut to zero out the EulerAngle.\r\n\t@method EulerAngle#zero\r\n\t@public\r\n\t**/\r\n\tzero()\r\n\t{\r\n\t\tthis.phi   = 0;\r\n\t\tthis.theta = 0;\r\n\t\tthis.psi   = 0;\r\n\t}\r\n\t\r\n\t/**\r\n\tReturns a String representation of the EulerAngle instance's values.\r\n\t@method EulerAngle#toString\r\n\t@public\r\n\t@returns {String} Returns a string with an object notation form of the phi, theta, and psi properties.\r\n\t**/\r\n\ttoString()\r\n\t{\r\n\t\treturn `{phi:${this.phi}, theta:${this.theta}, psi:${this.psi}}`;\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./C:/Users/R2D2/projects/dom3d/src/geom/EulerAngle.js","\r\nimport {TO_DEG} from '../utils/MathUtils';\r\n\r\nexport default class CalculatedInfo\r\n{\r\n\tconstructor(obj) {\r\n\t\tObject.defineProperty(this, 'reference', {enumerable:false, value:obj});\r\n\t}\r\n\t\r\n\tget x() {\r\n\t\treturn this.reference.transform3D.concatenatedCoordinates.x;\r\n\t}\r\n\t\r\n\tget y() {\r\n\t\treturn this.reference.transform3D.concatenatedCoordinates.y;\r\n\t}\r\n\t\r\n\tget z() {\r\n\t\treturn this.reference.transform3D.concatenatedCoordinates.z;\r\n\t}\r\n\t\r\n\tget rotX() {\r\n\t\treturn this.reference.transform3D.concatenatedEulerAngle.psi * TO_DEG;\r\n\t}\r\n\t\r\n\tget rotY() {\r\n\t\treturn this.reference.transform3D.concatenatedEulerAngle.theta * TO_DEG;\r\n\t}\r\n\t\r\n\tget rotZ() {\r\n\t\treturn this.reference.transform3D.concatenatedEulerAngle.phi * TO_DEG;\r\n\t}\r\n\t\r\n\ttoString() {\r\n\t\treturn `{x:${this.x}, y:${this.y}, z:${this.z}, rotX:${this.rotX}, rotY:${this.rotY}, rotZ:${this.rotZ}}`;\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./C:/Users/R2D2/projects/dom3d/src/geom/CalculatedInfo.js","\t\r\n// tests for compatibility and figuring out which CSS props to set\r\n\r\nvar index = 0;\r\n\r\nvar possible_transform = [\r\n\t'transform',\r\n\t'WebkitTransform',\r\n\t'msTransform',\r\n\t'MozTransform',\r\n\t'OTransform'\r\n];\r\n\r\nvar possible_transform_origin = [\r\n\t'transformOrigin',\r\n\t'WebkitTransformOrigin',\r\n\t'msTransformOrigin',\r\n\t'MozTransformOrigin',\r\n\t'OTransformOrigin'\r\n];\r\n\r\nvar possible_perspective = [\r\n\t'perspective',\r\n\t'WebkitPerspective',\r\n\t'msPerspective',\r\n\t'MozPerspective',\r\n\t'OPerspective'\r\n];\r\n\r\nvar possible_perspective_origin = [\r\n\t'perspectiveOrigin',\r\n\t'WebkitPerspectiveOrigin',\r\n\t'msPerspectiveOrigin',\r\n\t'MozPerspectiveOrigin',\r\n\t'OPerspectiveOrigin'\r\n];\r\n\r\ntry\r\n{\r\n\tvar p;\r\n\tvar n = document.createElement('div');\r\n\tfor (var i=0,ii=possible_transform.length; i<ii; i++) {\r\n\t\tp = possible_transform[i];\r\n\t\tif (typeof n.style[p] !== 'undefined') {\r\n\t\t\tindex = i;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\ncatch(e) {}\r\n\r\nvar PropNames = {\r\n\t'transform': possible_transform[index],\r\n\t'transformOrigin': possible_transform_origin[index],\r\n\t'perspective': possible_perspective[index],\r\n\t'perspectiveOrigin': possible_perspective_origin[index],\r\n}\r\n\r\nexport default PropNames;\r\n\n\n\n// WEBPACK FOOTER //\n// ./C:/Users/R2D2/projects/dom3d/src/utils/PropNames.js","\r\nimport DisplayObject3D from './DisplayObject3D';\r\nimport Matrix3x3 from './geom/Matrix3x3';\r\nimport Transform3D from './geom/Transform3D';\r\nimport StageEvent from './events/StageEvent';\r\nimport determineElement from './utils/determineElement';\r\n\t\r\nexport default class Stage3D extends DisplayObject3D\r\n{\r\n\t/**\r\n\t* @var Stage3D#x\r\n\t* @ignore\r\n\t**/\r\n\t/**\r\n\t* @var Stage3D#y\r\n\t* @ignore\r\n\t**/\r\n\t/**\r\n\t* @var Stage3D#z\r\n\t* @ignore\r\n\t**/\r\n\t/**\r\n\t* @var Stage3D#rotX\r\n\t* @ignore\r\n\t**/\r\n\t/**\r\n\t* @var Stage3D#rotY\r\n\t* @ignore\r\n\t**/\r\n\t/**\r\n\t* @var Stage3D#rotZ\r\n\t* @ignore\r\n\t**/\r\n\t/**\r\n\t* @var Stage3D#regX\r\n\t* @ignore\r\n\t**/\r\n\t/**\r\n\t* @var Stage3D#regY\r\n\t* @ignore\r\n\t**/\r\n\t/**\r\n\t* @var Stage3D#calc\r\n\t* @ignore\r\n\t**/\r\n\t\t\r\n\t/**\r\n\t* All 3D elements to be rendered are to be added to a Stage3D instance. Even though it inherits from DisplayObject3D it should be treated like a 2D object in the DOM as far as its own positioning/rotating goes. Any x, y, z, rotX, rotY, and rotZ properties are not intended to function; just use CSS positioning. If you want a container for 3D elements that you can move and rotate in 3D space then see {@link Group3D}.\r\n\t* <br><br>\r\n\t* Also note that a Stage3D needs to be updated each frame. If autoRender is used (as is default) it will just constantly update. This is not as taxing as it would seem since it uses a diry/clean rendering system. For slightly better performance you can update manually as needed using the [update]{@link Stage3D#update} method.\r\n\t* <br><br>\r\n\t* In almost all ways the API to the Stage3D is a mimic of the Group3D. You can treat manipulation of display list children within them almost identically (e.g. add, remove, getChildById, etc).\r\n\t* @class Stage3D\r\n\t* @extends DisplayObject3D\r\n\t* @arg element - An argument identifying the HTML Element the display object is to associate with. Can be the actual element object itself, or a query selector string which will identify the intended HTML element already in the DOM.\r\n\t* @arg {Boolean} [autoRender=true] - Shortcut to the set [autoRender]{@link Stage3D#autoRender} property.\r\n\t* @arg {Number} [FPS=30] - Allows you to determine the update rate of the autoRender in frames per second.\r\n\t**/\r\n\tconstructor(_el, autoRend = true, fps = 30)\r\n\t{\r\n\t\tsuper();\r\n\t\t\r\n\t\tif (_el)\r\n\t\t{\r\n\t\t\tthis.element = determineElement(_el);\r\n\t\t\tthis.id = this.element.hasAttribute('id') ? this.element.attributes.id.value : 'stage_'+(DisplayObject3D.idCount++);\r\n\t\t\tthis.element.dom3dObject = this;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tthrow new Error('::DOM3D:: No element/selector/markup was given to Stage3D constructor.');\r\n\t\t}\r\n\t\t\r\n\t\tthis.registeredChildren = [];\r\n\t\tthis.lowestZIndex = 0;\r\n\t\tthis.updateInterval = 0;\r\n\t\t\r\n\t\t/**\r\n\t\t* Stage3D inherits the stage property from DisplayObject3D, which identifies the root stage. However, it will simply always point to itself in the case of a Stage3D object.\r\n\t\t* @var {Stage3D} Stage3D#stage\r\n\t\t* @readonly\r\n\t\t* @default this\r\n\t\t**/\r\n\t\tthis.stage = this;\r\n\t\t\r\n\t\t/**\r\n\t\t* distortion affects how the location of objects are distorted (lesser for further away, more for closer) as they move on the z-axis.\r\n\t\t* @var {Number} Stage3D#distortion\r\n\t\t* @default 6\r\n\t\t**/\r\n\t\tthis.distortion = 6;\r\n\t\t\r\n\t\t/**\r\n\t\t* zoom affects how objects are scaled as they move on the z-axis. Experiment to get the effect that works for your use. Any object with a calculated z coordinate higher than the zoom will be considered behind the viewer, and not render.\r\n\t\t* @var {Number} Stage3D#zoom\r\n\t\t* @default 5000\r\n\t\t**/\r\n\t\tthis.zoom = 5000;\r\n\t\t\r\n\t\t/**\r\n\t\t* Allows access to the Array of child objects for this container. Special care should be taken when accessing to not modify the original Array.\r\n\t\t* @var Stage3D#children {Array}\r\n\t\t* @readonly\r\n\t\t* @default [empty Array]\r\n\t\t**/\r\n\t\tthis.children = [];\r\n\t\t\r\n\t\t/**\r\n\t\t* A Stage3D will have an isGroup property of true for identification purposes. Both Stage3D and Group3D will have this property as true, as they are both container/group type concepts. This property is made to identify this object as a general concept of grouping/containing 3D elements, as opposed to identifying a certain class.\r\n\t\t* @var Stage3D#isGroup {Boolean}\r\n\t\t* @readonly\r\n\t\t* @default true\r\n\t\t**/\r\n\t\tthis.isGroup = true;\r\n\t\tthis.matrix = new Matrix3x3();\r\n\t\tthis.transform3D = new Transform3D();\r\n\t\t\r\n\t\t// set the FPS private var\r\n\t\tthis._FPS = fps;\r\n\t\t\r\n\t\t// set the autoRender private var and setter\r\n\t\tthis._autoRender = false;\r\n\t\tthis.autoRender = autoRend;\r\n\t\t\r\n\t\t// private\r\n\t\tthis._orthographic = false;\r\n\t\t\r\n\t\t/**\r\n\t\t* An array that can be filled with effects objects. An effect object must have a `render` method that can take an argumen for the object.\r\n\t\t* @method Stage3D#effects\r\n\t\t**/\r\n\t\tthis.effects = [];\r\n\t}\r\n\t\r\n\t/**\r\n\t* Sets whether this stage will render all of its children orthographically or not.\r\n\t* @note Renders the entire scene orthographically regardless of the settings of groups within the scene.\r\n\t* @var Stage3D#orthographic {Boolean}\r\n\t* @default false\r\n\t**/\r\n\tget orthographic(){ return this._orthographic; }\r\n\tset orthographic(v)\r\n\t{\r\n\t\tif (v != this._orthographic)\r\n\t\t{\r\n\t\t\tthis._dirty = true;\r\n\t\t\tthis._orthographic = v;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t* add allows objects to be added to this Stage3D. Note: Stage3D instances are meant to be roots of a 3D scene. Do not add a Stage3D to another type of group.\r\n\t* @method Stage3D#add\r\n\t* @arg {DisplayObject3D} - Any object that inherits from DisplayObject3D may be added.\r\n\t* @returns {DisplayObject3D} Returns this Stage3D object for chaining.\r\n\t**/\r\n\tadd()\r\n\t{\r\n\t\tfor (var i=0,ii=arguments.length; i<ii; i++)\r\n\t\t{\r\n\t\t\tvar c = arguments[i];\r\n\t\t\r\n\t\t\tif (c instanceof Stage3D)\r\n\t\t\t\tthrow new Error(\"::DOM3D:: You cannot add a Stage3D to a group!\");\r\n\t\t\t\r\n\t\t\tif (!this.contains(c))\r\n\t\t\t{\r\n\t\t\t\tif (c.parent !== null)\r\n\t\t\t\t\tc.parent.remove(c);\r\n\t\t\t\t\r\n\t\t\t\tthis.children.push(c);\r\n\t\t\t\tif (this.stage)\r\n\t\t\t\t\tthis.stage.registerChild(c);\r\n\t\t\t\tc.parent = this;\r\n\t\t\t\t\r\n\t\t\t\t// add element to the right spot in actual DOM\r\n\t\t\t\tif (this.element !== c.element.parentElement)\r\n\t\t\t\t\tthis.element.appendChild(c.element);\r\n\t\t\t\t\r\n\t\t\t\t// this engine requires block display and absolute positioning, enforce it here\r\n\t\t\t\tc.element.style.display = 'block';\r\n\t\t\t\tc.element.style.position = 'absolute';\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.render(false);\r\n\t\tif (this.stage)\r\n\t\t\tthis.stage.sort();\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t* remove allows objects that were added via [add]{@link Stage3D#add} to be removed.\r\n\t* @method Stage3D#remove\r\n\t* @arg {DisplayObject3D} - Any object that inherits from DisplayObject3D and has been added may be removed.\r\n\t* @returns {Stage3D} Returns this Stage3D object for chaining purposes.\r\n\t**/\r\n\tremove()\r\n\t{\r\n\t\tfor (var i=0,ii=arguments.length; i<ii; i++)\r\n\t\t{\r\n\t\t\tvar c = arguments[i];\r\n\t\t\r\n\t\t\tvar ind = this.children.indexOf(c);\r\n\t\t\tif (ind > -1)\r\n\t\t\t{\r\n\t\t\t\tthis.children.splice(ind,1);\r\n\t\t\t\tif (this.stage)\r\n\t\t\t\t\tthis.stage.unregisterChild(c);\r\n\t\t\t\tc.parent = null;\r\n\t\t\t\t\r\n\t\t\t\t// remove from actual DOM element\r\n\t\t\t\tc.element.remove();\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t* contains allows you to check if a DisplayObject3D is contained (has been added via add) by the Stage3D\r\n\t* @method Stage3D#contains\r\n\t* @arg {DisplayObject3D} - The object to test for.\r\n\t* @returns {Boolean} Returns a Boolean value for whether the Stage3D contains the object or not.\r\n\t**/\r\n\tcontains(c)\r\n\t{\r\n\t\treturn this.children.indexOf(c) > -1;\r\n\t}\r\n\t\r\n\tget numChildren()\r\n\t{\r\n\t\treturn this.children.length;\r\n\t}\r\n\t\r\n\t/**\r\n\t* getChildById allows you to get a child of the Stage3D by its id property (which, remember, will match the actual element's id attribute if it had one).\r\n\t* @method Stage3D#getChildById\r\n\t* @arg {String} - The String id to look for.\r\n\t* @returns {DisplayObject3D} Returns a the DisplayObject3D found if it is found. Returns null of none found.\r\n\t**/\r\n\tgetChildById(s)\r\n\t{\r\n\t\tvar i,ii;\r\n\t\tfor (i=0,ii=this.children.length; i < ii; i++)\r\n\t\t\tif (this.children[i].id == s)\r\n\t\t\t\treturn this.children[i];\r\n\t\t\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\t/**\r\n\t* getChildByElement allows you to get a child of the Stage3D by its associated HTML Element.\r\n\t* @method Stage3D#getChildByElement\r\n\t* @arg {HTMLElement} - The associated HTMLElement of the display object you're looking for.\r\n\t* @returns {DisplayObject3D} Returns a the DisplayObject3D found if it is found. Returns null of none found.\r\n\t**/\r\n\tgetChildByElement(e)\r\n\t{\r\n\t\tvar i,ii;\r\n\t\tfor (i=0,ii=this.children.length; i < ii; i++)\r\n\t\t\tif (this.children[i].element == e)\r\n\t\t\t\treturn this.children[i];\r\n\t\t\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\t// internal\r\n\tregisterChild(c)\r\n\t{\r\n\t\tif (c.isGroup)\r\n\t\t{\r\n\t\t\tvar i, ii, ch = c.children;\r\n\t\t\tc.setStage(this);\r\n\t\t\tfor (i=0, ii=ch.length; i<ii; i++)\r\n\t\t\t\tthis.registerChild(ch[i]);\r\n\t\t}\r\n\t\telse if (this.registeredChildren.indexOf(c) == -1)\r\n\t\t{\r\n\t\t\tthis.registeredChildren.push(c);\r\n\t\t\tc.setStage(this);\r\n\t\t}\r\n\t}\r\n\t\r\n\t// internal\r\n\tunregisterChild(c)\r\n\t{\r\n\t\tvar ind = this.registeredChildren.indexOf(c);\r\n\t\tif (c.isGroup)\r\n\t\t{\r\n\t\t\tvar i, ii, ch = c.children;\r\n\t\t\tfor (i=0, ii=ch.length; i<ii; i++)\r\n\t\t\t\tthis.unregisterChild(ch[i]);\r\n\t\t}\r\n\t\telse if (ind > -1)\r\n\t\t{\r\n\t\t\tthis.registeredChildren.splice(ind,1);\r\n\t\t\tc.setStage(null);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t* This method must be called in order for the Stage3D instance to update every time something changes. Normally you let the stage autoRender, which will update 30 fps by default. However, you can turn autoRender off and update manually.\r\n\t* @method Stage3D#update\r\n\t* @returns {Boolean} Returns true if the update happened, false if it was cancelled on the update event.\r\n\t**/\r\n\tupdate()\r\n\t{\r\n\t\tvar cont = this.element.dispatchEvent(new StageEvent(StageEvent.UPDATE));\r\n\t\tif (!cont)\r\n\t\t\treturn false;\r\n\t\t\r\n\t\tthis.render();\r\n\t\tthis.sort();\r\n\t\t\r\n\t\tthis.element.dispatchEvent(new StageEvent(StageEvent.AFTER_UPDATE));\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\t// internal\r\n\trender(forceUpdate = false)\r\n\t{\r\n\t\tvar i,ii;\r\n\t\tfor (i=0,ii=this.children.length; i < ii; i++)\r\n\t\t\tthis.children[i].render(forceUpdate);\r\n\t}\r\n\t\r\n\t// internal\r\n\tsort()\r\n\t{\r\n\t\tvar i, obj, sZ = this.lowestZIndex;\r\n\t\t\r\n\t\tthis.registeredChildren.sort(function(a,b){ return b.transform3D.concatenatedCoordinates.z - a.transform3D.concatenatedCoordinates.z; });\r\n\t\t\r\n\t\tfor (i=this.registeredChildren.length-1; i > -1; i--)\r\n\t\t\tthis.registeredChildren[i].element.style.zIndex = sZ++;\r\n\t}\r\n\t\r\n\t/**\r\n\t* Allows you to turn off/on autoRender. If false then you must tell the scene to update manually via the update method.\r\n\t* @var Stage3D#autoRender {Boolean}\r\n\t* @default true\r\n\t**/\r\n\tget autoRender(){ return this._autoRender; }\r\n\tset autoRender(v)\r\n\t{\r\n\t\t// if already that way do nothing\r\n\t\tif (v === this._autoRender)\r\n\t\t\treturn;\r\n\t\t\r\n\t\t// if turning it on\r\n\t\tif (v) {\r\n\t\t\tvar boundUpdate = this.update.bind(this);\r\n\t\t\tthis.updateInterval = setInterval(boundUpdate, 1000/this._FPS);\r\n\t\t\tsetTimeout(boundUpdate, 1);\t\r\n\t\t}\r\n\t\t// if turning it off\r\n\t\telse {\r\n\t\t\tif (this.updateInterval)\r\n\t\t\t\tclearInterval(this.updateInterval);\r\n\t\t}\r\n\t\t\r\n\t\t// update private var\r\n\t\tthis._autoRender = v;\r\n\t}\r\n\t\r\n\t/**\r\n\t* Allows you to determine the rate at which the scene updates during autoRender.\r\n\t* @var Stage3D#FPS {Number}\r\n\t* @default 30\r\n\t**/\r\n\tget FPS(){ return this._FPS; }\r\n\tset FPS(v)\r\n\t{\r\n\t\t// if already that way do nothing\r\n\t\tif (v === this._FPS)\r\n\t\t\treturn;\r\n\t\t\r\n\t\t// it's different, so set new val\r\n\t\tthis._FPS = v;\r\n\t\t\r\n\t\t// if not auto-rendering then no need to do anything else\r\n\t\tif (!this._autoRender)\r\n\t\t\treturn;\r\n\t\t\r\n\t\t// otherwise we need to reset the auto-rendering\r\n\t\tthis.autoRender = false;\r\n\t\tthis.autoRender = true;\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./C:/Users/R2D2/projects/dom3d/src/Stage3D.js","\r\nexport default class StageEvent\r\n{\r\n\t/**\r\n\t* Constant for the event that dispatches from the Stage3D element before every update.\r\n\t* @const StageEvent.UPDATE {String}\r\n\t* @note Using `.preventDefault()` within a listener for this event will cancel the upcoming render.\r\n\t*/\r\n\tstatic get UPDATE() { return 'stageupdate' };\r\n\t\r\n\t/**\r\n\t* Constant for the event that dispatches from the Stage3D element after every update.\r\n\t* @const StageEvent.AFTER_UPDATE {String}\r\n\t*/\r\n\tstatic get AFTER_UPDATE() { return 'afterstageupdate' };\r\n\t\r\n\t/**\r\n\t* Constructs a StageEvent. Because on Internet Explorer `Event` is an object, not a function, this is\r\n\t* not a true extension of Event. The constructor creates and returns an Event itself instead of a StageEvent\r\n\t* which extends Event. So things such as `new StageEvent(StageEvent.UPDATE) instanceof StageEvent` will be false.\r\n\t* @note This is mostly instantiated internally. Externally the important parts are the StageEvent constants, which are used to add listeners, e.g. `myStage.addListener(StageEvent.UPDATE, handleUpdate)`\r\n\t* @class StageEvent\r\n\t* @extends Event\r\n\t* @arg type - The type of StageEvent being created. Must be a valid value from one of the StageEvent class constants.\r\n\t**/\r\n\tconstructor(type)\r\n\t{\r\n\t\tvar initObj;\r\n\t\tif (type === StageEvent.UPDATE)\r\n\t\t\tinitObj = {bubbles:false, cancelable:true};\r\n\t\telse if (type === StageEvent.AFTER_UPDATE)\r\n\t\t\tinitObj = {bubbles:false, cancelable:false};\r\n\t\telse\r\n\t\t\tthrow new Error('::DOM3D:: Invalid StageEvent type.')\r\n\t\t\r\n\t\tif (typeof Event === 'function') {\r\n\t\t\treturn new Event(type, initObj);\r\n\t\t} else {\r\n\t\t\tif (initObj === undefined) initObj = {};\r\n\t\t\tvar evt = document.createEvent('Event');\r\n\t\t\tevt.initEvent(type, !!initObj.bubbles, !!initObj.cancelable);\r\n\t\t\treturn evt;\r\n\t\t}\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./C:/Users/R2D2/projects/dom3d/src/events/StageEvent.js","\r\n// determines how to use/create what's supplied as a constructor\r\n// for a given display object as actual HTML\r\n\r\n// 1: if nothing given returns empty div\r\n// 2: if an actual HTMLElement is given then just return that\r\n// 3: if an object is given treats as object params for buildElementFromObject (see below)\r\n// 4: if string is given then either treats as literal markup (if starts with '<') or as a query selector for preexisting element\r\nexport default function determineElement(content)\r\n{\r\n\t// if none given, make a div\r\n\tif (!content)\r\n\t\treturn document.createElement('div');\r\n\t\r\n\t// if HTMLElement return as is\r\n\tif (content instanceof HTMLElement)\r\n\t\treturn content;\r\n\t\r\n\t// if an object is given, make an element based on the criteria\r\n\tif (typeof content === 'object')\r\n\t\treturn buildElementFromObject(content);\r\n\t\r\n\t// if it's a string...\r\n\tif (typeof content === 'string') {\r\n\t\t// if it's a piece of HTML parse it and return 1 element\r\n\t\tif (content.charAt(0) === '<') {\r\n\t\t\tvar wrap = document.createElement('div');\r\n\t\t\twrap.innerHTML = content;\r\n\t\t\treturn wrap.firstChild;\r\n\t\t}\r\n\t\t// otherwise assume it's a query selector and return the first match\r\n\t\telse {\r\n\t\t\treturn document.querySelector(content);\r\n\t\t}\r\n\t}\r\n\t\r\n\t// otherwise throw\r\n\tthrow new Error('::DOM3D:: Invalid content given for creation of element.');\r\n}\r\n\r\n\r\n// type: ['div' or 'img' if has a `src`] the element type to make\r\n// id: specify an id for the element\r\n// className: string class name, or space delimeted list, or Array of class names\r\n// innerHTML or content: specify innerHTML\r\n// src: makes it an img with a source\r\n// alt: should only use on images, but gives an alt tag\r\nfunction buildElementFromObject(obj)\r\n{\r\n\tvar elem = document.createElement(obj.type || (obj.src ? 'img':'div'));\r\n\t\r\n\tif (obj.id)\r\n\t\telem.setAttribute('id', obj.id);\r\n\t\r\n\tif (obj.className && typeof obj.className === 'string')\r\n\t\telem.className = obj.className;\r\n\tif (obj.className && Array.isArray(obj.className))\r\n\t\telem.className = obj.className.join(' ');\r\n\t\r\n\tif (obj.content)\r\n\t\telem.innerHTML = obj.content;\r\n\tif (obj.innerHTML)\r\n\t\telem.innerHTML = obj.innerHTML;\r\n\t\r\n\tif (obj.src)\r\n\t\telem.src = obj.src;\r\n\tif (obj.alt)\r\n\t\telem.alt = obj.alt;\r\n\t\r\n\treturn elem;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./C:/Users/R2D2/projects/dom3d/src/utils/determineElement.js","\r\nimport DisplayObject3D from './DisplayObject3D';\r\nimport Stage3D from './Stage3D';\r\nimport Matrix3x3 from './geom/Matrix3x3';\r\nimport Transform3D from './geom/Transform3D';\r\nimport determineElement from './utils/determineElement';\r\n\t\r\nexport default class Group3D extends DisplayObject3D\r\n{\r\n\t/**\r\n\t* The Group3D class acts as a container for 3D based elements. Any 3D elements inside a Group3D will move and rotate as the Group3D does in a forward kinematic fashion. Group3D instances can also contain other Group3D instances and create infinitely deep forward kinematics.\r\n\t* @class Group3D\r\n\t* @extends DisplayObject3D\r\n\t* @arg element - An argument identifying the HTML Element the display object is to associate with. Can be the actual element itself, an HTML string representing an element to create, or a query selector string which will identify the intended HTML element already in the DOM.\r\n\t**/\r\n\tconstructor(_el)\r\n\t{\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis.element = determineElement(_el);\r\n\t\tthis.id = this.element.hasAttribute('id') ? this.element.attributes.id.value : 'group_'+(DisplayObject3D.idCount++);\r\n\t\tthis.element.dom3dObject = this;\r\n\t\t\r\n\t\tthis.matrix = new Matrix3x3();\r\n\t\tthis.transform3D = new Transform3D();\r\n\t\t\r\n\t\t// private\r\n\t\tthis._orthographic = false;\r\n\t\t\r\n\t\t/**\r\n\t\t* Allows access to the Array of child objects for this container. Special care should be taken when accessing to not modify the original Array.\r\n\t\t* @var Group3D#children {Array}\r\n\t\t* @readonly\r\n\t\t* @default [empty Array]\r\n\t\t**/\r\n\t\tthis.children = [];\r\n\t\t\r\n\t\t/**\r\n\t\t* A Group3D will have an isGroup property of true for identification purposes. Stage3D instances will also have it. This serves to identify the object as the general concept of a 3D group/container, as opposed to identifying it as a specific Group3D class instance.\r\n\t\t* @var Group3D#isGroup {Boolean}\r\n\t\t* @readonly\r\n\t\t* @default true\r\n\t\t**/\r\n\t\tthis.isGroup = true;\r\n\t}\r\n\t\r\n\t/**\r\n\t* add allows objects to be added to this Group3D. Note: likewise, a Group3D instance is added to another Group3D or to the {@link Stage3D} via those instances' `add` methods as well.\r\n\t* @method Group3D#add\r\n\t* @arg {DisplayObject3D} - Any object that inherits from DisplayObject3D may be added.\r\n\t* @returns {DisplayObject3D} Returns this Group3D object for chaining.\r\n\t**/\r\n\tadd()\r\n\t{\r\n\t\tfor (var i=0,ii=arguments.length; i<ii; i++)\r\n\t\t{\r\n\t\t\tvar c = arguments[i];\r\n\t\t\t\r\n\t\t\tif (c === this)\r\n\t\t\t\tthrow new Error(\"::DOM3D:: You cannot add a 3D group to itself!\");\r\n\t\t\tif (c instanceof Stage3D)\r\n\t\t\t\tthrow new Error(\"::DOM3D:: You cannot add a Stage3D to a group!\");\r\n\t\t\t\r\n\t\t\tif (!this.contains(c))\r\n\t\t\t{\r\n\t\t\t\tif (c.parent !== null)\r\n\t\t\t\t\tc.parent.remove(c);\r\n\t\t\t\t\r\n\t\t\t\tthis.children.push(c);\r\n\t\t\t\tif (this.stage)\r\n\t\t\t\t\tthis.stage.registerChild(c);\r\n\t\t\t\tc.parent = this;\r\n\t\t\t\t\r\n\t\t\t\t// add element to the right spot in actual DOM\r\n\t\t\t\tif (this.element !== c.element.parentElement)\r\n\t\t\t\t\tthis.element.appendChild(c.element);\r\n\t\t\t\t\r\n\t\t\t\t// this engine requires block display and absolute positioning, enforce it here\r\n\t\t\t\tc.element.style.display = 'block';\r\n\t\t\t\tc.element.style.position = 'absolute';\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (this.stage) {\r\n\t\t\tthis.render(false);\r\n\t\t\tthis.stage.sort();\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t* remove allows objects that were added via [add]{@link Group3D#add} to be removed.\r\n\t* @method Group3D#remove\r\n\t* @arg {DisplayObject3D} - Any object that inherits from DisplayObject3D and has been added may be removed.\r\n\t* @returns {Group3D} Returns this Group3D object for chaining purposes.\r\n\t**/\r\n\tremove()\r\n\t{\r\n\t\tfor (var i=0,ii=arguments.length; i<ii; i++)\r\n\t\t{\r\n\t\t\tvar c = arguments[i];\r\n\t\t\t\r\n\t\t\tvar ind = this.children.indexOf(c);\r\n\t\t\tif (ind > -1)\r\n\t\t\t{\r\n\t\t\t\tthis.children.splice(ind,1);\r\n\t\t\t\tif (this.stage)\r\n\t\t\t\t\tthis.stage.unregisterChild(c);\r\n\t\t\t\tc.parent = null;\r\n\t\t\t\t\r\n\t\t\t\t// take element out of DOM\r\n\t\t\t\tc.element.remove();\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t* contains allows you to check if a DisplayObject3D is contained (has been added via add) by the Group3D\r\n\t* @method Group3D#contains\r\n\t* @arg {DisplayObject3D} - The object to test for.\r\n\t* @returns {Boolean} Returns a Boolean value for whether the Group3D contains the object or not.\r\n\t**/\r\n\tcontains(c)\r\n\t{\r\n\t\treturn this.children.indexOf(c) > -1;\r\n\t}\r\n\t\r\n\tget numChildren()\r\n\t{\r\n\t\treturn this.children.length;\r\n\t}\r\n\t\r\n\t/**\r\n\t* getChildById allows you to get a child of the Group3D by its id property (which, remember, will match the actual element's id attribute if it had one).\r\n\t* @method Group3D#getChildById\r\n\t* @arg {String} - The String id to look for.\r\n\t* @returns {DisplayObject3D} Returns a the DisplayObject3D found if it is found. Returns null of none found.\r\n\t**/\r\n\tgetChildById(s)\r\n\t{\r\n\t\tvar i,ii;\r\n\t\tfor (i=0,ii=this.children.length; i < ii; i++)\r\n\t\t\tif (this.children[i].id === s)\r\n\t\t\t\treturn this.children[i];\r\n\t\t\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\t/**\r\n\t* getChildByElement allows you to get a child of the Group3D by its associated HTML Element.\r\n\t* @method Group3D#getChildByElement\r\n\t* @arg {HTMLElement} - The associated HTMLElement of the display object you're looking for.\r\n\t* @returns {DisplayObject3D} Returns a the DisplayObject3D found if it is found. Returns null of none found.\r\n\t**/\r\n\tgetChildByElement(e)\r\n\t{\r\n\t\tvar i,ii;\r\n\t\tfor (i=0,ii=this.children.length; i < ii; i++)\r\n\t\t\tif (this.children[i].element === e)\r\n\t\t\t\treturn this.children[i];\r\n\t\t\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\t/**\r\n\t* Sets whether this group will render its direct children orthographically or not. Important for the rendering of primitive shapes, because otherwise edge geometry is not precise with neighboring elements.\r\n\t* @note If a group's orthographic property is set to true, then any groups it contains should also be set to true.\r\n\t* @var Group3D#orthographic {Boolean}\r\n\t* @default false\r\n\t**/\r\n\tget orthographic(){ return this._orthographic; }\r\n\tset orthographic(v)\r\n\t{\r\n\t\tif (v != this._orthographic)\r\n\t\t{\r\n\t\t\tthis._dirty = true;\r\n\t\t\tthis._orthographic = v;\r\n\t\t}\r\n\t}\r\n\t\r\n\trender(pDirty)\r\n\t{\r\n\t\tvar i,ii;\r\n\t\tif (!this._dirty && !pDirty)\r\n\t\t{\r\n\t\t\t// give any child groups a chance to update even if this isn't dirty\r\n\t\t\tfor (i=0,ii=this.children.length; i < ii; i++)\r\n\t\t\t\tthis.children[i].render(false);\r\n\t\t\t\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tthis.updateWorld();\r\n\t\tthis.rotateCoords();\r\n\t\t\r\n\t\tfor (i=0,ii=this.children.length; i < ii; i++)\r\n\t\t\tthis.children[i].render(pDirty || this._dirty);\r\n\t\t\r\n\t\tthis._dirty = false;\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./C:/Users/R2D2/projects/dom3d/src/Group3D.js","\r\nimport DisplayObject3D from './DisplayObject3D';\r\nimport Matrix3x3 from './geom/Matrix3x3';\r\nimport Transform3D from './geom/Transform3D';\r\nimport determineElement from './utils/determineElement';\r\n\t\r\nexport default class Element3D extends DisplayObject3D\r\n{\r\n\t/**\r\n\t* The Element3D class is simply a 3D plane in the scene. Any DOM elements it contains will be part of that 2D plane, not their own 3D objects.\r\n\t* @class Element3D\r\n\t* @extends DisplayObject3D\r\n\t* @arg element - An argument identifying the HTML Element the display object is to associate with. Can be the actual element itself, an HTML string representing an element to create, or a query selector string which will identify the intended HTML element already in the DOM.\r\n\t**/\r\n\tconstructor(_el)\r\n\t{\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis.element = determineElement(_el);\r\n\t\tthis.id = this.element.hasAttribute('id') ? this.element.attributes.id.value : 'element_'+(DisplayObject3D.idCount++);\r\n\t\tthis.element.dom3dObject = this;\r\n\t\t\r\n\t\t/**\r\n\t\t* Allows locking of the Element3D facing forward at all times if set to true, regardless or local or global rotation. Can be set to true automatically by a scene made in the DOM by including a CSS class of \"dom3d-lockfacingfront\" on the Element3D element.\r\n\t\t* @var Element3D#lockFacingFront {Boolean}\r\n\t\t* @default false\r\n\t\t**/\r\n\t\tthis.lockFacingFront = false;\r\n\t\t\r\n\t\tthis.transformMatrix = new Matrix3x3();\r\n\t\tthis.transform3D = new Transform3D();\r\n\t}\r\n\t\r\n\trender(pDirty)\r\n\t{\r\n\t\tif (!this._dirty && !pDirty)\r\n\t\t\treturn;\r\n\t\tthis._dirty = false;\r\n\t\t\r\n\t\tthis.updateWorld();\r\n\t\tthis.rotateCoords();\r\n\t\tif (!this.lockFacingFront)\r\n\t\t\tthis.rotateObject();\r\n\t\telse\r\n\t\t\tthis.transformMatrix.zero();\r\n\t\tthis.renderObject();\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./C:/Users/R2D2/projects/dom3d/src/Element3D.js","\r\nimport DisplayObject3D from './DisplayObject3D';\r\nimport Matrix3x3 from './geom/Matrix3x3';\r\nimport Transform3D from './geom/Transform3D';\r\nimport determineElement from './utils/determineElement';\r\n\t\r\nexport default class PaperElement3D extends DisplayObject3D\r\n{\r\n\t/**\r\n\t* The PaperElement3D class is a type of Element3D which is meant to hold 2 child DOM elements which represent a front and a back which show depending on which way the object is facing in 3D space. Basically a 2 sided element.\r\n\t* <br><br>\r\n\t* When assigned an element via the constructor any direct child elements with the class names <code>dom3d-front</code> and <code>dom3d-back</code> will automatically be set up as the object's front and back. If no front/back are given in the constructor, or present as <code>dom3d-front</code> and <code>dom3d-back</code> classed children in the main element, then elements will be created automatically.\r\n\t* @class PaperElement3D\r\n\t* @extends DisplayObject3D\r\n\t* @arg element - An argument identifying the HTML Element the display object is to associate with. Can be the actual element itself, an HTML string representing an element to create, or a query selector string which will identify the intended HTML element already in the DOM.\r\n\t* @arg [front] - An optional argument identifying an HTML Element that is meant to be this object's front side. Can be the actual element itself, an HTML string representing an element to create, or a query selector string which will identify the intended HTML element already in the DOM.\r\n\t* @arg [back] - An optional argument identifying an HTML Element that is meant to be this object's back side. Can be the actual element itself, an HTML string representing an element to create, or a query selector string which will identify the intended HTML element already in the DOM.\r\n\t**/\r\n\tconstructor(_el, _fel, _bel)\r\n\t{\r\n\t\tsuper();\r\n\t\t\r\n\t\t/**\r\n\t\t* Set to an HTML Element child of this one which will show when its front is facing forward.\r\n\t\t* @var PaperElement3D#front {HTMLElement}\r\n\t\t* @default null\r\n\t\t**/\r\n\t\tthis.front = null;\r\n\t\t/**\r\n\t\t* Set to an HTML Element child of this one which will show when its back is facing forward.\r\n\t\t* @var PaperElement3D#back {HTMLElement}\r\n\t\t* @default null\r\n\t\t**/\r\n\t\tthis.back = null;\r\n\t\t/**\r\n\t\t* Used to read whether the object considers itself front-facing at the moment.\r\n\t\t* @var PaperElement3D#frontFacing {Boolean}\r\n\t\t* @readonly\r\n\t\t* @default true\r\n\t\t**/\r\n\t\tthis.frontFacing = true;\r\n\t\t\r\n\t\tthis.element = determineElement(_el);\r\n\t\tthis.id = this.element.hasAttribute('id') ? this.element.attributes.id.value : 'paperelement_'+(DisplayObject3D.idCount++);\r\n\t\tthis.element.dom3dObject = this;\r\n\t\t\r\n\t\tvar _f, _b;\r\n\t\tif (document.querySelector)\r\n\t\t{\r\n\t\t\t_f = this.element.querySelector('.dom3d-front');\r\n\t\t\t_b = this.element.querySelector('.dom3d-back');\r\n\t\t}\r\n\t\tvar determined_fel = determineElement(_fel || _f);\r\n\t\tvar determined_bel = determineElement(_bel || _b);\r\n\t\tthis.front = determined_fel;\r\n\t\tthis.back = determined_bel;\r\n\t\tthis.front.style.position = 'absolute';\r\n\t\tthis.back.style.position = 'absolute';\r\n\t\tthis.element.appendChild(this.front);\r\n\t\tthis.element.appendChild(this.back);\r\n\t\t\r\n\t\tthis.transformMatrix = new Matrix3x3();\r\n\t\tthis.transform3D = new Transform3D();\r\n\t\t\r\n\t\t// points for calculating winding\r\n\t\tvar self = this;\r\n\t\tthis.p1 = buildPoint(0,0);\r\n\t\tthis.p2 = buildPoint(100,0);\r\n\t\tthis.p3 = buildPoint(0,100);\r\n\t\tfunction buildPoint(x, y)\r\n\t\t{\r\n\t\t\tvar p = document.createElement('div');\r\n\t\t\tp.style.position = 'absolute';\r\n\t\t\tp.style.top = y+'px';\r\n\t\t\tp.style.left = x+'px';\r\n\t\t\tself.element.appendChild(p);\r\n\t\t\treturn p;\r\n\t\t}\r\n\t}\r\n\t\r\n\trender(pDirty)\r\n\t{\r\n\t\tif (!this._dirty && !pDirty)\r\n\t\t\treturn;\r\n\t\t\r\n\t\tthis.updateWorld();\r\n\t\tthis.rotateCoords();\r\n\t\tthis.rotateObject();\r\n\t\tthis.renderObject();\r\n\t\t\r\n\t\tthis._dirty = false;\r\n\t\t\r\n\t\tthis.determineFace();\r\n\t}\r\n\t\r\n\tdetermineFace()\r\n\t{\r\n\t\tvar p1rect = this.p1.getBoundingClientRect();\r\n\t\tvar p2rect = this.p2.getBoundingClientRect();\r\n\t\tvar p3rect = this.p3.getBoundingClientRect();\r\n\t\tvar p1x = p1rect.left;\r\n\t\tvar p1y = p1rect.top;\r\n\t\tvar p2x = p2rect.left;\r\n\t\tvar p2y = p2rect.top;\r\n\t\tvar p3x = p3rect.left;\r\n\t\tvar p3y = p3rect.top;\r\n\t\t\r\n\t\tthis.frontFacing = ((p2x-p1x)*(p3y-p1y) - (p2y-p1y)*(p3x-p1x)) > 0;\r\n\t\t\r\n\t\tif (this.back) {\r\n\t\t\tthis.back.style.visibility = this.frontFacing ? 'hidden' : 'visible';\r\n\t\t\tthis.back.style.pointerEvents = this.frontFacing ? 'none' : '';\r\n\t\t}\r\n\t\tif (this.front) {\r\n\t\t\tthis.front.style.visibility = this.frontFacing ? 'visible' : 'hidden';\r\n\t\t\tthis.front.style.pointerEvents = this.frontFacing ? '' : 'none';\r\n\t\t}\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./C:/Users/R2D2/projects/dom3d/src/PaperElement3D.js","\r\nimport Point3D from '../geom/Point3D';\r\n\r\nexport default class DepthOfField\r\n{\r\n\t/**\r\n\t* Allows the creation of a DepthOfField instance which can be pushed into the stage's `effects` array to apply the effect to a scene.\r\n\t* @class DepthOfField\r\n\t* @arg [strength] {Number} - Optional shortcut to set strength.\r\n\t* @arg [trueDistance] {Boolean} - Optional shortcut to set trueDistance.\r\n\t* @arg [focus] {Object} - Optional shortcut to set focus.\r\n\t**/\r\n\tconstructor(strength = 1, trueDistance = true, focus = null)\r\n\t{\r\n\t\t/**\r\n\t\t* Sets the strength of the effect.\r\n\t\t* @var DepthOfField#strength {Number}\r\n\t\t* @default 1\r\n\t\t**/\r\n\t\tthis.strength = strength;\r\n\t\t\r\n\t\t/**\r\n\t\t* Sets whether the effect utilizes true distance from the focus point (true) or simply the object's z location (false) for the effect.\r\n\t\t* @var DepthOfField#trueDistance {Boolean}\r\n\t\t* @default true\r\n\t\t**/\r\n\t\tthis.trueDistance = trueDistance;\r\n\t\t\r\n\t\t/**\r\n\t\t* Allows you to control the global point of focus for the depth of field. Can be set to a simple object with x, y, and z properties. If trueDistance is false then only the z is relevant.\r\n\t\t* @var DepthOfField#focus {Object}\r\n\t\t* @default {x:0,y:0,z:0}\r\n\t\t*/\r\n\t\tthis.focus = focus || {x:0,y:0,z:0};\r\n\t}\r\n\t\r\n\trender(obj)\r\n\t{\r\n\t\t// if it's a group then don't blur the group; get down to the components\r\n\t\tif (obj.isGroup)\r\n\t\t\treturn;\r\n\t\t\r\n\t\tvar coords = obj.transform3D.concatenatedCoordinates;\r\n\t\tvar dist = this.trueDistance ? Point3D.distance(this.focus, coords) : Math.abs(this.focus.z - coords.z);\r\n\t\tvar blurAmt = (this.strength * (dist/obj.stage.zoom)) * 25;\r\n\t\t\r\n\t\tvar newVal = `blur(${blurAmt}px)`;\r\n\t\tif (obj.style.filter !== newVal)\r\n\t\t\tobj.style.filter = obj.style.webkitFilter = newVal;\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./C:/Users/R2D2/projects/dom3d/src/effects/DepthOfField.js"],"sourceRoot":""}